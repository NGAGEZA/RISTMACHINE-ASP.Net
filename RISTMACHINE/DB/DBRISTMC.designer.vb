'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="DBRISTMC")>  _
Partial Public Class DBRISTMCDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertTB_FLOW_REQUEST(instance As TB_FLOW_REQUEST)
    End Sub
  Partial Private Sub UpdateTB_FLOW_REQUEST(instance As TB_FLOW_REQUEST)
    End Sub
  Partial Private Sub DeleteTB_FLOW_REQUEST(instance As TB_FLOW_REQUEST)
    End Sub
  Partial Private Sub InsertTB_MACHINE_DATA(instance As TB_MACHINE_DATA)
    End Sub
  Partial Private Sub UpdateTB_MACHINE_DATA(instance As TB_MACHINE_DATA)
    End Sub
  Partial Private Sub DeleteTB_MACHINE_DATA(instance As TB_MACHINE_DATA)
    End Sub
  Partial Private Sub InsertUser(instance As User)
    End Sub
  Partial Private Sub UpdateUser(instance As User)
    End Sub
  Partial Private Sub DeleteUser(instance As User)
    End Sub
  Partial Private Sub InsertTB_FLOW_SAFETY(instance As TB_FLOW_SAFETY)
    End Sub
  Partial Private Sub UpdateTB_FLOW_SAFETY(instance As TB_FLOW_SAFETY)
    End Sub
  Partial Private Sub DeleteTB_FLOW_SAFETY(instance As TB_FLOW_SAFETY)
    End Sub
  Partial Private Sub InsertTB_EQUIPMENT_CHECK(instance As TB_EQUIPMENT_CHECK)
    End Sub
  Partial Private Sub UpdateTB_EQUIPMENT_CHECK(instance As TB_EQUIPMENT_CHECK)
    End Sub
  Partial Private Sub DeleteTB_EQUIPMENT_CHECK(instance As TB_EQUIPMENT_CHECK)
    End Sub
  Partial Private Sub InsertTB_FILE_ATTACH(instance As TB_FILE_ATTACH)
    End Sub
  Partial Private Sub UpdateTB_FILE_ATTACH(instance As TB_FILE_ATTACH)
    End Sub
  Partial Private Sub DeleteTB_FILE_ATTACH(instance As TB_FILE_ATTACH)
    End Sub
  Partial Private Sub InsertTB_EQUIPMENT_DETAIL(instance As TB_EQUIPMENT_DETAIL)
    End Sub
  Partial Private Sub UpdateTB_EQUIPMENT_DETAIL(instance As TB_EQUIPMENT_DETAIL)
    End Sub
  Partial Private Sub DeleteTB_EQUIPMENT_DETAIL(instance As TB_EQUIPMENT_DETAIL)
    End Sub
  Partial Private Sub InsertV_PAGE_1(instance As V_PAGE_1)
    End Sub
  Partial Private Sub UpdateV_PAGE_1(instance As V_PAGE_1)
    End Sub
  Partial Private Sub DeleteV_PAGE_1(instance As V_PAGE_1)
    End Sub
  Partial Private Sub InsertV_PAGE_2(instance As V_PAGE_2)
    End Sub
  Partial Private Sub UpdateV_PAGE_2(instance As V_PAGE_2)
    End Sub
  Partial Private Sub DeleteV_PAGE_2(instance As V_PAGE_2)
    End Sub
  Partial Private Sub InsertV_PAGE_3(instance As V_PAGE_3)
    End Sub
  Partial Private Sub UpdateV_PAGE_3(instance As V_PAGE_3)
    End Sub
  Partial Private Sub DeleteV_PAGE_3(instance As V_PAGE_3)
    End Sub
  Partial Private Sub InsertV_PAGE_4(instance As V_PAGE_4)
    End Sub
  Partial Private Sub UpdateV_PAGE_4(instance As V_PAGE_4)
    End Sub
  Partial Private Sub DeleteV_PAGE_4(instance As V_PAGE_4)
    End Sub
  Partial Private Sub InsertTMP_REPORT2(instance As TMP_REPORT2)
    End Sub
  Partial Private Sub UpdateTMP_REPORT2(instance As TMP_REPORT2)
    End Sub
  Partial Private Sub DeleteTMP_REPORT2(instance As TMP_REPORT2)
    End Sub
  Partial Private Sub InsertTB_SECURITY(instance As TB_SECURITY)
    End Sub
  Partial Private Sub UpdateTB_SECURITY(instance As TB_SECURITY)
    End Sub
  Partial Private Sub DeleteTB_SECURITY(instance As TB_SECURITY)
    End Sub
  Partial Private Sub InsertTB_MACHINE_TOOL_CHECK_P3(instance As TB_MACHINE_TOOL_CHECK_P3)
    End Sub
  Partial Private Sub UpdateTB_MACHINE_TOOL_CHECK_P3(instance As TB_MACHINE_TOOL_CHECK_P3)
    End Sub
  Partial Private Sub DeleteTB_MACHINE_TOOL_CHECK_P3(instance As TB_MACHINE_TOOL_CHECK_P3)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.RISTMACHINE.My.MySettings.Default.DBRISTMCConnectionString1, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property TB_FLOW_REQUESTs() As System.Data.Linq.Table(Of TB_FLOW_REQUEST)
		Get
			Return Me.GetTable(Of TB_FLOW_REQUEST)
		End Get
	End Property
	
	Public ReadOnly Property TB_MACHINE_DATAs() As System.Data.Linq.Table(Of TB_MACHINE_DATA)
		Get
			Return Me.GetTable(Of TB_MACHINE_DATA)
		End Get
	End Property
	
	Public ReadOnly Property Users() As System.Data.Linq.Table(Of User)
		Get
			Return Me.GetTable(Of User)
		End Get
	End Property
	
	Public ReadOnly Property TB_FLOW_SAFETies() As System.Data.Linq.Table(Of TB_FLOW_SAFETY)
		Get
			Return Me.GetTable(Of TB_FLOW_SAFETY)
		End Get
	End Property
	
	Public ReadOnly Property TB_EQUIPMENT_CHECKs() As System.Data.Linq.Table(Of TB_EQUIPMENT_CHECK)
		Get
			Return Me.GetTable(Of TB_EQUIPMENT_CHECK)
		End Get
	End Property
	
	Public ReadOnly Property TB_FILE_ATTACHes() As System.Data.Linq.Table(Of TB_FILE_ATTACH)
		Get
			Return Me.GetTable(Of TB_FILE_ATTACH)
		End Get
	End Property
	
	Public ReadOnly Property TB_EQUIPMENT_DETAILs() As System.Data.Linq.Table(Of TB_EQUIPMENT_DETAIL)
		Get
			Return Me.GetTable(Of TB_EQUIPMENT_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property V_PAGE_1s() As System.Data.Linq.Table(Of V_PAGE_1)
		Get
			Return Me.GetTable(Of V_PAGE_1)
		End Get
	End Property
	
	Public ReadOnly Property V_PAGE_2s() As System.Data.Linq.Table(Of V_PAGE_2)
		Get
			Return Me.GetTable(Of V_PAGE_2)
		End Get
	End Property
	
	Public ReadOnly Property V_PAGE_3s() As System.Data.Linq.Table(Of V_PAGE_3)
		Get
			Return Me.GetTable(Of V_PAGE_3)
		End Get
	End Property
	
	Public ReadOnly Property V_PAGE_4s() As System.Data.Linq.Table(Of V_PAGE_4)
		Get
			Return Me.GetTable(Of V_PAGE_4)
		End Get
	End Property
	
	Public ReadOnly Property TMP_REPORT2s() As System.Data.Linq.Table(Of TMP_REPORT2)
		Get
			Return Me.GetTable(Of TMP_REPORT2)
		End Get
	End Property
	
	Public ReadOnly Property TB_SECURITies() As System.Data.Linq.Table(Of TB_SECURITY)
		Get
			Return Me.GetTable(Of TB_SECURITY)
		End Get
	End Property
	
	Public ReadOnly Property TB_MACHINE_TOOL_CHECK_P3s() As System.Data.Linq.Table(Of TB_MACHINE_TOOL_CHECK_P3)
		Get
			Return Me.GetTable(Of TB_MACHINE_TOOL_CHECK_P3)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.Insert_User")>  _
	Public Function Insert_User(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="OperatorNo", DbType:="NVarChar(10)")> ByVal operatorNo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Username", DbType:="NVarChar(20)")> ByVal username As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Password", DbType:="NVarChar(20)")> ByVal password As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Email", DbType:="NVarChar(30)")> ByVal email As String) As ISingleResult(Of Insert_UserResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), operatorNo, username, password, email)
		Return CType(result.ReturnValue,ISingleResult(Of Insert_UserResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.Validate_User")>  _
	Public Function Validate_User(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="OperatorNo", DbType:="NVarChar(20)")> ByVal operatorNo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Password", DbType:="NVarChar(20)")> ByVal password As String) As ISingleResult(Of Validate_UserResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), operatorNo, password)
		Return CType(result.ReturnValue,ISingleResult(Of Validate_UserResult))
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TB_FLOW_REQUEST")>  _
Partial Public Class TB_FLOW_REQUEST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _REQUEST_OP As String
	
	Private _SECT_MGR_OP As String
	
	Private _SECT_MGR_EMAIL As String
	
	Private _SECT_MGR_STAMP As String
	
	Private _DEPT_MGR_OP As String
	
	Private _DEPT_MGR_EMAIL As String
	
	Private _DEPT_MGR_STAMP As String
	
	Private _DIV_MGR_OP As String
	
	Private _DIV_MGR_EMAIL As String
	
	Private _DIV_MGR_STAMP As String
	
	Private _RATING As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _ADMIN_OP As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnREQUEST_OPChanging(value As String)
    End Sub
    Partial Private Sub OnREQUEST_OPChanged()
    End Sub
    Partial Private Sub OnSECT_MGR_OPChanging(value As String)
    End Sub
    Partial Private Sub OnSECT_MGR_OPChanged()
    End Sub
    Partial Private Sub OnSECT_MGR_EMAILChanging(value As String)
    End Sub
    Partial Private Sub OnSECT_MGR_EMAILChanged()
    End Sub
    Partial Private Sub OnSECT_MGR_STAMPChanging(value As String)
    End Sub
    Partial Private Sub OnSECT_MGR_STAMPChanged()
    End Sub
    Partial Private Sub OnDEPT_MGR_OPChanging(value As String)
    End Sub
    Partial Private Sub OnDEPT_MGR_OPChanged()
    End Sub
    Partial Private Sub OnDEPT_MGR_EMAILChanging(value As String)
    End Sub
    Partial Private Sub OnDEPT_MGR_EMAILChanged()
    End Sub
    Partial Private Sub OnDEPT_MGR_STAMPChanging(value As String)
    End Sub
    Partial Private Sub OnDEPT_MGR_STAMPChanged()
    End Sub
    Partial Private Sub OnDIV_MGR_OPChanging(value As String)
    End Sub
    Partial Private Sub OnDIV_MGR_OPChanged()
    End Sub
    Partial Private Sub OnDIV_MGR_EMAILChanging(value As String)
    End Sub
    Partial Private Sub OnDIV_MGR_EMAILChanged()
    End Sub
    Partial Private Sub OnDIV_MGR_STAMPChanging(value As String)
    End Sub
    Partial Private Sub OnDIV_MGR_STAMPChanged()
    End Sub
    Partial Private Sub OnRATINGChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRATINGChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnADMIN_OPChanging(value As String)
    End Sub
    Partial Private Sub OnADMIN_OPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_OP", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property REQUEST_OP() As String
		Get
			Return Me._REQUEST_OP
		End Get
		Set
			If (String.Equals(Me._REQUEST_OP, value) = false) Then
				Me.OnREQUEST_OPChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_OP = value
				Me.SendPropertyChanged("REQUEST_OP")
				Me.OnREQUEST_OPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SECT_MGR_OP", DbType:="VarChar(10)")>  _
	Public Property SECT_MGR_OP() As String
		Get
			Return Me._SECT_MGR_OP
		End Get
		Set
			If (String.Equals(Me._SECT_MGR_OP, value) = false) Then
				Me.OnSECT_MGR_OPChanging(value)
				Me.SendPropertyChanging
				Me._SECT_MGR_OP = value
				Me.SendPropertyChanged("SECT_MGR_OP")
				Me.OnSECT_MGR_OPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SECT_MGR_EMAIL", DbType:="VarChar(30)")>  _
	Public Property SECT_MGR_EMAIL() As String
		Get
			Return Me._SECT_MGR_EMAIL
		End Get
		Set
			If (String.Equals(Me._SECT_MGR_EMAIL, value) = false) Then
				Me.OnSECT_MGR_EMAILChanging(value)
				Me.SendPropertyChanging
				Me._SECT_MGR_EMAIL = value
				Me.SendPropertyChanged("SECT_MGR_EMAIL")
				Me.OnSECT_MGR_EMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SECT_MGR_STAMP", DbType:="VarChar(20)")>  _
	Public Property SECT_MGR_STAMP() As String
		Get
			Return Me._SECT_MGR_STAMP
		End Get
		Set
			If (String.Equals(Me._SECT_MGR_STAMP, value) = false) Then
				Me.OnSECT_MGR_STAMPChanging(value)
				Me.SendPropertyChanging
				Me._SECT_MGR_STAMP = value
				Me.SendPropertyChanged("SECT_MGR_STAMP")
				Me.OnSECT_MGR_STAMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPT_MGR_OP", DbType:="VarChar(10)")>  _
	Public Property DEPT_MGR_OP() As String
		Get
			Return Me._DEPT_MGR_OP
		End Get
		Set
			If (String.Equals(Me._DEPT_MGR_OP, value) = false) Then
				Me.OnDEPT_MGR_OPChanging(value)
				Me.SendPropertyChanging
				Me._DEPT_MGR_OP = value
				Me.SendPropertyChanged("DEPT_MGR_OP")
				Me.OnDEPT_MGR_OPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPT_MGR_EMAIL", DbType:="VarChar(30)")>  _
	Public Property DEPT_MGR_EMAIL() As String
		Get
			Return Me._DEPT_MGR_EMAIL
		End Get
		Set
			If (String.Equals(Me._DEPT_MGR_EMAIL, value) = false) Then
				Me.OnDEPT_MGR_EMAILChanging(value)
				Me.SendPropertyChanging
				Me._DEPT_MGR_EMAIL = value
				Me.SendPropertyChanged("DEPT_MGR_EMAIL")
				Me.OnDEPT_MGR_EMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPT_MGR_STAMP", DbType:="VarChar(20)")>  _
	Public Property DEPT_MGR_STAMP() As String
		Get
			Return Me._DEPT_MGR_STAMP
		End Get
		Set
			If (String.Equals(Me._DEPT_MGR_STAMP, value) = false) Then
				Me.OnDEPT_MGR_STAMPChanging(value)
				Me.SendPropertyChanging
				Me._DEPT_MGR_STAMP = value
				Me.SendPropertyChanged("DEPT_MGR_STAMP")
				Me.OnDEPT_MGR_STAMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIV_MGR_OP", DbType:="VarChar(10)")>  _
	Public Property DIV_MGR_OP() As String
		Get
			Return Me._DIV_MGR_OP
		End Get
		Set
			If (String.Equals(Me._DIV_MGR_OP, value) = false) Then
				Me.OnDIV_MGR_OPChanging(value)
				Me.SendPropertyChanging
				Me._DIV_MGR_OP = value
				Me.SendPropertyChanged("DIV_MGR_OP")
				Me.OnDIV_MGR_OPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIV_MGR_EMAIL", DbType:="VarChar(30)")>  _
	Public Property DIV_MGR_EMAIL() As String
		Get
			Return Me._DIV_MGR_EMAIL
		End Get
		Set
			If (String.Equals(Me._DIV_MGR_EMAIL, value) = false) Then
				Me.OnDIV_MGR_EMAILChanging(value)
				Me.SendPropertyChanging
				Me._DIV_MGR_EMAIL = value
				Me.SendPropertyChanged("DIV_MGR_EMAIL")
				Me.OnDIV_MGR_EMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIV_MGR_STAMP", DbType:="VarChar(20)")>  _
	Public Property DIV_MGR_STAMP() As String
		Get
			Return Me._DIV_MGR_STAMP
		End Get
		Set
			If (String.Equals(Me._DIV_MGR_STAMP, value) = false) Then
				Me.OnDIV_MGR_STAMPChanging(value)
				Me.SendPropertyChanging
				Me._DIV_MGR_STAMP = value
				Me.SendPropertyChanged("DIV_MGR_STAMP")
				Me.OnDIV_MGR_STAMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RATING", DbType:="Int")>  _
	Public Property RATING() As System.Nullable(Of Integer)
		Get
			Return Me._RATING
		End Get
		Set
			If (Me._RATING.Equals(value) = false) Then
				Me.OnRATINGChanging(value)
				Me.SendPropertyChanging
				Me._RATING = value
				Me.SendPropertyChanged("RATING")
				Me.OnRATINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMIN_OP", DbType:="VarChar(10)")>  _
	Public Property ADMIN_OP() As String
		Get
			Return Me._ADMIN_OP
		End Get
		Set
			If (String.Equals(Me._ADMIN_OP, value) = false) Then
				Me.OnADMIN_OPChanging(value)
				Me.SendPropertyChanging
				Me._ADMIN_OP = value
				Me.SendPropertyChanged("ADMIN_OP")
				Me.OnADMIN_OPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TB_MACHINE_DATA")>  _
Partial Public Class TB_MACHINE_DATA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _MC_NO As String
	
	Private _REGISTER_DATE As System.Nullable(Of Date)
	
	Private _REGISTER_NEW_MC As Boolean
	
	Private _CANCEL_MC As Boolean
	
	Private _CATEGORY1_NEW_MC As Boolean
	
	Private _CATEGORY1_TF_MC As Boolean
	
	Private _CATEGORY1_OTH_MC As Boolean
	
	Private _CATEGORY1_MC_OTHER_DETAIL As String
	
	Private _CATEGORY2_NEW_MODEL_MC As Boolean
	
	Private _CATEGORY2_ORIGINAL_MODEL_MC As Boolean
	
	Private _CATEGORY2_OTH_MODEL_MC As Boolean
	
	Private _CATEGORY2_MC_OTHER_DETAIL As String
	
	Private _MAKER As String
	
	Private _COUNTRY As String
	
	Private _SUPPLIER As String
	
	Private _PROVIDER As String
	
	Private _TEL As String
	
	Private _TYPE_MC As String
	
	Private _SIZE_HP_MC As String
	
	Private _DIVISION As String
	
	Private _DEPARTMENT As String
	
	Private _SECTION As String
	
	Private _MC_NAME As String
	
	Private _MC_NO1 As String
	
	Private _MC_NO2 As String
	
	Private _MC_NO3 As String
	
	Private _MC_NO4 As String
	
	Private _MC_NO5 As String
	
	Private _MC_NO6 As String
	
	Private _MC_NO7 As String
	
	Private _MC_NO8 As String
	
	Private _MC_NO9 As String
	
	Private _MC_NO10 As String
	
	Private _DANGER_CHEME_1 As Boolean
	
	Private _DANGER_CHEME_2 As Boolean
	
	Private _DANGER_CHEME_3 As Boolean
	
	Private _DANGER_CHEME_4 As Boolean
	
	Private _DANGER_CHEME_NAME As String
	
	Private _CAS_NO As String
	
	Private _FLAMMABLE As Boolean
	
	Private _CORROSIVE As Boolean
	
	Private _POISON As Boolean
	
	Private _GAS As Boolean
	
	Private _SUBSTANCE_OTHER As Boolean
	
	Private _SUBSTANCE_OTHER_DETAIL As String
	
	Private _OBJ_POWDER As Boolean
	
	Private _OBJ_HEAT As Boolean
	
	Private _OBJ_NOISE As Boolean
	
	Private _OBJ_VIBRATE As Boolean
	
	Private _OBJ_POISONGAS As Boolean
	
	Private _OBJ_WASTE_WATER As Boolean
	
	Private _OBJ_RAY As Boolean
	
	Private _OBJ_SMOKE As Boolean
	
	Private _OBJ_ELECTRIC_WAVE As Boolean
	
	Private _OBJ_OTHER As Boolean
	
	Private _OBJ_OTHER_DETAIL As String
	
	Private _OBJ_CHEME_NAME As String
	
	Private _EQUIPMENT_HELMET As Boolean
	
	Private _EQUIPMENT_GLASSES As Boolean
	
	Private _EQUIPMENT_CHEMICAL_MASK As Boolean
	
	Private _EQUIPMENT_BIB_PROTECT_CHEMECAL As Boolean
	
	Private _EQUIPMENT_CHEMICAL_GLOVES As Boolean
	
	Private _EQUIPMENT_HEAT_RESISTANT_GLOVES As Boolean
	
	Private _EQUIPMENT_CUT_PROTECT_GLOVES As Boolean
	
	Private _EQUIPMENT_EYE_COVER As Boolean
	
	Private _EQUIPMENT_FACE_SHIELD As Boolean
	
	Private _EQUIPMENT_DUST_MASK As Boolean
	
	Private _EQUIPMENT_CHEMICAL_PACK As Boolean
	
	Private _EQUIPMENT_ELECTRIC_GLOVES As Boolean
	
	Private _EQUIPMENT_OTHER As Boolean
	
	Private _EQUIPMENT_OTHER_DETAIL As String
	
	Private _LAW_MC As Boolean
	
	Private _LAW_CHEMECALS As Boolean
	
	Private _LAW_ENVIRONMENTAL As Boolean
	
	Private _LAW_HIGH_PRESSURE_GAS As Boolean
	
	Private _LAW_PREVENT_STOP_FIRE As Boolean
	
	Private _LAW_FACTORY As Boolean
	
	Private _LAW_FUEL_REGULATORY As Boolean
	
	Private _LAW_OTHER As Boolean
	
	Private _LAW_OTHER_DETAIL As String
	
	Private _LAW_NAME As String
	
	Private _LAW_NOTICE As Boolean
	
	Private _LAW_NOTICE_DETAIL As String
	
	Private _LAW_APPROVE As Boolean
	
	Private _LAW_APPROVE_DETAIL As String
	
	Private _LAW_CHECK As Boolean
	
	Private _LAW_CHECK_DETAIL As String
	
	Private _IMG_TEMP_STAMP As String
	
	Private _IMG_TEMP_STAMP_CONTENT_TYPE As String
	
	Private _IMG_TEMP_STAMP_DATA As System.Data.Linq.Binary
	
	Private _REQUEST_NAME_APPROVE As String
	
	Private _REQUEST_APPROVE_DATE As System.Nullable(Of Date)
	
	Private _SECT_MGR_NAME_APPROVE As String
	
	Private _SECT_MGR_APPROVE_DATE As System.Nullable(Of Date)
	
	Private _DEPT_MGR_NAME_APPROVE As String
	
	Private _DEPT_MGR_APPROVE_DATE As System.Nullable(Of Date)
	
	Private _DIV_MGR_NAME_APPROVE As String
	
	Private _DIV_MGR_APPROVE_DATE As System.Nullable(Of Date)
	
	Private _MCEQ_SUBCOM_NAME_APPROVE As String
	
	Private _MCEQ_SUBCOM_APPROVE_DATE As System.Nullable(Of Date)
	
	Private _SAFETY_OFFICER_NAME_APPROVE As String
	
	Private _SAFETY_OFFICER_APPROVE_DATE As System.Nullable(Of Date)
	
	Private _SAFETY_MGR_NAME_APPROVE As String
	
	Private _SAFETY_MGR_APPROVE_DATE As System.Nullable(Of Date)
	
	Private _OPNO_ADD As String
	
	Private _DATE_ADD As System.Nullable(Of Date)
	
	Private _OPNO_UPDATE As String
	
	Private _DATE_UPDATE As System.Nullable(Of Date)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _STATUS_NAME As String
	
	Private _IP As String
	
	Private _DOCUMENT_ATTACH_NAME As String
	
	Private _DOCUMENT_ATTACH_CONTENT_TYPE As String
	
	Private _DOCUMENT_ATTACH_DATA() As Byte
	
	Private _IMAGE_ATTACH_NAME As String
	
	Private _IMAGE_ATTACH_CONTENT_TYPE As String
	
	Private _IMAGE_ATTACH_DATA As System.Data.Linq.Binary
	
	Private _LAYOUT_ATTACH_NAME As String
	
	Private _LAYOUT_ATTACH_CONTENT_TYPE As String
	
	Private _LAYOUT_ATTACH_DATA() As Byte
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnMC_NOChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NOChanged()
    End Sub
    Partial Private Sub OnREGISTER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREGISTER_DATEChanged()
    End Sub
    Partial Private Sub OnREGISTER_NEW_MCChanging(value As Boolean)
    End Sub
    Partial Private Sub OnREGISTER_NEW_MCChanged()
    End Sub
    Partial Private Sub OnCANCEL_MCChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCANCEL_MCChanged()
    End Sub
    Partial Private Sub OnCATEGORY1_NEW_MCChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCATEGORY1_NEW_MCChanged()
    End Sub
    Partial Private Sub OnCATEGORY1_TF_MCChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCATEGORY1_TF_MCChanged()
    End Sub
    Partial Private Sub OnCATEGORY1_OTH_MCChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCATEGORY1_OTH_MCChanged()
    End Sub
    Partial Private Sub OnCATEGORY1_MC_OTHER_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGORY1_MC_OTHER_DETAILChanged()
    End Sub
    Partial Private Sub OnCATEGORY2_NEW_MODEL_MCChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCATEGORY2_NEW_MODEL_MCChanged()
    End Sub
    Partial Private Sub OnCATEGORY2_ORIGINAL_MODEL_MCChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCATEGORY2_ORIGINAL_MODEL_MCChanged()
    End Sub
    Partial Private Sub OnCATEGORY2_OTH_MODEL_MCChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCATEGORY2_OTH_MODEL_MCChanged()
    End Sub
    Partial Private Sub OnCATEGORY2_MC_OTHER_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGORY2_MC_OTHER_DETAILChanged()
    End Sub
    Partial Private Sub OnMAKERChanging(value As String)
    End Sub
    Partial Private Sub OnMAKERChanged()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnSUPPLIERChanging(value As String)
    End Sub
    Partial Private Sub OnSUPPLIERChanged()
    End Sub
    Partial Private Sub OnPROVIDERChanging(value As String)
    End Sub
    Partial Private Sub OnPROVIDERChanged()
    End Sub
    Partial Private Sub OnTELChanging(value As String)
    End Sub
    Partial Private Sub OnTELChanged()
    End Sub
    Partial Private Sub OnTYPE_MCChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_MCChanged()
    End Sub
    Partial Private Sub OnSIZE_HP_MCChanging(value As String)
    End Sub
    Partial Private Sub OnSIZE_HP_MCChanged()
    End Sub
    Partial Private Sub OnDIVISIONChanging(value As String)
    End Sub
    Partial Private Sub OnDIVISIONChanged()
    End Sub
    Partial Private Sub OnDEPARTMENTChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENTChanged()
    End Sub
    Partial Private Sub OnSECTIONChanging(value As String)
    End Sub
    Partial Private Sub OnSECTIONChanged()
    End Sub
    Partial Private Sub OnMC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NAMEChanged()
    End Sub
    Partial Private Sub OnMC_NO1Changing(value As String)
    End Sub
    Partial Private Sub OnMC_NO1Changed()
    End Sub
    Partial Private Sub OnMC_NO2Changing(value As String)
    End Sub
    Partial Private Sub OnMC_NO2Changed()
    End Sub
    Partial Private Sub OnMC_NO3Changing(value As String)
    End Sub
    Partial Private Sub OnMC_NO3Changed()
    End Sub
    Partial Private Sub OnMC_NO4Changing(value As String)
    End Sub
    Partial Private Sub OnMC_NO4Changed()
    End Sub
    Partial Private Sub OnMC_NO5Changing(value As String)
    End Sub
    Partial Private Sub OnMC_NO5Changed()
    End Sub
    Partial Private Sub OnMC_NO6Changing(value As String)
    End Sub
    Partial Private Sub OnMC_NO6Changed()
    End Sub
    Partial Private Sub OnMC_NO7Changing(value As String)
    End Sub
    Partial Private Sub OnMC_NO7Changed()
    End Sub
    Partial Private Sub OnMC_NO8Changing(value As String)
    End Sub
    Partial Private Sub OnMC_NO8Changed()
    End Sub
    Partial Private Sub OnMC_NO9Changing(value As String)
    End Sub
    Partial Private Sub OnMC_NO9Changed()
    End Sub
    Partial Private Sub OnMC_NO10Changing(value As String)
    End Sub
    Partial Private Sub OnMC_NO10Changed()
    End Sub
    Partial Private Sub OnDANGER_CHEME_1Changing(value As Boolean)
    End Sub
    Partial Private Sub OnDANGER_CHEME_1Changed()
    End Sub
    Partial Private Sub OnDANGER_CHEME_2Changing(value As Boolean)
    End Sub
    Partial Private Sub OnDANGER_CHEME_2Changed()
    End Sub
    Partial Private Sub OnDANGER_CHEME_3Changing(value As Boolean)
    End Sub
    Partial Private Sub OnDANGER_CHEME_3Changed()
    End Sub
    Partial Private Sub OnDANGER_CHEME_4Changing(value As Boolean)
    End Sub
    Partial Private Sub OnDANGER_CHEME_4Changed()
    End Sub
    Partial Private Sub OnDANGER_CHEME_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDANGER_CHEME_NAMEChanged()
    End Sub
    Partial Private Sub OnCAS_NOChanging(value As String)
    End Sub
    Partial Private Sub OnCAS_NOChanged()
    End Sub
    Partial Private Sub OnFLAMMABLEChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFLAMMABLEChanged()
    End Sub
    Partial Private Sub OnCORROSIVEChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCORROSIVEChanged()
    End Sub
    Partial Private Sub OnPOISONChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPOISONChanged()
    End Sub
    Partial Private Sub OnGASChanging(value As Boolean)
    End Sub
    Partial Private Sub OnGASChanged()
    End Sub
    Partial Private Sub OnSUBSTANCE_OTHERChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSUBSTANCE_OTHERChanged()
    End Sub
    Partial Private Sub OnSUBSTANCE_OTHER_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnSUBSTANCE_OTHER_DETAILChanged()
    End Sub
    Partial Private Sub OnOBJ_POWDERChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOBJ_POWDERChanged()
    End Sub
    Partial Private Sub OnOBJ_HEATChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOBJ_HEATChanged()
    End Sub
    Partial Private Sub OnOBJ_NOISEChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOBJ_NOISEChanged()
    End Sub
    Partial Private Sub OnOBJ_VIBRATEChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOBJ_VIBRATEChanged()
    End Sub
    Partial Private Sub OnOBJ_POISONGASChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOBJ_POISONGASChanged()
    End Sub
    Partial Private Sub OnOBJ_WASTE_WATERChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOBJ_WASTE_WATERChanged()
    End Sub
    Partial Private Sub OnOBJ_RAYChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOBJ_RAYChanged()
    End Sub
    Partial Private Sub OnOBJ_SMOKEChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOBJ_SMOKEChanged()
    End Sub
    Partial Private Sub OnOBJ_ELECTRIC_WAVEChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOBJ_ELECTRIC_WAVEChanged()
    End Sub
    Partial Private Sub OnOBJ_OTHERChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOBJ_OTHERChanged()
    End Sub
    Partial Private Sub OnOBJ_OTHER_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnOBJ_OTHER_DETAILChanged()
    End Sub
    Partial Private Sub OnOBJ_CHEME_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnOBJ_CHEME_NAMEChanged()
    End Sub
    Partial Private Sub OnEQUIPMENT_HELMETChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEQUIPMENT_HELMETChanged()
    End Sub
    Partial Private Sub OnEQUIPMENT_GLASSESChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEQUIPMENT_GLASSESChanged()
    End Sub
    Partial Private Sub OnEQUIPMENT_CHEMICAL_MASKChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEQUIPMENT_CHEMICAL_MASKChanged()
    End Sub
    Partial Private Sub OnEQUIPMENT_BIB_PROTECT_CHEMECALChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEQUIPMENT_BIB_PROTECT_CHEMECALChanged()
    End Sub
    Partial Private Sub OnEQUIPMENT_CHEMICAL_GLOVESChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEQUIPMENT_CHEMICAL_GLOVESChanged()
    End Sub
    Partial Private Sub OnEQUIPMENT_HEAT_RESISTANT_GLOVESChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEQUIPMENT_HEAT_RESISTANT_GLOVESChanged()
    End Sub
    Partial Private Sub OnEQUIPMENT_CUT_PROTECT_GLOVESChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEQUIPMENT_CUT_PROTECT_GLOVESChanged()
    End Sub
    Partial Private Sub OnEQUIPMENT_EYE_COVERChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEQUIPMENT_EYE_COVERChanged()
    End Sub
    Partial Private Sub OnEQUIPMENT_FACE_SHIELDChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEQUIPMENT_FACE_SHIELDChanged()
    End Sub
    Partial Private Sub OnEQUIPMENT_DUST_MASKChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEQUIPMENT_DUST_MASKChanged()
    End Sub
    Partial Private Sub OnEQUIPMENT_CHEMICAL_PACKChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEQUIPMENT_CHEMICAL_PACKChanged()
    End Sub
    Partial Private Sub OnEQUIPMENT_ELECTRIC_GLOVESChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEQUIPMENT_ELECTRIC_GLOVESChanged()
    End Sub
    Partial Private Sub OnEQUIPMENT_OTHERChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEQUIPMENT_OTHERChanged()
    End Sub
    Partial Private Sub OnEQUIPMENT_OTHER_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnEQUIPMENT_OTHER_DETAILChanged()
    End Sub
    Partial Private Sub OnLAW_MCChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLAW_MCChanged()
    End Sub
    Partial Private Sub OnLAW_CHEMECALSChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLAW_CHEMECALSChanged()
    End Sub
    Partial Private Sub OnLAW_ENVIRONMENTALChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLAW_ENVIRONMENTALChanged()
    End Sub
    Partial Private Sub OnLAW_HIGH_PRESSURE_GASChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLAW_HIGH_PRESSURE_GASChanged()
    End Sub
    Partial Private Sub OnLAW_PREVENT_STOP_FIREChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLAW_PREVENT_STOP_FIREChanged()
    End Sub
    Partial Private Sub OnLAW_FACTORYChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLAW_FACTORYChanged()
    End Sub
    Partial Private Sub OnLAW_FUEL_REGULATORYChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLAW_FUEL_REGULATORYChanged()
    End Sub
    Partial Private Sub OnLAW_OTHERChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLAW_OTHERChanged()
    End Sub
    Partial Private Sub OnLAW_OTHER_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnLAW_OTHER_DETAILChanged()
    End Sub
    Partial Private Sub OnLAW_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAW_NAMEChanged()
    End Sub
    Partial Private Sub OnLAW_NOTICEChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLAW_NOTICEChanged()
    End Sub
    Partial Private Sub OnLAW_NOTICE_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnLAW_NOTICE_DETAILChanged()
    End Sub
    Partial Private Sub OnLAW_APPROVEChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLAW_APPROVEChanged()
    End Sub
    Partial Private Sub OnLAW_APPROVE_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnLAW_APPROVE_DETAILChanged()
    End Sub
    Partial Private Sub OnLAW_CHECKChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLAW_CHECKChanged()
    End Sub
    Partial Private Sub OnLAW_CHECK_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnLAW_CHECK_DETAILChanged()
    End Sub
    Partial Private Sub OnIMG_TEMP_STAMPChanging(value As String)
    End Sub
    Partial Private Sub OnIMG_TEMP_STAMPChanged()
    End Sub
    Partial Private Sub OnIMG_TEMP_STAMP_CONTENT_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnIMG_TEMP_STAMP_CONTENT_TYPEChanged()
    End Sub
    Partial Private Sub OnIMG_TEMP_STAMP_DATAChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnIMG_TEMP_STAMP_DATAChanged()
    End Sub
    Partial Private Sub OnREQUEST_NAME_APPROVEChanging(value As String)
    End Sub
    Partial Private Sub OnREQUEST_NAME_APPROVEChanged()
    End Sub
    Partial Private Sub OnREQUEST_APPROVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUEST_APPROVE_DATEChanged()
    End Sub
    Partial Private Sub OnSECT_MGR_NAME_APPROVEChanging(value As String)
    End Sub
    Partial Private Sub OnSECT_MGR_NAME_APPROVEChanged()
    End Sub
    Partial Private Sub OnSECT_MGR_APPROVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSECT_MGR_APPROVE_DATEChanged()
    End Sub
    Partial Private Sub OnDEPT_MGR_NAME_APPROVEChanging(value As String)
    End Sub
    Partial Private Sub OnDEPT_MGR_NAME_APPROVEChanged()
    End Sub
    Partial Private Sub OnDEPT_MGR_APPROVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDEPT_MGR_APPROVE_DATEChanged()
    End Sub
    Partial Private Sub OnDIV_MGR_NAME_APPROVEChanging(value As String)
    End Sub
    Partial Private Sub OnDIV_MGR_NAME_APPROVEChanged()
    End Sub
    Partial Private Sub OnDIV_MGR_APPROVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDIV_MGR_APPROVE_DATEChanged()
    End Sub
    Partial Private Sub OnMCEQ_SUBCOM_NAME_APPROVEChanging(value As String)
    End Sub
    Partial Private Sub OnMCEQ_SUBCOM_NAME_APPROVEChanged()
    End Sub
    Partial Private Sub OnMCEQ_SUBCOM_APPROVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnMCEQ_SUBCOM_APPROVE_DATEChanged()
    End Sub
    Partial Private Sub OnSAFETY_OFFICER_NAME_APPROVEChanging(value As String)
    End Sub
    Partial Private Sub OnSAFETY_OFFICER_NAME_APPROVEChanged()
    End Sub
    Partial Private Sub OnSAFETY_OFFICER_APPROVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSAFETY_OFFICER_APPROVE_DATEChanged()
    End Sub
    Partial Private Sub OnSAFETY_MGR_NAME_APPROVEChanging(value As String)
    End Sub
    Partial Private Sub OnSAFETY_MGR_NAME_APPROVEChanged()
    End Sub
    Partial Private Sub OnSAFETY_MGR_APPROVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSAFETY_MGR_APPROVE_DATEChanged()
    End Sub
    Partial Private Sub OnOPNO_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnOPNO_ADDChanged()
    End Sub
    Partial Private Sub OnDATE_ADDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_ADDChanged()
    End Sub
    Partial Private Sub OnOPNO_UPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnOPNO_UPDATEChanged()
    End Sub
    Partial Private Sub OnDATE_UPDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_UPDATEChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanged()
    End Sub
    Partial Private Sub OnIPChanging(value As String)
    End Sub
    Partial Private Sub OnIPChanged()
    End Sub
    Partial Private Sub OnDOCUMENT_ATTACH_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDOCUMENT_ATTACH_NAMEChanged()
    End Sub
    Partial Private Sub OnDOCUMENT_ATTACH_CONTENT_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnDOCUMENT_ATTACH_CONTENT_TYPEChanged()
    End Sub
    Partial Private Sub OnDOCUMENT_ATTACH_DATAChanging(value As Byte())
    End Sub
    Partial Private Sub OnDOCUMENT_ATTACH_DATAChanged()
    End Sub
    Partial Private Sub OnIMAGE_ATTACH_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnIMAGE_ATTACH_NAMEChanged()
    End Sub
    Partial Private Sub OnIMAGE_ATTACH_CONTENT_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnIMAGE_ATTACH_CONTENT_TYPEChanged()
    End Sub
    Partial Private Sub OnIMAGE_ATTACH_DATAChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnIMAGE_ATTACH_DATAChanged()
    End Sub
    Partial Private Sub OnLAYOUT_ATTACH_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLAYOUT_ATTACH_NAMEChanged()
    End Sub
    Partial Private Sub OnLAYOUT_ATTACH_CONTENT_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnLAYOUT_ATTACH_CONTENT_TYPEChanged()
    End Sub
    Partial Private Sub OnLAYOUT_ATTACH_DATAChanging(value As Byte())
    End Sub
    Partial Private Sub OnLAYOUT_ATTACH_DATAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property MC_NO() As String
		Get
			Return Me._MC_NO
		End Get
		Set
			If (String.Equals(Me._MC_NO, value) = false) Then
				Me.OnMC_NOChanging(value)
				Me.SendPropertyChanging
				Me._MC_NO = value
				Me.SendPropertyChanged("MC_NO")
				Me.OnMC_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGISTER_DATE", DbType:="DateTime")>  _
	Public Property REGISTER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REGISTER_DATE
		End Get
		Set
			If (Me._REGISTER_DATE.Equals(value) = false) Then
				Me.OnREGISTER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REGISTER_DATE = value
				Me.SendPropertyChanged("REGISTER_DATE")
				Me.OnREGISTER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGISTER_NEW_MC", DbType:="Bit NOT NULL")>  _
	Public Property REGISTER_NEW_MC() As Boolean
		Get
			Return Me._REGISTER_NEW_MC
		End Get
		Set
			If ((Me._REGISTER_NEW_MC = value)  _
						= false) Then
				Me.OnREGISTER_NEW_MCChanging(value)
				Me.SendPropertyChanging
				Me._REGISTER_NEW_MC = value
				Me.SendPropertyChanged("REGISTER_NEW_MC")
				Me.OnREGISTER_NEW_MCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CANCEL_MC", DbType:="Bit NOT NULL")>  _
	Public Property CANCEL_MC() As Boolean
		Get
			Return Me._CANCEL_MC
		End Get
		Set
			If ((Me._CANCEL_MC = value)  _
						= false) Then
				Me.OnCANCEL_MCChanging(value)
				Me.SendPropertyChanging
				Me._CANCEL_MC = value
				Me.SendPropertyChanged("CANCEL_MC")
				Me.OnCANCEL_MCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY1_NEW_MC", DbType:="Bit NOT NULL")>  _
	Public Property CATEGORY1_NEW_MC() As Boolean
		Get
			Return Me._CATEGORY1_NEW_MC
		End Get
		Set
			If ((Me._CATEGORY1_NEW_MC = value)  _
						= false) Then
				Me.OnCATEGORY1_NEW_MCChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY1_NEW_MC = value
				Me.SendPropertyChanged("CATEGORY1_NEW_MC")
				Me.OnCATEGORY1_NEW_MCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY1_TF_MC", DbType:="Bit NOT NULL")>  _
	Public Property CATEGORY1_TF_MC() As Boolean
		Get
			Return Me._CATEGORY1_TF_MC
		End Get
		Set
			If ((Me._CATEGORY1_TF_MC = value)  _
						= false) Then
				Me.OnCATEGORY1_TF_MCChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY1_TF_MC = value
				Me.SendPropertyChanged("CATEGORY1_TF_MC")
				Me.OnCATEGORY1_TF_MCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY1_OTH_MC", DbType:="Bit NOT NULL")>  _
	Public Property CATEGORY1_OTH_MC() As Boolean
		Get
			Return Me._CATEGORY1_OTH_MC
		End Get
		Set
			If ((Me._CATEGORY1_OTH_MC = value)  _
						= false) Then
				Me.OnCATEGORY1_OTH_MCChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY1_OTH_MC = value
				Me.SendPropertyChanged("CATEGORY1_OTH_MC")
				Me.OnCATEGORY1_OTH_MCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY1_MC_OTHER_DETAIL", DbType:="VarChar(50)")>  _
	Public Property CATEGORY1_MC_OTHER_DETAIL() As String
		Get
			Return Me._CATEGORY1_MC_OTHER_DETAIL
		End Get
		Set
			If (String.Equals(Me._CATEGORY1_MC_OTHER_DETAIL, value) = false) Then
				Me.OnCATEGORY1_MC_OTHER_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY1_MC_OTHER_DETAIL = value
				Me.SendPropertyChanged("CATEGORY1_MC_OTHER_DETAIL")
				Me.OnCATEGORY1_MC_OTHER_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY2_NEW_MODEL_MC", DbType:="Bit NOT NULL")>  _
	Public Property CATEGORY2_NEW_MODEL_MC() As Boolean
		Get
			Return Me._CATEGORY2_NEW_MODEL_MC
		End Get
		Set
			If ((Me._CATEGORY2_NEW_MODEL_MC = value)  _
						= false) Then
				Me.OnCATEGORY2_NEW_MODEL_MCChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY2_NEW_MODEL_MC = value
				Me.SendPropertyChanged("CATEGORY2_NEW_MODEL_MC")
				Me.OnCATEGORY2_NEW_MODEL_MCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY2_ORIGINAL_MODEL_MC", DbType:="Bit NOT NULL")>  _
	Public Property CATEGORY2_ORIGINAL_MODEL_MC() As Boolean
		Get
			Return Me._CATEGORY2_ORIGINAL_MODEL_MC
		End Get
		Set
			If ((Me._CATEGORY2_ORIGINAL_MODEL_MC = value)  _
						= false) Then
				Me.OnCATEGORY2_ORIGINAL_MODEL_MCChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY2_ORIGINAL_MODEL_MC = value
				Me.SendPropertyChanged("CATEGORY2_ORIGINAL_MODEL_MC")
				Me.OnCATEGORY2_ORIGINAL_MODEL_MCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY2_OTH_MODEL_MC", DbType:="Bit NOT NULL")>  _
	Public Property CATEGORY2_OTH_MODEL_MC() As Boolean
		Get
			Return Me._CATEGORY2_OTH_MODEL_MC
		End Get
		Set
			If ((Me._CATEGORY2_OTH_MODEL_MC = value)  _
						= false) Then
				Me.OnCATEGORY2_OTH_MODEL_MCChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY2_OTH_MODEL_MC = value
				Me.SendPropertyChanged("CATEGORY2_OTH_MODEL_MC")
				Me.OnCATEGORY2_OTH_MODEL_MCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY2_MC_OTHER_DETAIL", DbType:="VarChar(50)")>  _
	Public Property CATEGORY2_MC_OTHER_DETAIL() As String
		Get
			Return Me._CATEGORY2_MC_OTHER_DETAIL
		End Get
		Set
			If (String.Equals(Me._CATEGORY2_MC_OTHER_DETAIL, value) = false) Then
				Me.OnCATEGORY2_MC_OTHER_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY2_MC_OTHER_DETAIL = value
				Me.SendPropertyChanged("CATEGORY2_MC_OTHER_DETAIL")
				Me.OnCATEGORY2_MC_OTHER_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAKER", DbType:="VarChar(150)")>  _
	Public Property MAKER() As String
		Get
			Return Me._MAKER
		End Get
		Set
			If (String.Equals(Me._MAKER, value) = false) Then
				Me.OnMAKERChanging(value)
				Me.SendPropertyChanging
				Me._MAKER = value
				Me.SendPropertyChanged("MAKER")
				Me.OnMAKERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="VarChar(30)")>  _
	Public Property COUNTRY() As String
		Get
			Return Me._COUNTRY
		End Get
		Set
			If (String.Equals(Me._COUNTRY, value) = false) Then
				Me.OnCOUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY = value
				Me.SendPropertyChanged("COUNTRY")
				Me.OnCOUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUPPLIER", DbType:="VarChar(150)")>  _
	Public Property SUPPLIER() As String
		Get
			Return Me._SUPPLIER
		End Get
		Set
			If (String.Equals(Me._SUPPLIER, value) = false) Then
				Me.OnSUPPLIERChanging(value)
				Me.SendPropertyChanging
				Me._SUPPLIER = value
				Me.SendPropertyChanged("SUPPLIER")
				Me.OnSUPPLIERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVIDER", DbType:="VarChar(150)")>  _
	Public Property PROVIDER() As String
		Get
			Return Me._PROVIDER
		End Get
		Set
			If (String.Equals(Me._PROVIDER, value) = false) Then
				Me.OnPROVIDERChanging(value)
				Me.SendPropertyChanging
				Me._PROVIDER = value
				Me.SendPropertyChanged("PROVIDER")
				Me.OnPROVIDERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL", DbType:="NChar(10)")>  _
	Public Property TEL() As String
		Get
			Return Me._TEL
		End Get
		Set
			If (String.Equals(Me._TEL, value) = false) Then
				Me.OnTELChanging(value)
				Me.SendPropertyChanging
				Me._TEL = value
				Me.SendPropertyChanged("TEL")
				Me.OnTELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_MC", DbType:="NChar(10)")>  _
	Public Property TYPE_MC() As String
		Get
			Return Me._TYPE_MC
		End Get
		Set
			If (String.Equals(Me._TYPE_MC, value) = false) Then
				Me.OnTYPE_MCChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_MC = value
				Me.SendPropertyChanged("TYPE_MC")
				Me.OnTYPE_MCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIZE_HP_MC", DbType:="VarChar(20)")>  _
	Public Property SIZE_HP_MC() As String
		Get
			Return Me._SIZE_HP_MC
		End Get
		Set
			If (String.Equals(Me._SIZE_HP_MC, value) = false) Then
				Me.OnSIZE_HP_MCChanging(value)
				Me.SendPropertyChanging
				Me._SIZE_HP_MC = value
				Me.SendPropertyChanged("SIZE_HP_MC")
				Me.OnSIZE_HP_MCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIVISION", DbType:="VarChar(50)")>  _
	Public Property DIVISION() As String
		Get
			Return Me._DIVISION
		End Get
		Set
			If (String.Equals(Me._DIVISION, value) = false) Then
				Me.OnDIVISIONChanging(value)
				Me.SendPropertyChanging
				Me._DIVISION = value
				Me.SendPropertyChanged("DIVISION")
				Me.OnDIVISIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT", DbType:="VarChar(50)")>  _
	Public Property DEPARTMENT() As String
		Get
			Return Me._DEPARTMENT
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT, value) = false) Then
				Me.OnDEPARTMENTChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT = value
				Me.SendPropertyChanged("DEPARTMENT")
				Me.OnDEPARTMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SECTION", DbType:="VarChar(50)")>  _
	Public Property SECTION() As String
		Get
			Return Me._SECTION
		End Get
		Set
			If (String.Equals(Me._SECTION, value) = false) Then
				Me.OnSECTIONChanging(value)
				Me.SendPropertyChanging
				Me._SECTION = value
				Me.SendPropertyChanged("SECTION")
				Me.OnSECTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NAME", DbType:="VarChar(50)")>  _
	Public Property MC_NAME() As String
		Get
			Return Me._MC_NAME
		End Get
		Set
			If (String.Equals(Me._MC_NAME, value) = false) Then
				Me.OnMC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MC_NAME = value
				Me.SendPropertyChanged("MC_NAME")
				Me.OnMC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO1", DbType:="VarChar(20)")>  _
	Public Property MC_NO1() As String
		Get
			Return Me._MC_NO1
		End Get
		Set
			If (String.Equals(Me._MC_NO1, value) = false) Then
				Me.OnMC_NO1Changing(value)
				Me.SendPropertyChanging
				Me._MC_NO1 = value
				Me.SendPropertyChanged("MC_NO1")
				Me.OnMC_NO1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO2", DbType:="VarChar(20)")>  _
	Public Property MC_NO2() As String
		Get
			Return Me._MC_NO2
		End Get
		Set
			If (String.Equals(Me._MC_NO2, value) = false) Then
				Me.OnMC_NO2Changing(value)
				Me.SendPropertyChanging
				Me._MC_NO2 = value
				Me.SendPropertyChanged("MC_NO2")
				Me.OnMC_NO2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO3", DbType:="VarChar(20)")>  _
	Public Property MC_NO3() As String
		Get
			Return Me._MC_NO3
		End Get
		Set
			If (String.Equals(Me._MC_NO3, value) = false) Then
				Me.OnMC_NO3Changing(value)
				Me.SendPropertyChanging
				Me._MC_NO3 = value
				Me.SendPropertyChanged("MC_NO3")
				Me.OnMC_NO3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO4", DbType:="VarChar(20)")>  _
	Public Property MC_NO4() As String
		Get
			Return Me._MC_NO4
		End Get
		Set
			If (String.Equals(Me._MC_NO4, value) = false) Then
				Me.OnMC_NO4Changing(value)
				Me.SendPropertyChanging
				Me._MC_NO4 = value
				Me.SendPropertyChanged("MC_NO4")
				Me.OnMC_NO4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO5", DbType:="VarChar(20)")>  _
	Public Property MC_NO5() As String
		Get
			Return Me._MC_NO5
		End Get
		Set
			If (String.Equals(Me._MC_NO5, value) = false) Then
				Me.OnMC_NO5Changing(value)
				Me.SendPropertyChanging
				Me._MC_NO5 = value
				Me.SendPropertyChanged("MC_NO5")
				Me.OnMC_NO5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO6", DbType:="VarChar(20)")>  _
	Public Property MC_NO6() As String
		Get
			Return Me._MC_NO6
		End Get
		Set
			If (String.Equals(Me._MC_NO6, value) = false) Then
				Me.OnMC_NO6Changing(value)
				Me.SendPropertyChanging
				Me._MC_NO6 = value
				Me.SendPropertyChanged("MC_NO6")
				Me.OnMC_NO6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO7", DbType:="VarChar(20)")>  _
	Public Property MC_NO7() As String
		Get
			Return Me._MC_NO7
		End Get
		Set
			If (String.Equals(Me._MC_NO7, value) = false) Then
				Me.OnMC_NO7Changing(value)
				Me.SendPropertyChanging
				Me._MC_NO7 = value
				Me.SendPropertyChanged("MC_NO7")
				Me.OnMC_NO7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO8", DbType:="VarChar(20)")>  _
	Public Property MC_NO8() As String
		Get
			Return Me._MC_NO8
		End Get
		Set
			If (String.Equals(Me._MC_NO8, value) = false) Then
				Me.OnMC_NO8Changing(value)
				Me.SendPropertyChanging
				Me._MC_NO8 = value
				Me.SendPropertyChanged("MC_NO8")
				Me.OnMC_NO8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO9", DbType:="VarChar(20)")>  _
	Public Property MC_NO9() As String
		Get
			Return Me._MC_NO9
		End Get
		Set
			If (String.Equals(Me._MC_NO9, value) = false) Then
				Me.OnMC_NO9Changing(value)
				Me.SendPropertyChanging
				Me._MC_NO9 = value
				Me.SendPropertyChanged("MC_NO9")
				Me.OnMC_NO9Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO10", DbType:="VarChar(20)")>  _
	Public Property MC_NO10() As String
		Get
			Return Me._MC_NO10
		End Get
		Set
			If (String.Equals(Me._MC_NO10, value) = false) Then
				Me.OnMC_NO10Changing(value)
				Me.SendPropertyChanging
				Me._MC_NO10 = value
				Me.SendPropertyChanged("MC_NO10")
				Me.OnMC_NO10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DANGER_CHEME_1", DbType:="Bit NOT NULL")>  _
	Public Property DANGER_CHEME_1() As Boolean
		Get
			Return Me._DANGER_CHEME_1
		End Get
		Set
			If ((Me._DANGER_CHEME_1 = value)  _
						= false) Then
				Me.OnDANGER_CHEME_1Changing(value)
				Me.SendPropertyChanging
				Me._DANGER_CHEME_1 = value
				Me.SendPropertyChanged("DANGER_CHEME_1")
				Me.OnDANGER_CHEME_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DANGER_CHEME_2", DbType:="Bit NOT NULL")>  _
	Public Property DANGER_CHEME_2() As Boolean
		Get
			Return Me._DANGER_CHEME_2
		End Get
		Set
			If ((Me._DANGER_CHEME_2 = value)  _
						= false) Then
				Me.OnDANGER_CHEME_2Changing(value)
				Me.SendPropertyChanging
				Me._DANGER_CHEME_2 = value
				Me.SendPropertyChanged("DANGER_CHEME_2")
				Me.OnDANGER_CHEME_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DANGER_CHEME_3", DbType:="Bit NOT NULL")>  _
	Public Property DANGER_CHEME_3() As Boolean
		Get
			Return Me._DANGER_CHEME_3
		End Get
		Set
			If ((Me._DANGER_CHEME_3 = value)  _
						= false) Then
				Me.OnDANGER_CHEME_3Changing(value)
				Me.SendPropertyChanging
				Me._DANGER_CHEME_3 = value
				Me.SendPropertyChanged("DANGER_CHEME_3")
				Me.OnDANGER_CHEME_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DANGER_CHEME_4", DbType:="Bit NOT NULL")>  _
	Public Property DANGER_CHEME_4() As Boolean
		Get
			Return Me._DANGER_CHEME_4
		End Get
		Set
			If ((Me._DANGER_CHEME_4 = value)  _
						= false) Then
				Me.OnDANGER_CHEME_4Changing(value)
				Me.SendPropertyChanging
				Me._DANGER_CHEME_4 = value
				Me.SendPropertyChanged("DANGER_CHEME_4")
				Me.OnDANGER_CHEME_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DANGER_CHEME_NAME", DbType:="VarChar(50)")>  _
	Public Property DANGER_CHEME_NAME() As String
		Get
			Return Me._DANGER_CHEME_NAME
		End Get
		Set
			If (String.Equals(Me._DANGER_CHEME_NAME, value) = false) Then
				Me.OnDANGER_CHEME_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DANGER_CHEME_NAME = value
				Me.SendPropertyChanged("DANGER_CHEME_NAME")
				Me.OnDANGER_CHEME_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAS_NO", DbType:="VarChar(30)")>  _
	Public Property CAS_NO() As String
		Get
			Return Me._CAS_NO
		End Get
		Set
			If (String.Equals(Me._CAS_NO, value) = false) Then
				Me.OnCAS_NOChanging(value)
				Me.SendPropertyChanging
				Me._CAS_NO = value
				Me.SendPropertyChanged("CAS_NO")
				Me.OnCAS_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLAMMABLE", DbType:="Bit NOT NULL")>  _
	Public Property FLAMMABLE() As Boolean
		Get
			Return Me._FLAMMABLE
		End Get
		Set
			If ((Me._FLAMMABLE = value)  _
						= false) Then
				Me.OnFLAMMABLEChanging(value)
				Me.SendPropertyChanging
				Me._FLAMMABLE = value
				Me.SendPropertyChanged("FLAMMABLE")
				Me.OnFLAMMABLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CORROSIVE", DbType:="Bit NOT NULL")>  _
	Public Property CORROSIVE() As Boolean
		Get
			Return Me._CORROSIVE
		End Get
		Set
			If ((Me._CORROSIVE = value)  _
						= false) Then
				Me.OnCORROSIVEChanging(value)
				Me.SendPropertyChanging
				Me._CORROSIVE = value
				Me.SendPropertyChanged("CORROSIVE")
				Me.OnCORROSIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POISON", DbType:="Bit NOT NULL")>  _
	Public Property POISON() As Boolean
		Get
			Return Me._POISON
		End Get
		Set
			If ((Me._POISON = value)  _
						= false) Then
				Me.OnPOISONChanging(value)
				Me.SendPropertyChanging
				Me._POISON = value
				Me.SendPropertyChanged("POISON")
				Me.OnPOISONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GAS", DbType:="Bit NOT NULL")>  _
	Public Property GAS() As Boolean
		Get
			Return Me._GAS
		End Get
		Set
			If ((Me._GAS = value)  _
						= false) Then
				Me.OnGASChanging(value)
				Me.SendPropertyChanging
				Me._GAS = value
				Me.SendPropertyChanged("GAS")
				Me.OnGASChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUBSTANCE_OTHER", DbType:="Bit NOT NULL")>  _
	Public Property SUBSTANCE_OTHER() As Boolean
		Get
			Return Me._SUBSTANCE_OTHER
		End Get
		Set
			If ((Me._SUBSTANCE_OTHER = value)  _
						= false) Then
				Me.OnSUBSTANCE_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._SUBSTANCE_OTHER = value
				Me.SendPropertyChanged("SUBSTANCE_OTHER")
				Me.OnSUBSTANCE_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUBSTANCE_OTHER_DETAIL", DbType:="VarChar(50)")>  _
	Public Property SUBSTANCE_OTHER_DETAIL() As String
		Get
			Return Me._SUBSTANCE_OTHER_DETAIL
		End Get
		Set
			If (String.Equals(Me._SUBSTANCE_OTHER_DETAIL, value) = false) Then
				Me.OnSUBSTANCE_OTHER_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._SUBSTANCE_OTHER_DETAIL = value
				Me.SendPropertyChanged("SUBSTANCE_OTHER_DETAIL")
				Me.OnSUBSTANCE_OTHER_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJ_POWDER", DbType:="Bit NOT NULL")>  _
	Public Property OBJ_POWDER() As Boolean
		Get
			Return Me._OBJ_POWDER
		End Get
		Set
			If ((Me._OBJ_POWDER = value)  _
						= false) Then
				Me.OnOBJ_POWDERChanging(value)
				Me.SendPropertyChanging
				Me._OBJ_POWDER = value
				Me.SendPropertyChanged("OBJ_POWDER")
				Me.OnOBJ_POWDERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJ_HEAT", DbType:="Bit NOT NULL")>  _
	Public Property OBJ_HEAT() As Boolean
		Get
			Return Me._OBJ_HEAT
		End Get
		Set
			If ((Me._OBJ_HEAT = value)  _
						= false) Then
				Me.OnOBJ_HEATChanging(value)
				Me.SendPropertyChanging
				Me._OBJ_HEAT = value
				Me.SendPropertyChanged("OBJ_HEAT")
				Me.OnOBJ_HEATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJ_NOISE", DbType:="Bit NOT NULL")>  _
	Public Property OBJ_NOISE() As Boolean
		Get
			Return Me._OBJ_NOISE
		End Get
		Set
			If ((Me._OBJ_NOISE = value)  _
						= false) Then
				Me.OnOBJ_NOISEChanging(value)
				Me.SendPropertyChanging
				Me._OBJ_NOISE = value
				Me.SendPropertyChanged("OBJ_NOISE")
				Me.OnOBJ_NOISEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJ_VIBRATE", DbType:="Bit NOT NULL")>  _
	Public Property OBJ_VIBRATE() As Boolean
		Get
			Return Me._OBJ_VIBRATE
		End Get
		Set
			If ((Me._OBJ_VIBRATE = value)  _
						= false) Then
				Me.OnOBJ_VIBRATEChanging(value)
				Me.SendPropertyChanging
				Me._OBJ_VIBRATE = value
				Me.SendPropertyChanged("OBJ_VIBRATE")
				Me.OnOBJ_VIBRATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJ_POISONGAS", DbType:="Bit NOT NULL")>  _
	Public Property OBJ_POISONGAS() As Boolean
		Get
			Return Me._OBJ_POISONGAS
		End Get
		Set
			If ((Me._OBJ_POISONGAS = value)  _
						= false) Then
				Me.OnOBJ_POISONGASChanging(value)
				Me.SendPropertyChanging
				Me._OBJ_POISONGAS = value
				Me.SendPropertyChanged("OBJ_POISONGAS")
				Me.OnOBJ_POISONGASChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJ_WASTE_WATER", DbType:="Bit NOT NULL")>  _
	Public Property OBJ_WASTE_WATER() As Boolean
		Get
			Return Me._OBJ_WASTE_WATER
		End Get
		Set
			If ((Me._OBJ_WASTE_WATER = value)  _
						= false) Then
				Me.OnOBJ_WASTE_WATERChanging(value)
				Me.SendPropertyChanging
				Me._OBJ_WASTE_WATER = value
				Me.SendPropertyChanged("OBJ_WASTE_WATER")
				Me.OnOBJ_WASTE_WATERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJ_RAY", DbType:="Bit NOT NULL")>  _
	Public Property OBJ_RAY() As Boolean
		Get
			Return Me._OBJ_RAY
		End Get
		Set
			If ((Me._OBJ_RAY = value)  _
						= false) Then
				Me.OnOBJ_RAYChanging(value)
				Me.SendPropertyChanging
				Me._OBJ_RAY = value
				Me.SendPropertyChanged("OBJ_RAY")
				Me.OnOBJ_RAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJ_SMOKE", DbType:="Bit NOT NULL")>  _
	Public Property OBJ_SMOKE() As Boolean
		Get
			Return Me._OBJ_SMOKE
		End Get
		Set
			If ((Me._OBJ_SMOKE = value)  _
						= false) Then
				Me.OnOBJ_SMOKEChanging(value)
				Me.SendPropertyChanging
				Me._OBJ_SMOKE = value
				Me.SendPropertyChanged("OBJ_SMOKE")
				Me.OnOBJ_SMOKEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJ_ELECTRIC_WAVE", DbType:="Bit NOT NULL")>  _
	Public Property OBJ_ELECTRIC_WAVE() As Boolean
		Get
			Return Me._OBJ_ELECTRIC_WAVE
		End Get
		Set
			If ((Me._OBJ_ELECTRIC_WAVE = value)  _
						= false) Then
				Me.OnOBJ_ELECTRIC_WAVEChanging(value)
				Me.SendPropertyChanging
				Me._OBJ_ELECTRIC_WAVE = value
				Me.SendPropertyChanged("OBJ_ELECTRIC_WAVE")
				Me.OnOBJ_ELECTRIC_WAVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJ_OTHER", DbType:="Bit NOT NULL")>  _
	Public Property OBJ_OTHER() As Boolean
		Get
			Return Me._OBJ_OTHER
		End Get
		Set
			If ((Me._OBJ_OTHER = value)  _
						= false) Then
				Me.OnOBJ_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._OBJ_OTHER = value
				Me.SendPropertyChanged("OBJ_OTHER")
				Me.OnOBJ_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJ_OTHER_DETAIL", DbType:="VarChar(50)")>  _
	Public Property OBJ_OTHER_DETAIL() As String
		Get
			Return Me._OBJ_OTHER_DETAIL
		End Get
		Set
			If (String.Equals(Me._OBJ_OTHER_DETAIL, value) = false) Then
				Me.OnOBJ_OTHER_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._OBJ_OTHER_DETAIL = value
				Me.SendPropertyChanged("OBJ_OTHER_DETAIL")
				Me.OnOBJ_OTHER_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OBJ_CHEME_NAME", DbType:="VarChar(50)")>  _
	Public Property OBJ_CHEME_NAME() As String
		Get
			Return Me._OBJ_CHEME_NAME
		End Get
		Set
			If (String.Equals(Me._OBJ_CHEME_NAME, value) = false) Then
				Me.OnOBJ_CHEME_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._OBJ_CHEME_NAME = value
				Me.SendPropertyChanged("OBJ_CHEME_NAME")
				Me.OnOBJ_CHEME_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQUIPMENT_HELMET", DbType:="Bit NOT NULL")>  _
	Public Property EQUIPMENT_HELMET() As Boolean
		Get
			Return Me._EQUIPMENT_HELMET
		End Get
		Set
			If ((Me._EQUIPMENT_HELMET = value)  _
						= false) Then
				Me.OnEQUIPMENT_HELMETChanging(value)
				Me.SendPropertyChanging
				Me._EQUIPMENT_HELMET = value
				Me.SendPropertyChanged("EQUIPMENT_HELMET")
				Me.OnEQUIPMENT_HELMETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQUIPMENT_GLASSES", DbType:="Bit NOT NULL")>  _
	Public Property EQUIPMENT_GLASSES() As Boolean
		Get
			Return Me._EQUIPMENT_GLASSES
		End Get
		Set
			If ((Me._EQUIPMENT_GLASSES = value)  _
						= false) Then
				Me.OnEQUIPMENT_GLASSESChanging(value)
				Me.SendPropertyChanging
				Me._EQUIPMENT_GLASSES = value
				Me.SendPropertyChanged("EQUIPMENT_GLASSES")
				Me.OnEQUIPMENT_GLASSESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQUIPMENT_CHEMICAL_MASK", DbType:="Bit NOT NULL")>  _
	Public Property EQUIPMENT_CHEMICAL_MASK() As Boolean
		Get
			Return Me._EQUIPMENT_CHEMICAL_MASK
		End Get
		Set
			If ((Me._EQUIPMENT_CHEMICAL_MASK = value)  _
						= false) Then
				Me.OnEQUIPMENT_CHEMICAL_MASKChanging(value)
				Me.SendPropertyChanging
				Me._EQUIPMENT_CHEMICAL_MASK = value
				Me.SendPropertyChanged("EQUIPMENT_CHEMICAL_MASK")
				Me.OnEQUIPMENT_CHEMICAL_MASKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQUIPMENT_BIB_PROTECT_CHEMECAL", DbType:="Bit NOT NULL")>  _
	Public Property EQUIPMENT_BIB_PROTECT_CHEMECAL() As Boolean
		Get
			Return Me._EQUIPMENT_BIB_PROTECT_CHEMECAL
		End Get
		Set
			If ((Me._EQUIPMENT_BIB_PROTECT_CHEMECAL = value)  _
						= false) Then
				Me.OnEQUIPMENT_BIB_PROTECT_CHEMECALChanging(value)
				Me.SendPropertyChanging
				Me._EQUIPMENT_BIB_PROTECT_CHEMECAL = value
				Me.SendPropertyChanged("EQUIPMENT_BIB_PROTECT_CHEMECAL")
				Me.OnEQUIPMENT_BIB_PROTECT_CHEMECALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQUIPMENT_CHEMICAL_GLOVES", DbType:="Bit NOT NULL")>  _
	Public Property EQUIPMENT_CHEMICAL_GLOVES() As Boolean
		Get
			Return Me._EQUIPMENT_CHEMICAL_GLOVES
		End Get
		Set
			If ((Me._EQUIPMENT_CHEMICAL_GLOVES = value)  _
						= false) Then
				Me.OnEQUIPMENT_CHEMICAL_GLOVESChanging(value)
				Me.SendPropertyChanging
				Me._EQUIPMENT_CHEMICAL_GLOVES = value
				Me.SendPropertyChanged("EQUIPMENT_CHEMICAL_GLOVES")
				Me.OnEQUIPMENT_CHEMICAL_GLOVESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQUIPMENT_HEAT_RESISTANT_GLOVES", DbType:="Bit NOT NULL")>  _
	Public Property EQUIPMENT_HEAT_RESISTANT_GLOVES() As Boolean
		Get
			Return Me._EQUIPMENT_HEAT_RESISTANT_GLOVES
		End Get
		Set
			If ((Me._EQUIPMENT_HEAT_RESISTANT_GLOVES = value)  _
						= false) Then
				Me.OnEQUIPMENT_HEAT_RESISTANT_GLOVESChanging(value)
				Me.SendPropertyChanging
				Me._EQUIPMENT_HEAT_RESISTANT_GLOVES = value
				Me.SendPropertyChanged("EQUIPMENT_HEAT_RESISTANT_GLOVES")
				Me.OnEQUIPMENT_HEAT_RESISTANT_GLOVESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQUIPMENT_CUT_PROTECT_GLOVES", DbType:="Bit NOT NULL")>  _
	Public Property EQUIPMENT_CUT_PROTECT_GLOVES() As Boolean
		Get
			Return Me._EQUIPMENT_CUT_PROTECT_GLOVES
		End Get
		Set
			If ((Me._EQUIPMENT_CUT_PROTECT_GLOVES = value)  _
						= false) Then
				Me.OnEQUIPMENT_CUT_PROTECT_GLOVESChanging(value)
				Me.SendPropertyChanging
				Me._EQUIPMENT_CUT_PROTECT_GLOVES = value
				Me.SendPropertyChanged("EQUIPMENT_CUT_PROTECT_GLOVES")
				Me.OnEQUIPMENT_CUT_PROTECT_GLOVESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQUIPMENT_EYE_COVER", DbType:="Bit NOT NULL")>  _
	Public Property EQUIPMENT_EYE_COVER() As Boolean
		Get
			Return Me._EQUIPMENT_EYE_COVER
		End Get
		Set
			If ((Me._EQUIPMENT_EYE_COVER = value)  _
						= false) Then
				Me.OnEQUIPMENT_EYE_COVERChanging(value)
				Me.SendPropertyChanging
				Me._EQUIPMENT_EYE_COVER = value
				Me.SendPropertyChanged("EQUIPMENT_EYE_COVER")
				Me.OnEQUIPMENT_EYE_COVERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQUIPMENT_FACE_SHIELD", DbType:="Bit NOT NULL")>  _
	Public Property EQUIPMENT_FACE_SHIELD() As Boolean
		Get
			Return Me._EQUIPMENT_FACE_SHIELD
		End Get
		Set
			If ((Me._EQUIPMENT_FACE_SHIELD = value)  _
						= false) Then
				Me.OnEQUIPMENT_FACE_SHIELDChanging(value)
				Me.SendPropertyChanging
				Me._EQUIPMENT_FACE_SHIELD = value
				Me.SendPropertyChanged("EQUIPMENT_FACE_SHIELD")
				Me.OnEQUIPMENT_FACE_SHIELDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQUIPMENT_DUST_MASK", DbType:="Bit NOT NULL")>  _
	Public Property EQUIPMENT_DUST_MASK() As Boolean
		Get
			Return Me._EQUIPMENT_DUST_MASK
		End Get
		Set
			If ((Me._EQUIPMENT_DUST_MASK = value)  _
						= false) Then
				Me.OnEQUIPMENT_DUST_MASKChanging(value)
				Me.SendPropertyChanging
				Me._EQUIPMENT_DUST_MASK = value
				Me.SendPropertyChanged("EQUIPMENT_DUST_MASK")
				Me.OnEQUIPMENT_DUST_MASKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQUIPMENT_CHEMICAL_PACK", DbType:="Bit NOT NULL")>  _
	Public Property EQUIPMENT_CHEMICAL_PACK() As Boolean
		Get
			Return Me._EQUIPMENT_CHEMICAL_PACK
		End Get
		Set
			If ((Me._EQUIPMENT_CHEMICAL_PACK = value)  _
						= false) Then
				Me.OnEQUIPMENT_CHEMICAL_PACKChanging(value)
				Me.SendPropertyChanging
				Me._EQUIPMENT_CHEMICAL_PACK = value
				Me.SendPropertyChanged("EQUIPMENT_CHEMICAL_PACK")
				Me.OnEQUIPMENT_CHEMICAL_PACKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQUIPMENT_ELECTRIC_GLOVES", DbType:="Bit NOT NULL")>  _
	Public Property EQUIPMENT_ELECTRIC_GLOVES() As Boolean
		Get
			Return Me._EQUIPMENT_ELECTRIC_GLOVES
		End Get
		Set
			If ((Me._EQUIPMENT_ELECTRIC_GLOVES = value)  _
						= false) Then
				Me.OnEQUIPMENT_ELECTRIC_GLOVESChanging(value)
				Me.SendPropertyChanging
				Me._EQUIPMENT_ELECTRIC_GLOVES = value
				Me.SendPropertyChanged("EQUIPMENT_ELECTRIC_GLOVES")
				Me.OnEQUIPMENT_ELECTRIC_GLOVESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQUIPMENT_OTHER", DbType:="Bit NOT NULL")>  _
	Public Property EQUIPMENT_OTHER() As Boolean
		Get
			Return Me._EQUIPMENT_OTHER
		End Get
		Set
			If ((Me._EQUIPMENT_OTHER = value)  _
						= false) Then
				Me.OnEQUIPMENT_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._EQUIPMENT_OTHER = value
				Me.SendPropertyChanged("EQUIPMENT_OTHER")
				Me.OnEQUIPMENT_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQUIPMENT_OTHER_DETAIL", DbType:="VarChar(50)")>  _
	Public Property EQUIPMENT_OTHER_DETAIL() As String
		Get
			Return Me._EQUIPMENT_OTHER_DETAIL
		End Get
		Set
			If (String.Equals(Me._EQUIPMENT_OTHER_DETAIL, value) = false) Then
				Me.OnEQUIPMENT_OTHER_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._EQUIPMENT_OTHER_DETAIL = value
				Me.SendPropertyChanged("EQUIPMENT_OTHER_DETAIL")
				Me.OnEQUIPMENT_OTHER_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAW_MC", DbType:="Bit NOT NULL")>  _
	Public Property LAW_MC() As Boolean
		Get
			Return Me._LAW_MC
		End Get
		Set
			If ((Me._LAW_MC = value)  _
						= false) Then
				Me.OnLAW_MCChanging(value)
				Me.SendPropertyChanging
				Me._LAW_MC = value
				Me.SendPropertyChanged("LAW_MC")
				Me.OnLAW_MCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAW_CHEMECALS", DbType:="Bit NOT NULL")>  _
	Public Property LAW_CHEMECALS() As Boolean
		Get
			Return Me._LAW_CHEMECALS
		End Get
		Set
			If ((Me._LAW_CHEMECALS = value)  _
						= false) Then
				Me.OnLAW_CHEMECALSChanging(value)
				Me.SendPropertyChanging
				Me._LAW_CHEMECALS = value
				Me.SendPropertyChanged("LAW_CHEMECALS")
				Me.OnLAW_CHEMECALSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAW_ENVIRONMENTAL", DbType:="Bit NOT NULL")>  _
	Public Property LAW_ENVIRONMENTAL() As Boolean
		Get
			Return Me._LAW_ENVIRONMENTAL
		End Get
		Set
			If ((Me._LAW_ENVIRONMENTAL = value)  _
						= false) Then
				Me.OnLAW_ENVIRONMENTALChanging(value)
				Me.SendPropertyChanging
				Me._LAW_ENVIRONMENTAL = value
				Me.SendPropertyChanged("LAW_ENVIRONMENTAL")
				Me.OnLAW_ENVIRONMENTALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAW_HIGH_PRESSURE_GAS", DbType:="Bit NOT NULL")>  _
	Public Property LAW_HIGH_PRESSURE_GAS() As Boolean
		Get
			Return Me._LAW_HIGH_PRESSURE_GAS
		End Get
		Set
			If ((Me._LAW_HIGH_PRESSURE_GAS = value)  _
						= false) Then
				Me.OnLAW_HIGH_PRESSURE_GASChanging(value)
				Me.SendPropertyChanging
				Me._LAW_HIGH_PRESSURE_GAS = value
				Me.SendPropertyChanged("LAW_HIGH_PRESSURE_GAS")
				Me.OnLAW_HIGH_PRESSURE_GASChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAW_PREVENT_STOP_FIRE", DbType:="Bit NOT NULL")>  _
	Public Property LAW_PREVENT_STOP_FIRE() As Boolean
		Get
			Return Me._LAW_PREVENT_STOP_FIRE
		End Get
		Set
			If ((Me._LAW_PREVENT_STOP_FIRE = value)  _
						= false) Then
				Me.OnLAW_PREVENT_STOP_FIREChanging(value)
				Me.SendPropertyChanging
				Me._LAW_PREVENT_STOP_FIRE = value
				Me.SendPropertyChanged("LAW_PREVENT_STOP_FIRE")
				Me.OnLAW_PREVENT_STOP_FIREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAW_FACTORY", DbType:="Bit NOT NULL")>  _
	Public Property LAW_FACTORY() As Boolean
		Get
			Return Me._LAW_FACTORY
		End Get
		Set
			If ((Me._LAW_FACTORY = value)  _
						= false) Then
				Me.OnLAW_FACTORYChanging(value)
				Me.SendPropertyChanging
				Me._LAW_FACTORY = value
				Me.SendPropertyChanged("LAW_FACTORY")
				Me.OnLAW_FACTORYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAW_FUEL_REGULATORY", DbType:="Bit NOT NULL")>  _
	Public Property LAW_FUEL_REGULATORY() As Boolean
		Get
			Return Me._LAW_FUEL_REGULATORY
		End Get
		Set
			If ((Me._LAW_FUEL_REGULATORY = value)  _
						= false) Then
				Me.OnLAW_FUEL_REGULATORYChanging(value)
				Me.SendPropertyChanging
				Me._LAW_FUEL_REGULATORY = value
				Me.SendPropertyChanged("LAW_FUEL_REGULATORY")
				Me.OnLAW_FUEL_REGULATORYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAW_OTHER", DbType:="Bit NOT NULL")>  _
	Public Property LAW_OTHER() As Boolean
		Get
			Return Me._LAW_OTHER
		End Get
		Set
			If ((Me._LAW_OTHER = value)  _
						= false) Then
				Me.OnLAW_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._LAW_OTHER = value
				Me.SendPropertyChanged("LAW_OTHER")
				Me.OnLAW_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAW_OTHER_DETAIL", DbType:="VarChar(50)")>  _
	Public Property LAW_OTHER_DETAIL() As String
		Get
			Return Me._LAW_OTHER_DETAIL
		End Get
		Set
			If (String.Equals(Me._LAW_OTHER_DETAIL, value) = false) Then
				Me.OnLAW_OTHER_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._LAW_OTHER_DETAIL = value
				Me.SendPropertyChanged("LAW_OTHER_DETAIL")
				Me.OnLAW_OTHER_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAW_NAME", DbType:="VarChar(50)")>  _
	Public Property LAW_NAME() As String
		Get
			Return Me._LAW_NAME
		End Get
		Set
			If (String.Equals(Me._LAW_NAME, value) = false) Then
				Me.OnLAW_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAW_NAME = value
				Me.SendPropertyChanged("LAW_NAME")
				Me.OnLAW_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAW_NOTICE", DbType:="Bit NOT NULL")>  _
	Public Property LAW_NOTICE() As Boolean
		Get
			Return Me._LAW_NOTICE
		End Get
		Set
			If ((Me._LAW_NOTICE = value)  _
						= false) Then
				Me.OnLAW_NOTICEChanging(value)
				Me.SendPropertyChanging
				Me._LAW_NOTICE = value
				Me.SendPropertyChanged("LAW_NOTICE")
				Me.OnLAW_NOTICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAW_NOTICE_DETAIL", DbType:="VarChar(50)")>  _
	Public Property LAW_NOTICE_DETAIL() As String
		Get
			Return Me._LAW_NOTICE_DETAIL
		End Get
		Set
			If (String.Equals(Me._LAW_NOTICE_DETAIL, value) = false) Then
				Me.OnLAW_NOTICE_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._LAW_NOTICE_DETAIL = value
				Me.SendPropertyChanged("LAW_NOTICE_DETAIL")
				Me.OnLAW_NOTICE_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAW_APPROVE", DbType:="Bit NOT NULL")>  _
	Public Property LAW_APPROVE() As Boolean
		Get
			Return Me._LAW_APPROVE
		End Get
		Set
			If ((Me._LAW_APPROVE = value)  _
						= false) Then
				Me.OnLAW_APPROVEChanging(value)
				Me.SendPropertyChanging
				Me._LAW_APPROVE = value
				Me.SendPropertyChanged("LAW_APPROVE")
				Me.OnLAW_APPROVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAW_APPROVE_DETAIL", DbType:="VarChar(50)")>  _
	Public Property LAW_APPROVE_DETAIL() As String
		Get
			Return Me._LAW_APPROVE_DETAIL
		End Get
		Set
			If (String.Equals(Me._LAW_APPROVE_DETAIL, value) = false) Then
				Me.OnLAW_APPROVE_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._LAW_APPROVE_DETAIL = value
				Me.SendPropertyChanged("LAW_APPROVE_DETAIL")
				Me.OnLAW_APPROVE_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAW_CHECK", DbType:="Bit NOT NULL")>  _
	Public Property LAW_CHECK() As Boolean
		Get
			Return Me._LAW_CHECK
		End Get
		Set
			If ((Me._LAW_CHECK = value)  _
						= false) Then
				Me.OnLAW_CHECKChanging(value)
				Me.SendPropertyChanging
				Me._LAW_CHECK = value
				Me.SendPropertyChanged("LAW_CHECK")
				Me.OnLAW_CHECKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAW_CHECK_DETAIL", DbType:="VarChar(50)")>  _
	Public Property LAW_CHECK_DETAIL() As String
		Get
			Return Me._LAW_CHECK_DETAIL
		End Get
		Set
			If (String.Equals(Me._LAW_CHECK_DETAIL, value) = false) Then
				Me.OnLAW_CHECK_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._LAW_CHECK_DETAIL = value
				Me.SendPropertyChanged("LAW_CHECK_DETAIL")
				Me.OnLAW_CHECK_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMG_TEMP_STAMP", DbType:="VarChar(50)")>  _
	Public Property IMG_TEMP_STAMP() As String
		Get
			Return Me._IMG_TEMP_STAMP
		End Get
		Set
			If (String.Equals(Me._IMG_TEMP_STAMP, value) = false) Then
				Me.OnIMG_TEMP_STAMPChanging(value)
				Me.SendPropertyChanging
				Me._IMG_TEMP_STAMP = value
				Me.SendPropertyChanged("IMG_TEMP_STAMP")
				Me.OnIMG_TEMP_STAMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMG_TEMP_STAMP_CONTENT_TYPE", DbType:="VarChar(50)")>  _
	Public Property IMG_TEMP_STAMP_CONTENT_TYPE() As String
		Get
			Return Me._IMG_TEMP_STAMP_CONTENT_TYPE
		End Get
		Set
			If (String.Equals(Me._IMG_TEMP_STAMP_CONTENT_TYPE, value) = false) Then
				Me.OnIMG_TEMP_STAMP_CONTENT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._IMG_TEMP_STAMP_CONTENT_TYPE = value
				Me.SendPropertyChanged("IMG_TEMP_STAMP_CONTENT_TYPE")
				Me.OnIMG_TEMP_STAMP_CONTENT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMG_TEMP_STAMP_DATA", DbType:="VarBinary(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IMG_TEMP_STAMP_DATA() As System.Data.Linq.Binary
		Get
			Return Me._IMG_TEMP_STAMP_DATA
		End Get
		Set
			If (Object.Equals(Me._IMG_TEMP_STAMP_DATA, value) = false) Then
				Me.OnIMG_TEMP_STAMP_DATAChanging(value)
				Me.SendPropertyChanging
				Me._IMG_TEMP_STAMP_DATA = value
				Me.SendPropertyChanged("IMG_TEMP_STAMP_DATA")
				Me.OnIMG_TEMP_STAMP_DATAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_NAME_APPROVE", DbType:="VarChar(20)")>  _
	Public Property REQUEST_NAME_APPROVE() As String
		Get
			Return Me._REQUEST_NAME_APPROVE
		End Get
		Set
			If (String.Equals(Me._REQUEST_NAME_APPROVE, value) = false) Then
				Me.OnREQUEST_NAME_APPROVEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_NAME_APPROVE = value
				Me.SendPropertyChanged("REQUEST_NAME_APPROVE")
				Me.OnREQUEST_NAME_APPROVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_APPROVE_DATE", DbType:="DateTime")>  _
	Public Property REQUEST_APPROVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUEST_APPROVE_DATE
		End Get
		Set
			If (Me._REQUEST_APPROVE_DATE.Equals(value) = false) Then
				Me.OnREQUEST_APPROVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_APPROVE_DATE = value
				Me.SendPropertyChanged("REQUEST_APPROVE_DATE")
				Me.OnREQUEST_APPROVE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SECT_MGR_NAME_APPROVE", DbType:="VarChar(20)")>  _
	Public Property SECT_MGR_NAME_APPROVE() As String
		Get
			Return Me._SECT_MGR_NAME_APPROVE
		End Get
		Set
			If (String.Equals(Me._SECT_MGR_NAME_APPROVE, value) = false) Then
				Me.OnSECT_MGR_NAME_APPROVEChanging(value)
				Me.SendPropertyChanging
				Me._SECT_MGR_NAME_APPROVE = value
				Me.SendPropertyChanged("SECT_MGR_NAME_APPROVE")
				Me.OnSECT_MGR_NAME_APPROVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SECT_MGR_APPROVE_DATE", DbType:="DateTime")>  _
	Public Property SECT_MGR_APPROVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._SECT_MGR_APPROVE_DATE
		End Get
		Set
			If (Me._SECT_MGR_APPROVE_DATE.Equals(value) = false) Then
				Me.OnSECT_MGR_APPROVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._SECT_MGR_APPROVE_DATE = value
				Me.SendPropertyChanged("SECT_MGR_APPROVE_DATE")
				Me.OnSECT_MGR_APPROVE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPT_MGR_NAME_APPROVE", DbType:="VarChar(20)")>  _
	Public Property DEPT_MGR_NAME_APPROVE() As String
		Get
			Return Me._DEPT_MGR_NAME_APPROVE
		End Get
		Set
			If (String.Equals(Me._DEPT_MGR_NAME_APPROVE, value) = false) Then
				Me.OnDEPT_MGR_NAME_APPROVEChanging(value)
				Me.SendPropertyChanging
				Me._DEPT_MGR_NAME_APPROVE = value
				Me.SendPropertyChanged("DEPT_MGR_NAME_APPROVE")
				Me.OnDEPT_MGR_NAME_APPROVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPT_MGR_APPROVE_DATE", DbType:="DateTime")>  _
	Public Property DEPT_MGR_APPROVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DEPT_MGR_APPROVE_DATE
		End Get
		Set
			If (Me._DEPT_MGR_APPROVE_DATE.Equals(value) = false) Then
				Me.OnDEPT_MGR_APPROVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DEPT_MGR_APPROVE_DATE = value
				Me.SendPropertyChanged("DEPT_MGR_APPROVE_DATE")
				Me.OnDEPT_MGR_APPROVE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIV_MGR_NAME_APPROVE", DbType:="VarChar(20)")>  _
	Public Property DIV_MGR_NAME_APPROVE() As String
		Get
			Return Me._DIV_MGR_NAME_APPROVE
		End Get
		Set
			If (String.Equals(Me._DIV_MGR_NAME_APPROVE, value) = false) Then
				Me.OnDIV_MGR_NAME_APPROVEChanging(value)
				Me.SendPropertyChanging
				Me._DIV_MGR_NAME_APPROVE = value
				Me.SendPropertyChanged("DIV_MGR_NAME_APPROVE")
				Me.OnDIV_MGR_NAME_APPROVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIV_MGR_APPROVE_DATE", DbType:="DateTime")>  _
	Public Property DIV_MGR_APPROVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DIV_MGR_APPROVE_DATE
		End Get
		Set
			If (Me._DIV_MGR_APPROVE_DATE.Equals(value) = false) Then
				Me.OnDIV_MGR_APPROVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DIV_MGR_APPROVE_DATE = value
				Me.SendPropertyChanged("DIV_MGR_APPROVE_DATE")
				Me.OnDIV_MGR_APPROVE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCEQ_SUBCOM_NAME_APPROVE", DbType:="VarChar(20)")>  _
	Public Property MCEQ_SUBCOM_NAME_APPROVE() As String
		Get
			Return Me._MCEQ_SUBCOM_NAME_APPROVE
		End Get
		Set
			If (String.Equals(Me._MCEQ_SUBCOM_NAME_APPROVE, value) = false) Then
				Me.OnMCEQ_SUBCOM_NAME_APPROVEChanging(value)
				Me.SendPropertyChanging
				Me._MCEQ_SUBCOM_NAME_APPROVE = value
				Me.SendPropertyChanged("MCEQ_SUBCOM_NAME_APPROVE")
				Me.OnMCEQ_SUBCOM_NAME_APPROVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCEQ_SUBCOM_APPROVE_DATE", DbType:="DateTime")>  _
	Public Property MCEQ_SUBCOM_APPROVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._MCEQ_SUBCOM_APPROVE_DATE
		End Get
		Set
			If (Me._MCEQ_SUBCOM_APPROVE_DATE.Equals(value) = false) Then
				Me.OnMCEQ_SUBCOM_APPROVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._MCEQ_SUBCOM_APPROVE_DATE = value
				Me.SendPropertyChanged("MCEQ_SUBCOM_APPROVE_DATE")
				Me.OnMCEQ_SUBCOM_APPROVE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETY_OFFICER_NAME_APPROVE", DbType:="VarChar(20)")>  _
	Public Property SAFETY_OFFICER_NAME_APPROVE() As String
		Get
			Return Me._SAFETY_OFFICER_NAME_APPROVE
		End Get
		Set
			If (String.Equals(Me._SAFETY_OFFICER_NAME_APPROVE, value) = false) Then
				Me.OnSAFETY_OFFICER_NAME_APPROVEChanging(value)
				Me.SendPropertyChanging
				Me._SAFETY_OFFICER_NAME_APPROVE = value
				Me.SendPropertyChanged("SAFETY_OFFICER_NAME_APPROVE")
				Me.OnSAFETY_OFFICER_NAME_APPROVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETY_OFFICER_APPROVE_DATE", DbType:="DateTime")>  _
	Public Property SAFETY_OFFICER_APPROVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._SAFETY_OFFICER_APPROVE_DATE
		End Get
		Set
			If (Me._SAFETY_OFFICER_APPROVE_DATE.Equals(value) = false) Then
				Me.OnSAFETY_OFFICER_APPROVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._SAFETY_OFFICER_APPROVE_DATE = value
				Me.SendPropertyChanged("SAFETY_OFFICER_APPROVE_DATE")
				Me.OnSAFETY_OFFICER_APPROVE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETY_MGR_NAME_APPROVE", DbType:="VarChar(20)")>  _
	Public Property SAFETY_MGR_NAME_APPROVE() As String
		Get
			Return Me._SAFETY_MGR_NAME_APPROVE
		End Get
		Set
			If (String.Equals(Me._SAFETY_MGR_NAME_APPROVE, value) = false) Then
				Me.OnSAFETY_MGR_NAME_APPROVEChanging(value)
				Me.SendPropertyChanging
				Me._SAFETY_MGR_NAME_APPROVE = value
				Me.SendPropertyChanged("SAFETY_MGR_NAME_APPROVE")
				Me.OnSAFETY_MGR_NAME_APPROVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETY_MGR_APPROVE_DATE", DbType:="DateTime")>  _
	Public Property SAFETY_MGR_APPROVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._SAFETY_MGR_APPROVE_DATE
		End Get
		Set
			If (Me._SAFETY_MGR_APPROVE_DATE.Equals(value) = false) Then
				Me.OnSAFETY_MGR_APPROVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._SAFETY_MGR_APPROVE_DATE = value
				Me.SendPropertyChanged("SAFETY_MGR_APPROVE_DATE")
				Me.OnSAFETY_MGR_APPROVE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPNO_ADD", DbType:="VarChar(10)")>  _
	Public Property OPNO_ADD() As String
		Get
			Return Me._OPNO_ADD
		End Get
		Set
			If (String.Equals(Me._OPNO_ADD, value) = false) Then
				Me.OnOPNO_ADDChanging(value)
				Me.SendPropertyChanging
				Me._OPNO_ADD = value
				Me.SendPropertyChanged("OPNO_ADD")
				Me.OnOPNO_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ADD", DbType:="DateTime")>  _
	Public Property DATE_ADD() As System.Nullable(Of Date)
		Get
			Return Me._DATE_ADD
		End Get
		Set
			If (Me._DATE_ADD.Equals(value) = false) Then
				Me.OnDATE_ADDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ADD = value
				Me.SendPropertyChanged("DATE_ADD")
				Me.OnDATE_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPNO_UPDATE", DbType:="VarChar(10)")>  _
	Public Property OPNO_UPDATE() As String
		Get
			Return Me._OPNO_UPDATE
		End Get
		Set
			If (String.Equals(Me._OPNO_UPDATE, value) = false) Then
				Me.OnOPNO_UPDATEChanging(value)
				Me.SendPropertyChanging
				Me._OPNO_UPDATE = value
				Me.SendPropertyChanged("OPNO_UPDATE")
				Me.OnOPNO_UPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_UPDATE", DbType:="DateTime")>  _
	Public Property DATE_UPDATE() As System.Nullable(Of Date)
		Get
			Return Me._DATE_UPDATE
		End Get
		Set
			If (Me._DATE_UPDATE.Equals(value) = false) Then
				Me.OnDATE_UPDATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE_UPDATE = value
				Me.SendPropertyChanged("DATE_UPDATE")
				Me.OnDATE_UPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_NAME", DbType:="VarChar(20)")>  _
	Public Property STATUS_NAME() As String
		Get
			Return Me._STATUS_NAME
		End Get
		Set
			If (String.Equals(Me._STATUS_NAME, value) = false) Then
				Me.OnSTATUS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_NAME = value
				Me.SendPropertyChanged("STATUS_NAME")
				Me.OnSTATUS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IP", DbType:="VarChar(10)")>  _
	Public Property IP() As String
		Get
			Return Me._IP
		End Get
		Set
			If (String.Equals(Me._IP, value) = false) Then
				Me.OnIPChanging(value)
				Me.SendPropertyChanging
				Me._IP = value
				Me.SendPropertyChanged("IP")
				Me.OnIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOCUMENT_ATTACH_NAME", DbType:="VarChar(50)")>  _
	Public Property DOCUMENT_ATTACH_NAME() As String
		Get
			Return Me._DOCUMENT_ATTACH_NAME
		End Get
		Set
			If (String.Equals(Me._DOCUMENT_ATTACH_NAME, value) = false) Then
				Me.OnDOCUMENT_ATTACH_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DOCUMENT_ATTACH_NAME = value
				Me.SendPropertyChanged("DOCUMENT_ATTACH_NAME")
				Me.OnDOCUMENT_ATTACH_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOCUMENT_ATTACH_CONTENT_TYPE", DbType:="VarChar(50)")>  _
	Public Property DOCUMENT_ATTACH_CONTENT_TYPE() As String
		Get
			Return Me._DOCUMENT_ATTACH_CONTENT_TYPE
		End Get
		Set
			If (String.Equals(Me._DOCUMENT_ATTACH_CONTENT_TYPE, value) = false) Then
				Me.OnDOCUMENT_ATTACH_CONTENT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._DOCUMENT_ATTACH_CONTENT_TYPE = value
				Me.SendPropertyChanged("DOCUMENT_ATTACH_CONTENT_TYPE")
				Me.OnDOCUMENT_ATTACH_CONTENT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOCUMENT_ATTACH_DATA", DbType:="VarBinary(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DOCUMENT_ATTACH_DATA() As Byte()
		Get
			Return Me._DOCUMENT_ATTACH_DATA
		End Get
		Set
			If (Object.Equals(Me._DOCUMENT_ATTACH_DATA, value) = false) Then
				Me.OnDOCUMENT_ATTACH_DATAChanging(value)
				Me.SendPropertyChanging
				Me._DOCUMENT_ATTACH_DATA = value
				Me.SendPropertyChanged("DOCUMENT_ATTACH_DATA")
				Me.OnDOCUMENT_ATTACH_DATAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_ATTACH_NAME", DbType:="VarChar(50)")>  _
	Public Property IMAGE_ATTACH_NAME() As String
		Get
			Return Me._IMAGE_ATTACH_NAME
		End Get
		Set
			If (String.Equals(Me._IMAGE_ATTACH_NAME, value) = false) Then
				Me.OnIMAGE_ATTACH_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._IMAGE_ATTACH_NAME = value
				Me.SendPropertyChanged("IMAGE_ATTACH_NAME")
				Me.OnIMAGE_ATTACH_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_ATTACH_CONTENT_TYPE", DbType:="VarChar(50)")>  _
	Public Property IMAGE_ATTACH_CONTENT_TYPE() As String
		Get
			Return Me._IMAGE_ATTACH_CONTENT_TYPE
		End Get
		Set
			If (String.Equals(Me._IMAGE_ATTACH_CONTENT_TYPE, value) = false) Then
				Me.OnIMAGE_ATTACH_CONTENT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._IMAGE_ATTACH_CONTENT_TYPE = value
				Me.SendPropertyChanged("IMAGE_ATTACH_CONTENT_TYPE")
				Me.OnIMAGE_ATTACH_CONTENT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_ATTACH_DATA", DbType:="VarBinary(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IMAGE_ATTACH_DATA() As System.Data.Linq.Binary
		Get
			Return Me._IMAGE_ATTACH_DATA
		End Get
		Set
			If (Object.Equals(Me._IMAGE_ATTACH_DATA, value) = false) Then
				Me.OnIMAGE_ATTACH_DATAChanging(value)
				Me.SendPropertyChanging
				Me._IMAGE_ATTACH_DATA = value
				Me.SendPropertyChanged("IMAGE_ATTACH_DATA")
				Me.OnIMAGE_ATTACH_DATAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAYOUT_ATTACH_NAME", DbType:="VarChar(50)")>  _
	Public Property LAYOUT_ATTACH_NAME() As String
		Get
			Return Me._LAYOUT_ATTACH_NAME
		End Get
		Set
			If (String.Equals(Me._LAYOUT_ATTACH_NAME, value) = false) Then
				Me.OnLAYOUT_ATTACH_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LAYOUT_ATTACH_NAME = value
				Me.SendPropertyChanged("LAYOUT_ATTACH_NAME")
				Me.OnLAYOUT_ATTACH_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAYOUT_ATTACH_CONTENT_TYPE", DbType:="VarChar(50)")>  _
	Public Property LAYOUT_ATTACH_CONTENT_TYPE() As String
		Get
			Return Me._LAYOUT_ATTACH_CONTENT_TYPE
		End Get
		Set
			If (String.Equals(Me._LAYOUT_ATTACH_CONTENT_TYPE, value) = false) Then
				Me.OnLAYOUT_ATTACH_CONTENT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._LAYOUT_ATTACH_CONTENT_TYPE = value
				Me.SendPropertyChanged("LAYOUT_ATTACH_CONTENT_TYPE")
				Me.OnLAYOUT_ATTACH_CONTENT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAYOUT_ATTACH_DATA", DbType:="VarBinary(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LAYOUT_ATTACH_DATA() As Byte()
		Get
			Return Me._LAYOUT_ATTACH_DATA
		End Get
		Set
			If (Object.Equals(Me._LAYOUT_ATTACH_DATA, value) = false) Then
				Me.OnLAYOUT_ATTACH_DATAChanging(value)
				Me.SendPropertyChanging
				Me._LAYOUT_ATTACH_DATA = value
				Me.SendPropertyChanged("LAYOUT_ATTACH_DATA")
				Me.OnLAYOUT_ATTACH_DATAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Users")>  _
Partial Public Class User
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _UserId As Integer
	
	Private _OperatorNo As String
	
	Private _Username As String
	
	Private _Password As String
	
	Private _Email As String
	
	Private _CreatedDate As Date
	
	Private _LastLoginDate As System.Nullable(Of Date)
	
	Private _Permission As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUserIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnOperatorNoChanging(value As String)
    End Sub
    Partial Private Sub OnOperatorNoChanged()
    End Sub
    Partial Private Sub OnUsernameChanging(value As String)
    End Sub
    Partial Private Sub OnUsernameChanged()
    End Sub
    Partial Private Sub OnPasswordChanging(value As String)
    End Sub
    Partial Private Sub OnPasswordChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnCreatedDateChanging(value As Date)
    End Sub
    Partial Private Sub OnCreatedDateChanged()
    End Sub
    Partial Private Sub OnLastLoginDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastLoginDateChanged()
    End Sub
    Partial Private Sub OnPermissionChanging(value As String)
    End Sub
    Partial Private Sub OnPermissionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property UserId() As Integer
		Get
			Return Me._UserId
		End Get
		Set
			If ((Me._UserId = value)  _
						= false) Then
				Me.OnUserIdChanging(value)
				Me.SendPropertyChanging
				Me._UserId = value
				Me.SendPropertyChanged("UserId")
				Me.OnUserIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OperatorNo", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property OperatorNo() As String
		Get
			Return Me._OperatorNo
		End Get
		Set
			If (String.Equals(Me._OperatorNo, value) = false) Then
				Me.OnOperatorNoChanging(value)
				Me.SendPropertyChanging
				Me._OperatorNo = value
				Me.SendPropertyChanged("OperatorNo")
				Me.OnOperatorNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Username", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Username() As String
		Get
			Return Me._Username
		End Get
		Set
			If (String.Equals(Me._Username, value) = false) Then
				Me.OnUsernameChanging(value)
				Me.SendPropertyChanging
				Me._Username = value
				Me.SendPropertyChanged("Username")
				Me.OnUsernameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Password", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Password() As String
		Get
			Return Me._Password
		End Get
		Set
			If (String.Equals(Me._Password, value) = false) Then
				Me.OnPasswordChanging(value)
				Me.SendPropertyChanging
				Me._Password = value
				Me.SendPropertyChanged("Password")
				Me.OnPasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedDate", DbType:="DateTime NOT NULL")>  _
	Public Property CreatedDate() As Date
		Get
			Return Me._CreatedDate
		End Get
		Set
			If ((Me._CreatedDate = value)  _
						= false) Then
				Me.OnCreatedDateChanging(value)
				Me.SendPropertyChanging
				Me._CreatedDate = value
				Me.SendPropertyChanged("CreatedDate")
				Me.OnCreatedDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastLoginDate", DbType:="DateTime")>  _
	Public Property LastLoginDate() As System.Nullable(Of Date)
		Get
			Return Me._LastLoginDate
		End Get
		Set
			If (Me._LastLoginDate.Equals(value) = false) Then
				Me.OnLastLoginDateChanging(value)
				Me.SendPropertyChanging
				Me._LastLoginDate = value
				Me.SendPropertyChanged("LastLoginDate")
				Me.OnLastLoginDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Permission", DbType:="NChar(10)")>  _
	Public Property Permission() As String
		Get
			Return Me._Permission
		End Get
		Set
			If (String.Equals(Me._Permission, value) = false) Then
				Me.OnPermissionChanging(value)
				Me.SendPropertyChanging
				Me._Permission = value
				Me.SendPropertyChanged("Permission")
				Me.OnPermissionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TB_FLOW_SAFETY")>  _
Partial Public Class TB_FLOW_SAFETY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _MCESUBCOM_OP As String
	
	Private _MCESUBCOM_EMAIL As String
	
	Private _MCESUBCOM_STAMP As String
	
	Private _SAFETYOFF_OP As String
	
	Private _SAFETYOFF_EMAIL As String
	
	Private _SAFETYOFF_STAMP As String
	
	Private _SAFETYMGR_OP As String
	
	Private _SAFETYMGR_EMAIL As String
	
	Private _SAFETYMGR_STAMP As String
	
	Private _RATING As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _ADMIN_OP As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnMCESUBCOM_OPChanging(value As String)
    End Sub
    Partial Private Sub OnMCESUBCOM_OPChanged()
    End Sub
    Partial Private Sub OnMCESUBCOM_EMAILChanging(value As String)
    End Sub
    Partial Private Sub OnMCESUBCOM_EMAILChanged()
    End Sub
    Partial Private Sub OnMCESUBCOM_STAMPChanging(value As String)
    End Sub
    Partial Private Sub OnMCESUBCOM_STAMPChanged()
    End Sub
    Partial Private Sub OnSAFETYOFF_OPChanging(value As String)
    End Sub
    Partial Private Sub OnSAFETYOFF_OPChanged()
    End Sub
    Partial Private Sub OnSAFETYOFF_EMAILChanging(value As String)
    End Sub
    Partial Private Sub OnSAFETYOFF_EMAILChanged()
    End Sub
    Partial Private Sub OnSAFETYOFF_STAMPChanging(value As String)
    End Sub
    Partial Private Sub OnSAFETYOFF_STAMPChanged()
    End Sub
    Partial Private Sub OnSAFETYMGR_OPChanging(value As String)
    End Sub
    Partial Private Sub OnSAFETYMGR_OPChanged()
    End Sub
    Partial Private Sub OnSAFETYMGR_EMAILChanging(value As String)
    End Sub
    Partial Private Sub OnSAFETYMGR_EMAILChanged()
    End Sub
    Partial Private Sub OnSAFETYMGR_STAMPChanging(value As String)
    End Sub
    Partial Private Sub OnSAFETYMGR_STAMPChanged()
    End Sub
    Partial Private Sub OnRATINGChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRATINGChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnADMIN_OPChanging(value As String)
    End Sub
    Partial Private Sub OnADMIN_OPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCESUBCOM_OP", DbType:="VarChar(10)")>  _
	Public Property MCESUBCOM_OP() As String
		Get
			Return Me._MCESUBCOM_OP
		End Get
		Set
			If (String.Equals(Me._MCESUBCOM_OP, value) = false) Then
				Me.OnMCESUBCOM_OPChanging(value)
				Me.SendPropertyChanging
				Me._MCESUBCOM_OP = value
				Me.SendPropertyChanged("MCESUBCOM_OP")
				Me.OnMCESUBCOM_OPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCESUBCOM_EMAIL", DbType:="VarChar(30)")>  _
	Public Property MCESUBCOM_EMAIL() As String
		Get
			Return Me._MCESUBCOM_EMAIL
		End Get
		Set
			If (String.Equals(Me._MCESUBCOM_EMAIL, value) = false) Then
				Me.OnMCESUBCOM_EMAILChanging(value)
				Me.SendPropertyChanging
				Me._MCESUBCOM_EMAIL = value
				Me.SendPropertyChanged("MCESUBCOM_EMAIL")
				Me.OnMCESUBCOM_EMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MCESUBCOM_STAMP", DbType:="VarChar(20)")>  _
	Public Property MCESUBCOM_STAMP() As String
		Get
			Return Me._MCESUBCOM_STAMP
		End Get
		Set
			If (String.Equals(Me._MCESUBCOM_STAMP, value) = false) Then
				Me.OnMCESUBCOM_STAMPChanging(value)
				Me.SendPropertyChanging
				Me._MCESUBCOM_STAMP = value
				Me.SendPropertyChanged("MCESUBCOM_STAMP")
				Me.OnMCESUBCOM_STAMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETYOFF_OP", DbType:="VarChar(10)")>  _
	Public Property SAFETYOFF_OP() As String
		Get
			Return Me._SAFETYOFF_OP
		End Get
		Set
			If (String.Equals(Me._SAFETYOFF_OP, value) = false) Then
				Me.OnSAFETYOFF_OPChanging(value)
				Me.SendPropertyChanging
				Me._SAFETYOFF_OP = value
				Me.SendPropertyChanged("SAFETYOFF_OP")
				Me.OnSAFETYOFF_OPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETYOFF_EMAIL", DbType:="VarChar(30)")>  _
	Public Property SAFETYOFF_EMAIL() As String
		Get
			Return Me._SAFETYOFF_EMAIL
		End Get
		Set
			If (String.Equals(Me._SAFETYOFF_EMAIL, value) = false) Then
				Me.OnSAFETYOFF_EMAILChanging(value)
				Me.SendPropertyChanging
				Me._SAFETYOFF_EMAIL = value
				Me.SendPropertyChanged("SAFETYOFF_EMAIL")
				Me.OnSAFETYOFF_EMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETYOFF_STAMP", DbType:="VarChar(20)")>  _
	Public Property SAFETYOFF_STAMP() As String
		Get
			Return Me._SAFETYOFF_STAMP
		End Get
		Set
			If (String.Equals(Me._SAFETYOFF_STAMP, value) = false) Then
				Me.OnSAFETYOFF_STAMPChanging(value)
				Me.SendPropertyChanging
				Me._SAFETYOFF_STAMP = value
				Me.SendPropertyChanged("SAFETYOFF_STAMP")
				Me.OnSAFETYOFF_STAMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETYMGR_OP", DbType:="VarChar(10)")>  _
	Public Property SAFETYMGR_OP() As String
		Get
			Return Me._SAFETYMGR_OP
		End Get
		Set
			If (String.Equals(Me._SAFETYMGR_OP, value) = false) Then
				Me.OnSAFETYMGR_OPChanging(value)
				Me.SendPropertyChanging
				Me._SAFETYMGR_OP = value
				Me.SendPropertyChanged("SAFETYMGR_OP")
				Me.OnSAFETYMGR_OPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETYMGR_EMAIL", DbType:="VarChar(30)")>  _
	Public Property SAFETYMGR_EMAIL() As String
		Get
			Return Me._SAFETYMGR_EMAIL
		End Get
		Set
			If (String.Equals(Me._SAFETYMGR_EMAIL, value) = false) Then
				Me.OnSAFETYMGR_EMAILChanging(value)
				Me.SendPropertyChanging
				Me._SAFETYMGR_EMAIL = value
				Me.SendPropertyChanged("SAFETYMGR_EMAIL")
				Me.OnSAFETYMGR_EMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAFETYMGR_STAMP", DbType:="VarChar(20)")>  _
	Public Property SAFETYMGR_STAMP() As String
		Get
			Return Me._SAFETYMGR_STAMP
		End Get
		Set
			If (String.Equals(Me._SAFETYMGR_STAMP, value) = false) Then
				Me.OnSAFETYMGR_STAMPChanging(value)
				Me.SendPropertyChanging
				Me._SAFETYMGR_STAMP = value
				Me.SendPropertyChanged("SAFETYMGR_STAMP")
				Me.OnSAFETYMGR_STAMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RATING", DbType:="Int")>  _
	Public Property RATING() As System.Nullable(Of Integer)
		Get
			Return Me._RATING
		End Get
		Set
			If (Me._RATING.Equals(value) = false) Then
				Me.OnRATINGChanging(value)
				Me.SendPropertyChanging
				Me._RATING = value
				Me.SendPropertyChanged("RATING")
				Me.OnRATINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMIN_OP", DbType:="VarChar(10)")>  _
	Public Property ADMIN_OP() As String
		Get
			Return Me._ADMIN_OP
		End Get
		Set
			If (String.Equals(Me._ADMIN_OP, value) = false) Then
				Me.OnADMIN_OPChanging(value)
				Me.SendPropertyChanging
				Me._ADMIN_OP = value
				Me.SendPropertyChanged("ADMIN_OP")
				Me.OnADMIN_OPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TB_EQUIPMENT_CHECK")>  _
Partial Public Class TB_EQUIPMENT_CHECK
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _MC_NO As String
	
	Private _Title As Integer
	
	Private _Title_No As Integer
	
	Private _Detail_topic As String
	
	Private _Number As Integer
	
	Private _IsSelected As Boolean
	
	Private _IP As String
	
	Private _OPNO_ADD As String
	
	Private _DATE_ADD As Date
	
	Private _OPNO_UPDATE As String
	
	Private _DATE_UPDATE As Date
	
	Private _FLAG As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnMC_NOChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NOChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As Integer)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnTitle_NoChanging(value As Integer)
    End Sub
    Partial Private Sub OnTitle_NoChanged()
    End Sub
    Partial Private Sub OnDetail_topicChanging(value As String)
    End Sub
    Partial Private Sub OnDetail_topicChanged()
    End Sub
    Partial Private Sub OnNumberChanging(value As Integer)
    End Sub
    Partial Private Sub OnNumberChanged()
    End Sub
    Partial Private Sub OnIsSelectedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelectedChanged()
    End Sub
    Partial Private Sub OnIPChanging(value As String)
    End Sub
    Partial Private Sub OnIPChanged()
    End Sub
    Partial Private Sub OnOPNO_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnOPNO_ADDChanged()
    End Sub
    Partial Private Sub OnDATE_ADDChanging(value As Date)
    End Sub
    Partial Private Sub OnDATE_ADDChanged()
    End Sub
    Partial Private Sub OnOPNO_UPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnOPNO_UPDATEChanged()
    End Sub
    Partial Private Sub OnDATE_UPDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnDATE_UPDATEChanged()
    End Sub
    Partial Private Sub OnFLAGChanging(value As Integer)
    End Sub
    Partial Private Sub OnFLAGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property MC_NO() As String
		Get
			Return Me._MC_NO
		End Get
		Set
			If (String.Equals(Me._MC_NO, value) = false) Then
				Me.OnMC_NOChanging(value)
				Me.SendPropertyChanging
				Me._MC_NO = value
				Me.SendPropertyChanged("MC_NO")
				Me.OnMC_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="Int NOT NULL")>  _
	Public Property Title() As Integer
		Get
			Return Me._Title
		End Get
		Set
			If ((Me._Title = value)  _
						= false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title_No", DbType:="Int NOT NULL")>  _
	Public Property Title_No() As Integer
		Get
			Return Me._Title_No
		End Get
		Set
			If ((Me._Title_No = value)  _
						= false) Then
				Me.OnTitle_NoChanging(value)
				Me.SendPropertyChanging
				Me._Title_No = value
				Me.SendPropertyChanged("Title_No")
				Me.OnTitle_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_topic", DbType:="NVarChar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Detail_topic() As String
		Get
			Return Me._Detail_topic
		End Get
		Set
			If (String.Equals(Me._Detail_topic, value) = false) Then
				Me.OnDetail_topicChanging(value)
				Me.SendPropertyChanging
				Me._Detail_topic = value
				Me.SendPropertyChanged("Detail_topic")
				Me.OnDetail_topicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number", DbType:="Int NOT NULL")>  _
	Public Property Number() As Integer
		Get
			Return Me._Number
		End Get
		Set
			If ((Me._Number = value)  _
						= false) Then
				Me.OnNumberChanging(value)
				Me.SendPropertyChanging
				Me._Number = value
				Me.SendPropertyChanged("Number")
				Me.OnNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected() As Boolean
		Get
			Return Me._IsSelected
		End Get
		Set
			If ((Me._IsSelected = value)  _
						= false) Then
				Me.OnIsSelectedChanging(value)
				Me.SendPropertyChanging
				Me._IsSelected = value
				Me.SendPropertyChanged("IsSelected")
				Me.OnIsSelectedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IP", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property IP() As String
		Get
			Return Me._IP
		End Get
		Set
			If (String.Equals(Me._IP, value) = false) Then
				Me.OnIPChanging(value)
				Me.SendPropertyChanging
				Me._IP = value
				Me.SendPropertyChanged("IP")
				Me.OnIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPNO_ADD", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property OPNO_ADD() As String
		Get
			Return Me._OPNO_ADD
		End Get
		Set
			If (String.Equals(Me._OPNO_ADD, value) = false) Then
				Me.OnOPNO_ADDChanging(value)
				Me.SendPropertyChanging
				Me._OPNO_ADD = value
				Me.SendPropertyChanged("OPNO_ADD")
				Me.OnOPNO_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ADD", DbType:="DateTime NOT NULL")>  _
	Public Property DATE_ADD() As Date
		Get
			Return Me._DATE_ADD
		End Get
		Set
			If ((Me._DATE_ADD = value)  _
						= false) Then
				Me.OnDATE_ADDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ADD = value
				Me.SendPropertyChanged("DATE_ADD")
				Me.OnDATE_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPNO_UPDATE", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property OPNO_UPDATE() As String
		Get
			Return Me._OPNO_UPDATE
		End Get
		Set
			If (String.Equals(Me._OPNO_UPDATE, value) = false) Then
				Me.OnOPNO_UPDATEChanging(value)
				Me.SendPropertyChanging
				Me._OPNO_UPDATE = value
				Me.SendPropertyChanged("OPNO_UPDATE")
				Me.OnOPNO_UPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_UPDATE", DbType:="DateTime NOT NULL")>  _
	Public Property DATE_UPDATE() As Date
		Get
			Return Me._DATE_UPDATE
		End Get
		Set
			If ((Me._DATE_UPDATE = value)  _
						= false) Then
				Me.OnDATE_UPDATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE_UPDATE = value
				Me.SendPropertyChanged("DATE_UPDATE")
				Me.OnDATE_UPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLAG", DbType:="Int NOT NULL")>  _
	Public Property FLAG() As Integer
		Get
			Return Me._FLAG
		End Get
		Set
			If ((Me._FLAG = value)  _
						= false) Then
				Me.OnFLAGChanging(value)
				Me.SendPropertyChanging
				Me._FLAG = value
				Me.SendPropertyChanged("FLAG")
				Me.OnFLAGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TB_FILE_ATTACH")>  _
Partial Public Class TB_FILE_ATTACH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _MC_NO As String
	
	Private _FILE_ATTACH_NO_GROUP As System.Nullable(Of Integer)
	
	Private _FILE_ATTACH_NAME As String
	
	Private _FILE_ATTACH_CONTENT_TYPE As String
	
	Private _FILE_ATTACH_DATA() As Byte
	
	Private _OPNO_ADD As String
	
	Private _DATE_ADD As System.Nullable(Of Date)
	
	Private _OPNO_UPDATE As String
	
	Private _DATE_UPDATE As System.Nullable(Of Date)
	
	Private _IP As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnMC_NOChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NOChanged()
    End Sub
    Partial Private Sub OnFILE_ATTACH_NO_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFILE_ATTACH_NO_GROUPChanged()
    End Sub
    Partial Private Sub OnFILE_ATTACH_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFILE_ATTACH_NAMEChanged()
    End Sub
    Partial Private Sub OnFILE_ATTACH_CONTENT_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnFILE_ATTACH_CONTENT_TYPEChanged()
    End Sub
    Partial Private Sub OnFILE_ATTACH_DATAChanging(value As Byte())
    End Sub
    Partial Private Sub OnFILE_ATTACH_DATAChanged()
    End Sub
    Partial Private Sub OnOPNO_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnOPNO_ADDChanged()
    End Sub
    Partial Private Sub OnDATE_ADDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_ADDChanged()
    End Sub
    Partial Private Sub OnOPNO_UPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnOPNO_UPDATEChanged()
    End Sub
    Partial Private Sub OnDATE_UPDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_UPDATEChanged()
    End Sub
    Partial Private Sub OnIPChanging(value As String)
    End Sub
    Partial Private Sub OnIPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property MC_NO() As String
		Get
			Return Me._MC_NO
		End Get
		Set
			If (String.Equals(Me._MC_NO, value) = false) Then
				Me.OnMC_NOChanging(value)
				Me.SendPropertyChanging
				Me._MC_NO = value
				Me.SendPropertyChanged("MC_NO")
				Me.OnMC_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILE_ATTACH_NO_GROUP", DbType:="Int")>  _
	Public Property FILE_ATTACH_NO_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._FILE_ATTACH_NO_GROUP
		End Get
		Set
			If (Me._FILE_ATTACH_NO_GROUP.Equals(value) = false) Then
				Me.OnFILE_ATTACH_NO_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._FILE_ATTACH_NO_GROUP = value
				Me.SendPropertyChanged("FILE_ATTACH_NO_GROUP")
				Me.OnFILE_ATTACH_NO_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILE_ATTACH_NAME", DbType:="VarChar(50)")>  _
	Public Property FILE_ATTACH_NAME() As String
		Get
			Return Me._FILE_ATTACH_NAME
		End Get
		Set
			If (String.Equals(Me._FILE_ATTACH_NAME, value) = false) Then
				Me.OnFILE_ATTACH_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FILE_ATTACH_NAME = value
				Me.SendPropertyChanged("FILE_ATTACH_NAME")
				Me.OnFILE_ATTACH_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILE_ATTACH_CONTENT_TYPE", DbType:="VarChar(50)")>  _
	Public Property FILE_ATTACH_CONTENT_TYPE() As String
		Get
			Return Me._FILE_ATTACH_CONTENT_TYPE
		End Get
		Set
			If (String.Equals(Me._FILE_ATTACH_CONTENT_TYPE, value) = false) Then
				Me.OnFILE_ATTACH_CONTENT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._FILE_ATTACH_CONTENT_TYPE = value
				Me.SendPropertyChanged("FILE_ATTACH_CONTENT_TYPE")
				Me.OnFILE_ATTACH_CONTENT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILE_ATTACH_DATA", DbType:="VarBinary(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property FILE_ATTACH_DATA() As Byte()
		Get
			Return Me._FILE_ATTACH_DATA
		End Get
		Set
			If (Object.Equals(Me._FILE_ATTACH_DATA, value) = false) Then
				Me.OnFILE_ATTACH_DATAChanging(value)
				Me.SendPropertyChanging
				Me._FILE_ATTACH_DATA = value
				Me.SendPropertyChanged("FILE_ATTACH_DATA")
				Me.OnFILE_ATTACH_DATAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPNO_ADD", DbType:="VarChar(10)")>  _
	Public Property OPNO_ADD() As String
		Get
			Return Me._OPNO_ADD
		End Get
		Set
			If (String.Equals(Me._OPNO_ADD, value) = false) Then
				Me.OnOPNO_ADDChanging(value)
				Me.SendPropertyChanging
				Me._OPNO_ADD = value
				Me.SendPropertyChanged("OPNO_ADD")
				Me.OnOPNO_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ADD", DbType:="DateTime")>  _
	Public Property DATE_ADD() As System.Nullable(Of Date)
		Get
			Return Me._DATE_ADD
		End Get
		Set
			If (Me._DATE_ADD.Equals(value) = false) Then
				Me.OnDATE_ADDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ADD = value
				Me.SendPropertyChanged("DATE_ADD")
				Me.OnDATE_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPNO_UPDATE", DbType:="VarChar(10)")>  _
	Public Property OPNO_UPDATE() As String
		Get
			Return Me._OPNO_UPDATE
		End Get
		Set
			If (String.Equals(Me._OPNO_UPDATE, value) = false) Then
				Me.OnOPNO_UPDATEChanging(value)
				Me.SendPropertyChanging
				Me._OPNO_UPDATE = value
				Me.SendPropertyChanged("OPNO_UPDATE")
				Me.OnOPNO_UPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_UPDATE", DbType:="DateTime")>  _
	Public Property DATE_UPDATE() As System.Nullable(Of Date)
		Get
			Return Me._DATE_UPDATE
		End Get
		Set
			If (Me._DATE_UPDATE.Equals(value) = false) Then
				Me.OnDATE_UPDATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE_UPDATE = value
				Me.SendPropertyChanged("DATE_UPDATE")
				Me.OnDATE_UPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IP", DbType:="VarChar(10)")>  _
	Public Property IP() As String
		Get
			Return Me._IP
		End Get
		Set
			If (String.Equals(Me._IP, value) = false) Then
				Me.OnIPChanging(value)
				Me.SendPropertyChanging
				Me._IP = value
				Me.SendPropertyChanged("IP")
				Me.OnIPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TB_EQUIPMENT_DETAIL")>  _
Partial Public Class TB_EQUIPMENT_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _MC_NO As String
	
	Private _MC_NAME As String
	
	Private _MC_NUMBER As String
	
	Private _DIVISION As String
	
	Private _DEPARTMENT As String
	
	Private _SECTION As String
	
	Private _BUILDING As String
	
	Private _FLOOR As String
	
	Private _PROCESS As String
	
	Private _IP As String
	
	Private _OPNO_ADD As String
	
	Private _DATE_ADD As System.Nullable(Of Date)
	
	Private _OPNO_UPDATE As String
	
	Private _DATE_UPDATE As System.Nullable(Of Date)
	
	Private _FLAG As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnMC_NOChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NOChanged()
    End Sub
    Partial Private Sub OnMC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NAMEChanged()
    End Sub
    Partial Private Sub OnMC_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NUMBERChanged()
    End Sub
    Partial Private Sub OnDIVISIONChanging(value As String)
    End Sub
    Partial Private Sub OnDIVISIONChanged()
    End Sub
    Partial Private Sub OnDEPARTMENTChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENTChanged()
    End Sub
    Partial Private Sub OnSECTIONChanging(value As String)
    End Sub
    Partial Private Sub OnSECTIONChanged()
    End Sub
    Partial Private Sub OnBUILDINGChanging(value As String)
    End Sub
    Partial Private Sub OnBUILDINGChanged()
    End Sub
    Partial Private Sub OnFLOORChanging(value As String)
    End Sub
    Partial Private Sub OnFLOORChanged()
    End Sub
    Partial Private Sub OnPROCESSChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESSChanged()
    End Sub
    Partial Private Sub OnIPChanging(value As String)
    End Sub
    Partial Private Sub OnIPChanged()
    End Sub
    Partial Private Sub OnOPNO_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnOPNO_ADDChanged()
    End Sub
    Partial Private Sub OnDATE_ADDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_ADDChanged()
    End Sub
    Partial Private Sub OnOPNO_UPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnOPNO_UPDATEChanged()
    End Sub
    Partial Private Sub OnDATE_UPDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_UPDATEChanged()
    End Sub
    Partial Private Sub OnFLAGChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFLAGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO", DbType:="VarChar(10)")>  _
	Public Property MC_NO() As String
		Get
			Return Me._MC_NO
		End Get
		Set
			If (String.Equals(Me._MC_NO, value) = false) Then
				Me.OnMC_NOChanging(value)
				Me.SendPropertyChanging
				Me._MC_NO = value
				Me.SendPropertyChanged("MC_NO")
				Me.OnMC_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NAME", DbType:="VarChar(50)")>  _
	Public Property MC_NAME() As String
		Get
			Return Me._MC_NAME
		End Get
		Set
			If (String.Equals(Me._MC_NAME, value) = false) Then
				Me.OnMC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MC_NAME = value
				Me.SendPropertyChanged("MC_NAME")
				Me.OnMC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NUMBER", DbType:="VarChar(20)")>  _
	Public Property MC_NUMBER() As String
		Get
			Return Me._MC_NUMBER
		End Get
		Set
			If (String.Equals(Me._MC_NUMBER, value) = false) Then
				Me.OnMC_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._MC_NUMBER = value
				Me.SendPropertyChanged("MC_NUMBER")
				Me.OnMC_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIVISION", DbType:="VarChar(50)")>  _
	Public Property DIVISION() As String
		Get
			Return Me._DIVISION
		End Get
		Set
			If (String.Equals(Me._DIVISION, value) = false) Then
				Me.OnDIVISIONChanging(value)
				Me.SendPropertyChanging
				Me._DIVISION = value
				Me.SendPropertyChanged("DIVISION")
				Me.OnDIVISIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT", DbType:="VarChar(50)")>  _
	Public Property DEPARTMENT() As String
		Get
			Return Me._DEPARTMENT
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT, value) = false) Then
				Me.OnDEPARTMENTChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT = value
				Me.SendPropertyChanged("DEPARTMENT")
				Me.OnDEPARTMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SECTION", DbType:="VarChar(50)")>  _
	Public Property SECTION() As String
		Get
			Return Me._SECTION
		End Get
		Set
			If (String.Equals(Me._SECTION, value) = false) Then
				Me.OnSECTIONChanging(value)
				Me.SendPropertyChanging
				Me._SECTION = value
				Me.SendPropertyChanged("SECTION")
				Me.OnSECTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUILDING", DbType:="VarChar(50)")>  _
	Public Property BUILDING() As String
		Get
			Return Me._BUILDING
		End Get
		Set
			If (String.Equals(Me._BUILDING, value) = false) Then
				Me.OnBUILDINGChanging(value)
				Me.SendPropertyChanging
				Me._BUILDING = value
				Me.SendPropertyChanged("BUILDING")
				Me.OnBUILDINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLOOR", DbType:="VarChar(10)")>  _
	Public Property FLOOR() As String
		Get
			Return Me._FLOOR
		End Get
		Set
			If (String.Equals(Me._FLOOR, value) = false) Then
				Me.OnFLOORChanging(value)
				Me.SendPropertyChanging
				Me._FLOOR = value
				Me.SendPropertyChanged("FLOOR")
				Me.OnFLOORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS", DbType:="VarChar(50)")>  _
	Public Property PROCESS() As String
		Get
			Return Me._PROCESS
		End Get
		Set
			If (String.Equals(Me._PROCESS, value) = false) Then
				Me.OnPROCESSChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS = value
				Me.SendPropertyChanged("PROCESS")
				Me.OnPROCESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IP", DbType:="VarChar(10)")>  _
	Public Property IP() As String
		Get
			Return Me._IP
		End Get
		Set
			If (String.Equals(Me._IP, value) = false) Then
				Me.OnIPChanging(value)
				Me.SendPropertyChanging
				Me._IP = value
				Me.SendPropertyChanged("IP")
				Me.OnIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPNO_ADD", DbType:="VarChar(10)")>  _
	Public Property OPNO_ADD() As String
		Get
			Return Me._OPNO_ADD
		End Get
		Set
			If (String.Equals(Me._OPNO_ADD, value) = false) Then
				Me.OnOPNO_ADDChanging(value)
				Me.SendPropertyChanging
				Me._OPNO_ADD = value
				Me.SendPropertyChanged("OPNO_ADD")
				Me.OnOPNO_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ADD", DbType:="DateTime")>  _
	Public Property DATE_ADD() As System.Nullable(Of Date)
		Get
			Return Me._DATE_ADD
		End Get
		Set
			If (Me._DATE_ADD.Equals(value) = false) Then
				Me.OnDATE_ADDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ADD = value
				Me.SendPropertyChanged("DATE_ADD")
				Me.OnDATE_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPNO_UPDATE", DbType:="VarChar(10)")>  _
	Public Property OPNO_UPDATE() As String
		Get
			Return Me._OPNO_UPDATE
		End Get
		Set
			If (String.Equals(Me._OPNO_UPDATE, value) = false) Then
				Me.OnOPNO_UPDATEChanging(value)
				Me.SendPropertyChanging
				Me._OPNO_UPDATE = value
				Me.SendPropertyChanged("OPNO_UPDATE")
				Me.OnOPNO_UPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_UPDATE", DbType:="DateTime")>  _
	Public Property DATE_UPDATE() As System.Nullable(Of Date)
		Get
			Return Me._DATE_UPDATE
		End Get
		Set
			If (Me._DATE_UPDATE.Equals(value) = false) Then
				Me.OnDATE_UPDATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE_UPDATE = value
				Me.SendPropertyChanged("DATE_UPDATE")
				Me.OnDATE_UPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLAG", DbType:="Int")>  _
	Public Property FLAG() As System.Nullable(Of Integer)
		Get
			Return Me._FLAG
		End Get
		Set
			If (Me._FLAG.Equals(value) = false) Then
				Me.OnFLAGChanging(value)
				Me.SendPropertyChanging
				Me._FLAG = value
				Me.SendPropertyChanged("FLAG")
				Me.OnFLAGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_PAGE2")>  _
Partial Public Class V_PAGE_1
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MC_NO As String
	
	Private _MC_NAME As String
	
	Private _MC_NUMBER As String
	
	Private _Title As Integer
	
	Private _Title_No As Integer
	
	Private _Detail_topic As String
	
	Private _Number As Integer
	
	Private _IsSelected As Boolean
	
	Private _DIVISION As String
	
	Private _DEPARTMENT As String
	
	Private _SECTION As String
	
	Private _BUILDING As String
	
	Private _FLOOR As String
	
	Private _PROCESS As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMC_NOChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NOChanged()
    End Sub
    Partial Private Sub OnMC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NAMEChanged()
    End Sub
    Partial Private Sub OnMC_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NUMBERChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As Integer)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnTitle_NoChanging(value As Integer)
    End Sub
    Partial Private Sub OnTitle_NoChanged()
    End Sub
    Partial Private Sub OnDetail_topicChanging(value As String)
    End Sub
    Partial Private Sub OnDetail_topicChanged()
    End Sub
    Partial Private Sub OnNumberChanging(value As Integer)
    End Sub
    Partial Private Sub OnNumberChanged()
    End Sub
    Partial Private Sub OnIsSelectedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelectedChanged()
    End Sub
    Partial Private Sub OnDIVISIONChanging(value As String)
    End Sub
    Partial Private Sub OnDIVISIONChanged()
    End Sub
    Partial Private Sub OnDEPARTMENTChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENTChanged()
    End Sub
    Partial Private Sub OnSECTIONChanging(value As String)
    End Sub
    Partial Private Sub OnSECTIONChanged()
    End Sub
    Partial Private Sub OnBUILDINGChanging(value As String)
    End Sub
    Partial Private Sub OnBUILDINGChanged()
    End Sub
    Partial Private Sub OnFLOORChanging(value As String)
    End Sub
    Partial Private Sub OnFLOORChanged()
    End Sub
    Partial Private Sub OnPROCESSChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO", DbType:="VarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property MC_NO() As String
		Get
			Return Me._MC_NO
		End Get
		Set
			If (String.Equals(Me._MC_NO, value) = false) Then
				Me.OnMC_NOChanging(value)
				Me.SendPropertyChanging
				Me._MC_NO = value
				Me.SendPropertyChanged("MC_NO")
				Me.OnMC_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NAME", DbType:="VarChar(50)")>  _
	Public Property MC_NAME() As String
		Get
			Return Me._MC_NAME
		End Get
		Set
			If (String.Equals(Me._MC_NAME, value) = false) Then
				Me.OnMC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MC_NAME = value
				Me.SendPropertyChanged("MC_NAME")
				Me.OnMC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NUMBER", DbType:="VarChar(20)")>  _
	Public Property MC_NUMBER() As String
		Get
			Return Me._MC_NUMBER
		End Get
		Set
			If (String.Equals(Me._MC_NUMBER, value) = false) Then
				Me.OnMC_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._MC_NUMBER = value
				Me.SendPropertyChanged("MC_NUMBER")
				Me.OnMC_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Title() As Integer
		Get
			Return Me._Title
		End Get
		Set
			If ((Me._Title = value)  _
						= false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title_No", DbType:="Int NOT NULL")>  _
	Public Property Title_No() As Integer
		Get
			Return Me._Title_No
		End Get
		Set
			If ((Me._Title_No = value)  _
						= false) Then
				Me.OnTitle_NoChanging(value)
				Me.SendPropertyChanging
				Me._Title_No = value
				Me.SendPropertyChanged("Title_No")
				Me.OnTitle_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_topic", DbType:="NVarChar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Detail_topic() As String
		Get
			Return Me._Detail_topic
		End Get
		Set
			If (String.Equals(Me._Detail_topic, value) = false) Then
				Me.OnDetail_topicChanging(value)
				Me.SendPropertyChanging
				Me._Detail_topic = value
				Me.SendPropertyChanged("Detail_topic")
				Me.OnDetail_topicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number", DbType:="Int NOT NULL")>  _
	Public Property Number() As Integer
		Get
			Return Me._Number
		End Get
		Set
			If ((Me._Number = value)  _
						= false) Then
				Me.OnNumberChanging(value)
				Me.SendPropertyChanging
				Me._Number = value
				Me.SendPropertyChanged("Number")
				Me.OnNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected() As Boolean
		Get
			Return Me._IsSelected
		End Get
		Set
			If ((Me._IsSelected = value)  _
						= false) Then
				Me.OnIsSelectedChanging(value)
				Me.SendPropertyChanging
				Me._IsSelected = value
				Me.SendPropertyChanged("IsSelected")
				Me.OnIsSelectedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIVISION", DbType:="VarChar(50)")>  _
	Public Property DIVISION() As String
		Get
			Return Me._DIVISION
		End Get
		Set
			If (String.Equals(Me._DIVISION, value) = false) Then
				Me.OnDIVISIONChanging(value)
				Me.SendPropertyChanging
				Me._DIVISION = value
				Me.SendPropertyChanged("DIVISION")
				Me.OnDIVISIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT", DbType:="VarChar(50)")>  _
	Public Property DEPARTMENT() As String
		Get
			Return Me._DEPARTMENT
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT, value) = false) Then
				Me.OnDEPARTMENTChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT = value
				Me.SendPropertyChanged("DEPARTMENT")
				Me.OnDEPARTMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SECTION", DbType:="VarChar(50)")>  _
	Public Property SECTION() As String
		Get
			Return Me._SECTION
		End Get
		Set
			If (String.Equals(Me._SECTION, value) = false) Then
				Me.OnSECTIONChanging(value)
				Me.SendPropertyChanging
				Me._SECTION = value
				Me.SendPropertyChanged("SECTION")
				Me.OnSECTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUILDING", DbType:="VarChar(50)")>  _
	Public Property BUILDING() As String
		Get
			Return Me._BUILDING
		End Get
		Set
			If (String.Equals(Me._BUILDING, value) = false) Then
				Me.OnBUILDINGChanging(value)
				Me.SendPropertyChanging
				Me._BUILDING = value
				Me.SendPropertyChanged("BUILDING")
				Me.OnBUILDINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLOOR", DbType:="VarChar(10)")>  _
	Public Property FLOOR() As String
		Get
			Return Me._FLOOR
		End Get
		Set
			If (String.Equals(Me._FLOOR, value) = false) Then
				Me.OnFLOORChanging(value)
				Me.SendPropertyChanging
				Me._FLOOR = value
				Me.SendPropertyChanged("FLOOR")
				Me.OnFLOORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS", DbType:="VarChar(50)")>  _
	Public Property PROCESS() As String
		Get
			Return Me._PROCESS
		End Get
		Set
			If (String.Equals(Me._PROCESS, value) = false) Then
				Me.OnPROCESSChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS = value
				Me.SendPropertyChanged("PROCESS")
				Me.OnPROCESSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_PAGE2")>  _
Partial Public Class V_PAGE_2
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MC_NO As String
	
	Private _MC_NAME As String
	
	Private _MC_NUMBER As String
	
	Private _Title As Integer
	
	Private _Title_No As Integer
	
	Private _Detail_topic As String
	
	Private _Number As Integer
	
	Private _IsSelected As Boolean
	
	Private _DIVISION As String
	
	Private _DEPARTMENT As String
	
	Private _SECTION As String
	
	Private _BUILDING As String
	
	Private _FLOOR As String
	
	Private _PROCESS As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMC_NOChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NOChanged()
    End Sub
    Partial Private Sub OnMC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NAMEChanged()
    End Sub
    Partial Private Sub OnMC_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NUMBERChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As Integer)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnTitle_NoChanging(value As Integer)
    End Sub
    Partial Private Sub OnTitle_NoChanged()
    End Sub
    Partial Private Sub OnDetail_topicChanging(value As String)
    End Sub
    Partial Private Sub OnDetail_topicChanged()
    End Sub
    Partial Private Sub OnNumberChanging(value As Integer)
    End Sub
    Partial Private Sub OnNumberChanged()
    End Sub
    Partial Private Sub OnIsSelectedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelectedChanged()
    End Sub
    Partial Private Sub OnDIVISIONChanging(value As String)
    End Sub
    Partial Private Sub OnDIVISIONChanged()
    End Sub
    Partial Private Sub OnDEPARTMENTChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENTChanged()
    End Sub
    Partial Private Sub OnSECTIONChanging(value As String)
    End Sub
    Partial Private Sub OnSECTIONChanged()
    End Sub
    Partial Private Sub OnBUILDINGChanging(value As String)
    End Sub
    Partial Private Sub OnBUILDINGChanged()
    End Sub
    Partial Private Sub OnFLOORChanging(value As String)
    End Sub
    Partial Private Sub OnFLOORChanged()
    End Sub
    Partial Private Sub OnPROCESSChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO", DbType:="VarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property MC_NO() As String
		Get
			Return Me._MC_NO
		End Get
		Set
			If (String.Equals(Me._MC_NO, value) = false) Then
				Me.OnMC_NOChanging(value)
				Me.SendPropertyChanging
				Me._MC_NO = value
				Me.SendPropertyChanged("MC_NO")
				Me.OnMC_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NAME", DbType:="VarChar(50)")>  _
	Public Property MC_NAME() As String
		Get
			Return Me._MC_NAME
		End Get
		Set
			If (String.Equals(Me._MC_NAME, value) = false) Then
				Me.OnMC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MC_NAME = value
				Me.SendPropertyChanged("MC_NAME")
				Me.OnMC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NUMBER", DbType:="VarChar(20)")>  _
	Public Property MC_NUMBER() As String
		Get
			Return Me._MC_NUMBER
		End Get
		Set
			If (String.Equals(Me._MC_NUMBER, value) = false) Then
				Me.OnMC_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._MC_NUMBER = value
				Me.SendPropertyChanged("MC_NUMBER")
				Me.OnMC_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="Int NOT NULL")>  _
	Public Property Title() As Integer
		Get
			Return Me._Title
		End Get
		Set
			If ((Me._Title = value)  _
						= false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title_No", DbType:="Int NOT NULL")>  _
	Public Property Title_No() As Integer
		Get
			Return Me._Title_No
		End Get
		Set
			If ((Me._Title_No = value)  _
						= false) Then
				Me.OnTitle_NoChanging(value)
				Me.SendPropertyChanging
				Me._Title_No = value
				Me.SendPropertyChanged("Title_No")
				Me.OnTitle_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_topic", DbType:="NVarChar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Detail_topic() As String
		Get
			Return Me._Detail_topic
		End Get
		Set
			If (String.Equals(Me._Detail_topic, value) = false) Then
				Me.OnDetail_topicChanging(value)
				Me.SendPropertyChanging
				Me._Detail_topic = value
				Me.SendPropertyChanged("Detail_topic")
				Me.OnDetail_topicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number", DbType:="Int NOT NULL")>  _
	Public Property Number() As Integer
		Get
			Return Me._Number
		End Get
		Set
			If ((Me._Number = value)  _
						= false) Then
				Me.OnNumberChanging(value)
				Me.SendPropertyChanging
				Me._Number = value
				Me.SendPropertyChanged("Number")
				Me.OnNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected() As Boolean
		Get
			Return Me._IsSelected
		End Get
		Set
			If ((Me._IsSelected = value)  _
						= false) Then
				Me.OnIsSelectedChanging(value)
				Me.SendPropertyChanging
				Me._IsSelected = value
				Me.SendPropertyChanged("IsSelected")
				Me.OnIsSelectedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIVISION", DbType:="VarChar(50)")>  _
	Public Property DIVISION() As String
		Get
			Return Me._DIVISION
		End Get
		Set
			If (String.Equals(Me._DIVISION, value) = false) Then
				Me.OnDIVISIONChanging(value)
				Me.SendPropertyChanging
				Me._DIVISION = value
				Me.SendPropertyChanged("DIVISION")
				Me.OnDIVISIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT", DbType:="VarChar(50)")>  _
	Public Property DEPARTMENT() As String
		Get
			Return Me._DEPARTMENT
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT, value) = false) Then
				Me.OnDEPARTMENTChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT = value
				Me.SendPropertyChanged("DEPARTMENT")
				Me.OnDEPARTMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SECTION", DbType:="VarChar(50)")>  _
	Public Property SECTION() As String
		Get
			Return Me._SECTION
		End Get
		Set
			If (String.Equals(Me._SECTION, value) = false) Then
				Me.OnSECTIONChanging(value)
				Me.SendPropertyChanging
				Me._SECTION = value
				Me.SendPropertyChanged("SECTION")
				Me.OnSECTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUILDING", DbType:="VarChar(50)")>  _
	Public Property BUILDING() As String
		Get
			Return Me._BUILDING
		End Get
		Set
			If (String.Equals(Me._BUILDING, value) = false) Then
				Me.OnBUILDINGChanging(value)
				Me.SendPropertyChanging
				Me._BUILDING = value
				Me.SendPropertyChanged("BUILDING")
				Me.OnBUILDINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLOOR", DbType:="VarChar(10)")>  _
	Public Property FLOOR() As String
		Get
			Return Me._FLOOR
		End Get
		Set
			If (String.Equals(Me._FLOOR, value) = false) Then
				Me.OnFLOORChanging(value)
				Me.SendPropertyChanging
				Me._FLOOR = value
				Me.SendPropertyChanged("FLOOR")
				Me.OnFLOORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS", DbType:="VarChar(50)")>  _
	Public Property PROCESS() As String
		Get
			Return Me._PROCESS
		End Get
		Set
			If (String.Equals(Me._PROCESS, value) = false) Then
				Me.OnPROCESSChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS = value
				Me.SendPropertyChanged("PROCESS")
				Me.OnPROCESSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_PAGE2")>  _
Partial Public Class V_PAGE_3
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MC_NO As String
	
	Private _MC_NAME As String
	
	Private _MC_NUMBER As String
	
	Private _Title As Integer
	
	Private _Title_No As Integer
	
	Private _Detail_topic As String
	
	Private _Number As Integer
	
	Private _IsSelected As Boolean
	
	Private _DIVISION As String
	
	Private _DEPARTMENT As String
	
	Private _SECTION As String
	
	Private _BUILDING As String
	
	Private _FLOOR As String
	
	Private _PROCESS As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMC_NOChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NOChanged()
    End Sub
    Partial Private Sub OnMC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NAMEChanged()
    End Sub
    Partial Private Sub OnMC_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NUMBERChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As Integer)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnTitle_NoChanging(value As Integer)
    End Sub
    Partial Private Sub OnTitle_NoChanged()
    End Sub
    Partial Private Sub OnDetail_topicChanging(value As String)
    End Sub
    Partial Private Sub OnDetail_topicChanged()
    End Sub
    Partial Private Sub OnNumberChanging(value As Integer)
    End Sub
    Partial Private Sub OnNumberChanged()
    End Sub
    Partial Private Sub OnIsSelectedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelectedChanged()
    End Sub
    Partial Private Sub OnDIVISIONChanging(value As String)
    End Sub
    Partial Private Sub OnDIVISIONChanged()
    End Sub
    Partial Private Sub OnDEPARTMENTChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENTChanged()
    End Sub
    Partial Private Sub OnSECTIONChanging(value As String)
    End Sub
    Partial Private Sub OnSECTIONChanged()
    End Sub
    Partial Private Sub OnBUILDINGChanging(value As String)
    End Sub
    Partial Private Sub OnBUILDINGChanged()
    End Sub
    Partial Private Sub OnFLOORChanging(value As String)
    End Sub
    Partial Private Sub OnFLOORChanged()
    End Sub
    Partial Private Sub OnPROCESSChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO", DbType:="VarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property MC_NO() As String
		Get
			Return Me._MC_NO
		End Get
		Set
			If (String.Equals(Me._MC_NO, value) = false) Then
				Me.OnMC_NOChanging(value)
				Me.SendPropertyChanging
				Me._MC_NO = value
				Me.SendPropertyChanged("MC_NO")
				Me.OnMC_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NAME", DbType:="VarChar(50)")>  _
	Public Property MC_NAME() As String
		Get
			Return Me._MC_NAME
		End Get
		Set
			If (String.Equals(Me._MC_NAME, value) = false) Then
				Me.OnMC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MC_NAME = value
				Me.SendPropertyChanged("MC_NAME")
				Me.OnMC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NUMBER", DbType:="VarChar(20)")>  _
	Public Property MC_NUMBER() As String
		Get
			Return Me._MC_NUMBER
		End Get
		Set
			If (String.Equals(Me._MC_NUMBER, value) = false) Then
				Me.OnMC_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._MC_NUMBER = value
				Me.SendPropertyChanged("MC_NUMBER")
				Me.OnMC_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="Int NOT NULL")>  _
	Public Property Title() As Integer
		Get
			Return Me._Title
		End Get
		Set
			If ((Me._Title = value)  _
						= false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title_No", DbType:="Int NOT NULL")>  _
	Public Property Title_No() As Integer
		Get
			Return Me._Title_No
		End Get
		Set
			If ((Me._Title_No = value)  _
						= false) Then
				Me.OnTitle_NoChanging(value)
				Me.SendPropertyChanging
				Me._Title_No = value
				Me.SendPropertyChanged("Title_No")
				Me.OnTitle_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_topic", DbType:="NVarChar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Detail_topic() As String
		Get
			Return Me._Detail_topic
		End Get
		Set
			If (String.Equals(Me._Detail_topic, value) = false) Then
				Me.OnDetail_topicChanging(value)
				Me.SendPropertyChanging
				Me._Detail_topic = value
				Me.SendPropertyChanged("Detail_topic")
				Me.OnDetail_topicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number", DbType:="Int NOT NULL")>  _
	Public Property Number() As Integer
		Get
			Return Me._Number
		End Get
		Set
			If ((Me._Number = value)  _
						= false) Then
				Me.OnNumberChanging(value)
				Me.SendPropertyChanging
				Me._Number = value
				Me.SendPropertyChanged("Number")
				Me.OnNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected() As Boolean
		Get
			Return Me._IsSelected
		End Get
		Set
			If ((Me._IsSelected = value)  _
						= false) Then
				Me.OnIsSelectedChanging(value)
				Me.SendPropertyChanging
				Me._IsSelected = value
				Me.SendPropertyChanged("IsSelected")
				Me.OnIsSelectedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIVISION", DbType:="VarChar(50)")>  _
	Public Property DIVISION() As String
		Get
			Return Me._DIVISION
		End Get
		Set
			If (String.Equals(Me._DIVISION, value) = false) Then
				Me.OnDIVISIONChanging(value)
				Me.SendPropertyChanging
				Me._DIVISION = value
				Me.SendPropertyChanged("DIVISION")
				Me.OnDIVISIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT", DbType:="VarChar(50)")>  _
	Public Property DEPARTMENT() As String
		Get
			Return Me._DEPARTMENT
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT, value) = false) Then
				Me.OnDEPARTMENTChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT = value
				Me.SendPropertyChanged("DEPARTMENT")
				Me.OnDEPARTMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SECTION", DbType:="VarChar(50)")>  _
	Public Property SECTION() As String
		Get
			Return Me._SECTION
		End Get
		Set
			If (String.Equals(Me._SECTION, value) = false) Then
				Me.OnSECTIONChanging(value)
				Me.SendPropertyChanging
				Me._SECTION = value
				Me.SendPropertyChanged("SECTION")
				Me.OnSECTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUILDING", DbType:="VarChar(50)")>  _
	Public Property BUILDING() As String
		Get
			Return Me._BUILDING
		End Get
		Set
			If (String.Equals(Me._BUILDING, value) = false) Then
				Me.OnBUILDINGChanging(value)
				Me.SendPropertyChanging
				Me._BUILDING = value
				Me.SendPropertyChanged("BUILDING")
				Me.OnBUILDINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLOOR", DbType:="VarChar(10)")>  _
	Public Property FLOOR() As String
		Get
			Return Me._FLOOR
		End Get
		Set
			If (String.Equals(Me._FLOOR, value) = false) Then
				Me.OnFLOORChanging(value)
				Me.SendPropertyChanging
				Me._FLOOR = value
				Me.SendPropertyChanged("FLOOR")
				Me.OnFLOORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS", DbType:="VarChar(50)")>  _
	Public Property PROCESS() As String
		Get
			Return Me._PROCESS
		End Get
		Set
			If (String.Equals(Me._PROCESS, value) = false) Then
				Me.OnPROCESSChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS = value
				Me.SendPropertyChanged("PROCESS")
				Me.OnPROCESSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_PAGE2")>  _
Partial Public Class V_PAGE_4
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _MC_NO As String
	
	Private _MC_NAME As String
	
	Private _MC_NUMBER As String
	
	Private _Title As Integer
	
	Private _Title_No As Integer
	
	Private _Detail_topic As String
	
	Private _Number As Integer
	
	Private _IsSelected As Boolean
	
	Private _DIVISION As String
	
	Private _DEPARTMENT As String
	
	Private _SECTION As String
	
	Private _BUILDING As String
	
	Private _FLOOR As String
	
	Private _PROCESS As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMC_NOChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NOChanged()
    End Sub
    Partial Private Sub OnMC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NAMEChanged()
    End Sub
    Partial Private Sub OnMC_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NUMBERChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As Integer)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnTitle_NoChanging(value As Integer)
    End Sub
    Partial Private Sub OnTitle_NoChanged()
    End Sub
    Partial Private Sub OnDetail_topicChanging(value As String)
    End Sub
    Partial Private Sub OnDetail_topicChanged()
    End Sub
    Partial Private Sub OnNumberChanging(value As Integer)
    End Sub
    Partial Private Sub OnNumberChanged()
    End Sub
    Partial Private Sub OnIsSelectedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelectedChanged()
    End Sub
    Partial Private Sub OnDIVISIONChanging(value As String)
    End Sub
    Partial Private Sub OnDIVISIONChanged()
    End Sub
    Partial Private Sub OnDEPARTMENTChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENTChanged()
    End Sub
    Partial Private Sub OnSECTIONChanging(value As String)
    End Sub
    Partial Private Sub OnSECTIONChanged()
    End Sub
    Partial Private Sub OnBUILDINGChanging(value As String)
    End Sub
    Partial Private Sub OnBUILDINGChanged()
    End Sub
    Partial Private Sub OnFLOORChanging(value As String)
    End Sub
    Partial Private Sub OnFLOORChanged()
    End Sub
    Partial Private Sub OnPROCESSChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO", DbType:="VarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property MC_NO() As String
		Get
			Return Me._MC_NO
		End Get
		Set
			If (String.Equals(Me._MC_NO, value) = false) Then
				Me.OnMC_NOChanging(value)
				Me.SendPropertyChanging
				Me._MC_NO = value
				Me.SendPropertyChanged("MC_NO")
				Me.OnMC_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NAME", DbType:="VarChar(50)")>  _
	Public Property MC_NAME() As String
		Get
			Return Me._MC_NAME
		End Get
		Set
			If (String.Equals(Me._MC_NAME, value) = false) Then
				Me.OnMC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MC_NAME = value
				Me.SendPropertyChanged("MC_NAME")
				Me.OnMC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NUMBER", DbType:="VarChar(20)")>  _
	Public Property MC_NUMBER() As String
		Get
			Return Me._MC_NUMBER
		End Get
		Set
			If (String.Equals(Me._MC_NUMBER, value) = false) Then
				Me.OnMC_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._MC_NUMBER = value
				Me.SendPropertyChanged("MC_NUMBER")
				Me.OnMC_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="Int NOT NULL")>  _
	Public Property Title() As Integer
		Get
			Return Me._Title
		End Get
		Set
			If ((Me._Title = value)  _
						= false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title_No", DbType:="Int NOT NULL")>  _
	Public Property Title_No() As Integer
		Get
			Return Me._Title_No
		End Get
		Set
			If ((Me._Title_No = value)  _
						= false) Then
				Me.OnTitle_NoChanging(value)
				Me.SendPropertyChanging
				Me._Title_No = value
				Me.SendPropertyChanged("Title_No")
				Me.OnTitle_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_topic", DbType:="NVarChar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property Detail_topic() As String
		Get
			Return Me._Detail_topic
		End Get
		Set
			If (String.Equals(Me._Detail_topic, value) = false) Then
				Me.OnDetail_topicChanging(value)
				Me.SendPropertyChanging
				Me._Detail_topic = value
				Me.SendPropertyChanged("Detail_topic")
				Me.OnDetail_topicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number", DbType:="Int NOT NULL")>  _
	Public Property Number() As Integer
		Get
			Return Me._Number
		End Get
		Set
			If ((Me._Number = value)  _
						= false) Then
				Me.OnNumberChanging(value)
				Me.SendPropertyChanging
				Me._Number = value
				Me.SendPropertyChanged("Number")
				Me.OnNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected() As Boolean
		Get
			Return Me._IsSelected
		End Get
		Set
			If ((Me._IsSelected = value)  _
						= false) Then
				Me.OnIsSelectedChanging(value)
				Me.SendPropertyChanging
				Me._IsSelected = value
				Me.SendPropertyChanged("IsSelected")
				Me.OnIsSelectedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIVISION", DbType:="VarChar(50)")>  _
	Public Property DIVISION() As String
		Get
			Return Me._DIVISION
		End Get
		Set
			If (String.Equals(Me._DIVISION, value) = false) Then
				Me.OnDIVISIONChanging(value)
				Me.SendPropertyChanging
				Me._DIVISION = value
				Me.SendPropertyChanged("DIVISION")
				Me.OnDIVISIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT", DbType:="VarChar(50)")>  _
	Public Property DEPARTMENT() As String
		Get
			Return Me._DEPARTMENT
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT, value) = false) Then
				Me.OnDEPARTMENTChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT = value
				Me.SendPropertyChanged("DEPARTMENT")
				Me.OnDEPARTMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SECTION", DbType:="VarChar(50)")>  _
	Public Property SECTION() As String
		Get
			Return Me._SECTION
		End Get
		Set
			If (String.Equals(Me._SECTION, value) = false) Then
				Me.OnSECTIONChanging(value)
				Me.SendPropertyChanging
				Me._SECTION = value
				Me.SendPropertyChanged("SECTION")
				Me.OnSECTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUILDING", DbType:="VarChar(50)")>  _
	Public Property BUILDING() As String
		Get
			Return Me._BUILDING
		End Get
		Set
			If (String.Equals(Me._BUILDING, value) = false) Then
				Me.OnBUILDINGChanging(value)
				Me.SendPropertyChanging
				Me._BUILDING = value
				Me.SendPropertyChanged("BUILDING")
				Me.OnBUILDINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLOOR", DbType:="VarChar(10)")>  _
	Public Property FLOOR() As String
		Get
			Return Me._FLOOR
		End Get
		Set
			If (String.Equals(Me._FLOOR, value) = false) Then
				Me.OnFLOORChanging(value)
				Me.SendPropertyChanging
				Me._FLOOR = value
				Me.SendPropertyChanged("FLOOR")
				Me.OnFLOORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS", DbType:="VarChar(50)")>  _
	Public Property PROCESS() As String
		Get
			Return Me._PROCESS
		End Get
		Set
			If (String.Equals(Me._PROCESS, value) = false) Then
				Me.OnPROCESSChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS = value
				Me.SendPropertyChanged("PROCESS")
				Me.OnPROCESSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TMP_REPORT2")>  _
Partial Public Class TMP_REPORT2
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID_NO As Integer
	
	Private _MC_NO As String
	
	Private _MC_NAME As String
	
	Private _MC_NUMBER As String
	
	Private _Detail_T1_1 As String
	
	Private _Detail_T1_2 As String
	
	Private _Detail_T1_3 As String
	
	Private _Detail_T1_4 As String
	
	Private _Detail_T1_5 As String
	
	Private _Detail_T1_6 As String
	
	Private _Detail_T1_7 As String
	
	Private _Detail_T1_8 As String
	
	Private _Number_T1_1 As System.Nullable(Of Integer)
	
	Private _Number_T1_2 As System.Nullable(Of Integer)
	
	Private _Number_T1_3 As System.Nullable(Of Integer)
	
	Private _Number_T1_4 As System.Nullable(Of Integer)
	
	Private _Number_T1_5 As System.Nullable(Of Integer)
	
	Private _Number_T1_6 As System.Nullable(Of Integer)
	
	Private _Number_T1_7 As System.Nullable(Of Integer)
	
	Private _Number_T1_8 As System.Nullable(Of Integer)
	
	Private _IsSelected_T1_1 As Boolean
	
	Private _IsSelected_T1_2 As Boolean
	
	Private _IsSelected_T1_3 As Boolean
	
	Private _IsSelected_T1_4 As Boolean
	
	Private _IsSelected_T1_5 As Boolean
	
	Private _IsSelected_T1_6 As Boolean
	
	Private _IsSelected_T1_7 As Boolean
	
	Private _IsSelected_T1_8 As Boolean
	
	Private _Detail_T2_1 As String
	
	Private _Detail_T2_2 As String
	
	Private _Detail_T2_3 As String
	
	Private _Detail_T2_4 As String
	
	Private _Detail_T2_5 As String
	
	Private _Detail_T2_6 As String
	
	Private _Detail_T2_7 As String
	
	Private _Detail_T2_8 As String
	
	Private _Number_T2_1 As System.Nullable(Of Integer)
	
	Private _Number_T2_2 As System.Nullable(Of Integer)
	
	Private _Number_T2_3 As System.Nullable(Of Integer)
	
	Private _Number_T2_4 As System.Nullable(Of Integer)
	
	Private _Number_T2_5 As System.Nullable(Of Integer)
	
	Private _Number_T2_6 As System.Nullable(Of Integer)
	
	Private _Number_T2_7 As System.Nullable(Of Integer)
	
	Private _Number_T2_8 As System.Nullable(Of Integer)
	
	Private _IsSelected_T2_1 As Boolean
	
	Private _IsSelected_T2_2 As Boolean
	
	Private _IsSelected_T2_3 As Boolean
	
	Private _IsSelected_T2_4 As Boolean
	
	Private _IsSelected_T2_5 As Boolean
	
	Private _IsSelected_T2_6 As Boolean
	
	Private _IsSelected_T2_7 As Boolean
	
	Private _IsSelected_T2_8 As Boolean
	
	Private _Detail_T3_1 As String
	
	Private _Detail_T3_2 As String
	
	Private _Detail_T3_3 As String
	
	Private _Detail_T3_4 As String
	
	Private _Detail_T3_5 As String
	
	Private _Detail_T3_6 As String
	
	Private _Detail_T3_7 As String
	
	Private _Detail_T3_8 As String
	
	Private _Number_T3_1 As System.Nullable(Of Integer)
	
	Private _Number_T3_2 As System.Nullable(Of Integer)
	
	Private _Number_T3_3 As System.Nullable(Of Integer)
	
	Private _Number_T3_4 As System.Nullable(Of Integer)
	
	Private _Number_T3_5 As System.Nullable(Of Integer)
	
	Private _Number_T3_6 As System.Nullable(Of Integer)
	
	Private _Number_T3_7 As System.Nullable(Of Integer)
	
	Private _Number_T3_8 As System.Nullable(Of Integer)
	
	Private _IsSelected_T3_1 As Boolean
	
	Private _IsSelected_T3_2 As Boolean
	
	Private _IsSelected_T3_3 As Boolean
	
	Private _IsSelected_T3_4 As Boolean
	
	Private _IsSelected_T3_5 As Boolean
	
	Private _IsSelected_T3_6 As Boolean
	
	Private _IsSelected_T3_7 As Boolean
	
	Private _IsSelected_T3_8 As Boolean
	
	Private _Detail_T4_1 As String
	
	Private _Detail_T4_2 As String
	
	Private _Detail_T4_3 As String
	
	Private _Detail_T4_4 As String
	
	Private _Detail_T4_5 As String
	
	Private _Detail_T4_6 As String
	
	Private _Detail_T4_7 As String
	
	Private _Detail_T4_8 As String
	
	Private _Number_T4_1 As System.Nullable(Of Integer)
	
	Private _Number_T4_2 As System.Nullable(Of Integer)
	
	Private _Number_T4_3 As System.Nullable(Of Integer)
	
	Private _Number_T4_4 As System.Nullable(Of Integer)
	
	Private _Number_T4_5 As System.Nullable(Of Integer)
	
	Private _Number_T4_6 As System.Nullable(Of Integer)
	
	Private _Number_T4_7 As System.Nullable(Of Integer)
	
	Private _Number_T4_8 As System.Nullable(Of Integer)
	
	Private _IsSelected_T4_1 As Boolean
	
	Private _IsSelected_T4_2 As Boolean
	
	Private _IsSelected_T4_3 As Boolean
	
	Private _IsSelected_T4_4 As Boolean
	
	Private _IsSelected_T4_5 As Boolean
	
	Private _IsSelected_T4_6 As Boolean
	
	Private _IsSelected_T4_7 As Boolean
	
	Private _IsSelected_T4_8 As Boolean
	
	Private _Division As String
	
	Private _Department As String
	
	Private _Section As String
	
	Private _Building As String
	
	Private _Floor As String
	
	Private _Process As String
	
	Private _FILE_ATTACH_NAME_1 As String
	
	Private _FILE_ATTACH_CONTENT_TYPE_1 As String
	
	Private _FILE_ATTACH_DATA_1 As System.Data.Linq.Binary
	
	Private _FILE_ATTACH_NAME_2 As String
	
	Private _FILE_ATTACH_CONTENT_TYPE_2 As String
	
	Private _FILE_ATTACH_DATA_2 As System.Data.Linq.Binary
	
	Private _FILE_ATTACH_NAME_3 As String
	
	Private _FILE_ATTACH_CONTENT_TYPE_3 As String
	
	Private _FILE_ATTACH_DATA_3 As System.Data.Linq.Binary
	
	Private _DATE_ADD As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnID_NOChanging(value As Integer)
    End Sub
    Partial Private Sub OnID_NOChanged()
    End Sub
    Partial Private Sub OnMC_NOChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NOChanged()
    End Sub
    Partial Private Sub OnMC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NAMEChanged()
    End Sub
    Partial Private Sub OnMC_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NUMBERChanged()
    End Sub
    Partial Private Sub OnDetail_T1_1Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T1_1Changed()
    End Sub
    Partial Private Sub OnDetail_T1_2Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T1_2Changed()
    End Sub
    Partial Private Sub OnDetail_T1_3Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T1_3Changed()
    End Sub
    Partial Private Sub OnDetail_T1_4Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T1_4Changed()
    End Sub
    Partial Private Sub OnDetail_T1_5Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T1_5Changed()
    End Sub
    Partial Private Sub OnDetail_T1_6Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T1_6Changed()
    End Sub
    Partial Private Sub OnDetail_T1_7Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T1_7Changed()
    End Sub
    Partial Private Sub OnDetail_T1_8Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T1_8Changed()
    End Sub
    Partial Private Sub OnNumber_T1_1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T1_1Changed()
    End Sub
    Partial Private Sub OnNumber_T1_2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T1_2Changed()
    End Sub
    Partial Private Sub OnNumber_T1_3Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T1_3Changed()
    End Sub
    Partial Private Sub OnNumber_T1_4Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T1_4Changed()
    End Sub
    Partial Private Sub OnNumber_T1_5Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T1_5Changed()
    End Sub
    Partial Private Sub OnNumber_T1_6Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T1_6Changed()
    End Sub
    Partial Private Sub OnNumber_T1_7Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T1_7Changed()
    End Sub
    Partial Private Sub OnNumber_T1_8Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T1_8Changed()
    End Sub
    Partial Private Sub OnIsSelected_T1_1Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T1_1Changed()
    End Sub
    Partial Private Sub OnIsSelected_T1_2Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T1_2Changed()
    End Sub
    Partial Private Sub OnIsSelected_T1_3Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T1_3Changed()
    End Sub
    Partial Private Sub OnIsSelected_T1_4Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T1_4Changed()
    End Sub
    Partial Private Sub OnIsSelected_T1_5Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T1_5Changed()
    End Sub
    Partial Private Sub OnIsSelected_T1_6Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T1_6Changed()
    End Sub
    Partial Private Sub OnIsSelected_T1_7Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T1_7Changed()
    End Sub
    Partial Private Sub OnIsSelected_T1_8Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T1_8Changed()
    End Sub
    Partial Private Sub OnDetail_T2_1Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T2_1Changed()
    End Sub
    Partial Private Sub OnDetail_T2_2Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T2_2Changed()
    End Sub
    Partial Private Sub OnDetail_T2_3Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T2_3Changed()
    End Sub
    Partial Private Sub OnDetail_T2_4Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T2_4Changed()
    End Sub
    Partial Private Sub OnDetail_T2_5Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T2_5Changed()
    End Sub
    Partial Private Sub OnDetail_T2_6Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T2_6Changed()
    End Sub
    Partial Private Sub OnDetail_T2_7Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T2_7Changed()
    End Sub
    Partial Private Sub OnDetail_T2_8Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T2_8Changed()
    End Sub
    Partial Private Sub OnNumber_T2_1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T2_1Changed()
    End Sub
    Partial Private Sub OnNumber_T2_2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T2_2Changed()
    End Sub
    Partial Private Sub OnNumber_T2_3Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T2_3Changed()
    End Sub
    Partial Private Sub OnNumber_T2_4Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T2_4Changed()
    End Sub
    Partial Private Sub OnNumber_T2_5Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T2_5Changed()
    End Sub
    Partial Private Sub OnNumber_T2_6Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T2_6Changed()
    End Sub
    Partial Private Sub OnNumber_T2_7Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T2_7Changed()
    End Sub
    Partial Private Sub OnNumber_T2_8Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T2_8Changed()
    End Sub
    Partial Private Sub OnIsSelected_T2_1Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T2_1Changed()
    End Sub
    Partial Private Sub OnIsSelected_T2_2Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T2_2Changed()
    End Sub
    Partial Private Sub OnIsSelected_T2_3Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T2_3Changed()
    End Sub
    Partial Private Sub OnIsSelected_T2_4Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T2_4Changed()
    End Sub
    Partial Private Sub OnIsSelected_T2_5Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T2_5Changed()
    End Sub
    Partial Private Sub OnIsSelected_T2_6Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T2_6Changed()
    End Sub
    Partial Private Sub OnIsSelected_T2_7Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T2_7Changed()
    End Sub
    Partial Private Sub OnIsSelected_T2_8Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T2_8Changed()
    End Sub
    Partial Private Sub OnDetail_T3_1Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T3_1Changed()
    End Sub
    Partial Private Sub OnDetail_T3_2Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T3_2Changed()
    End Sub
    Partial Private Sub OnDetail_T3_3Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T3_3Changed()
    End Sub
    Partial Private Sub OnDetail_T3_4Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T3_4Changed()
    End Sub
    Partial Private Sub OnDetail_T3_5Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T3_5Changed()
    End Sub
    Partial Private Sub OnDetail_T3_6Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T3_6Changed()
    End Sub
    Partial Private Sub OnDetail_T3_7Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T3_7Changed()
    End Sub
    Partial Private Sub OnDetail_T3_8Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T3_8Changed()
    End Sub
    Partial Private Sub OnNumber_T3_1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T3_1Changed()
    End Sub
    Partial Private Sub OnNumber_T3_2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T3_2Changed()
    End Sub
    Partial Private Sub OnNumber_T3_3Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T3_3Changed()
    End Sub
    Partial Private Sub OnNumber_T3_4Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T3_4Changed()
    End Sub
    Partial Private Sub OnNumber_T3_5Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T3_5Changed()
    End Sub
    Partial Private Sub OnNumber_T3_6Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T3_6Changed()
    End Sub
    Partial Private Sub OnNumber_T3_7Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T3_7Changed()
    End Sub
    Partial Private Sub OnNumber_T3_8Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T3_8Changed()
    End Sub
    Partial Private Sub OnIsSelected_T3_1Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T3_1Changed()
    End Sub
    Partial Private Sub OnIsSelected_T3_2Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T3_2Changed()
    End Sub
    Partial Private Sub OnIsSelected_T3_3Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T3_3Changed()
    End Sub
    Partial Private Sub OnIsSelected_T3_4Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T3_4Changed()
    End Sub
    Partial Private Sub OnIsSelected_T3_5Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T3_5Changed()
    End Sub
    Partial Private Sub OnIsSelected_T3_6Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T3_6Changed()
    End Sub
    Partial Private Sub OnIsSelected_T3_7Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T3_7Changed()
    End Sub
    Partial Private Sub OnIsSelected_T3_8Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T3_8Changed()
    End Sub
    Partial Private Sub OnDetail_T4_1Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T4_1Changed()
    End Sub
    Partial Private Sub OnDetail_T4_2Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T4_2Changed()
    End Sub
    Partial Private Sub OnDetail_T4_3Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T4_3Changed()
    End Sub
    Partial Private Sub OnDetail_T4_4Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T4_4Changed()
    End Sub
    Partial Private Sub OnDetail_T4_5Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T4_5Changed()
    End Sub
    Partial Private Sub OnDetail_T4_6Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T4_6Changed()
    End Sub
    Partial Private Sub OnDetail_T4_7Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T4_7Changed()
    End Sub
    Partial Private Sub OnDetail_T4_8Changing(value As String)
    End Sub
    Partial Private Sub OnDetail_T4_8Changed()
    End Sub
    Partial Private Sub OnNumber_T4_1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T4_1Changed()
    End Sub
    Partial Private Sub OnNumber_T4_2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T4_2Changed()
    End Sub
    Partial Private Sub OnNumber_T4_3Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T4_3Changed()
    End Sub
    Partial Private Sub OnNumber_T4_4Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T4_4Changed()
    End Sub
    Partial Private Sub OnNumber_T4_5Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T4_5Changed()
    End Sub
    Partial Private Sub OnNumber_T4_6Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T4_6Changed()
    End Sub
    Partial Private Sub OnNumber_T4_7Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T4_7Changed()
    End Sub
    Partial Private Sub OnNumber_T4_8Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumber_T4_8Changed()
    End Sub
    Partial Private Sub OnIsSelected_T4_1Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T4_1Changed()
    End Sub
    Partial Private Sub OnIsSelected_T4_2Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T4_2Changed()
    End Sub
    Partial Private Sub OnIsSelected_T4_3Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T4_3Changed()
    End Sub
    Partial Private Sub OnIsSelected_T4_4Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T4_4Changed()
    End Sub
    Partial Private Sub OnIsSelected_T4_5Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T4_5Changed()
    End Sub
    Partial Private Sub OnIsSelected_T4_6Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T4_6Changed()
    End Sub
    Partial Private Sub OnIsSelected_T4_7Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T4_7Changed()
    End Sub
    Partial Private Sub OnIsSelected_T4_8Changing(value As Boolean)
    End Sub
    Partial Private Sub OnIsSelected_T4_8Changed()
    End Sub
    Partial Private Sub OnDivisionChanging(value As String)
    End Sub
    Partial Private Sub OnDivisionChanged()
    End Sub
    Partial Private Sub OnDepartmentChanging(value As String)
    End Sub
    Partial Private Sub OnDepartmentChanged()
    End Sub
    Partial Private Sub OnSectionChanging(value As String)
    End Sub
    Partial Private Sub OnSectionChanged()
    End Sub
    Partial Private Sub OnBuildingChanging(value As String)
    End Sub
    Partial Private Sub OnBuildingChanged()
    End Sub
    Partial Private Sub OnFloorChanging(value As String)
    End Sub
    Partial Private Sub OnFloorChanged()
    End Sub
    Partial Private Sub OnProcessChanging(value As String)
    End Sub
    Partial Private Sub OnProcessChanged()
    End Sub
    Partial Private Sub OnFILE_ATTACH_NAME_1Changing(value As String)
    End Sub
    Partial Private Sub OnFILE_ATTACH_NAME_1Changed()
    End Sub
    Partial Private Sub OnFILE_ATTACH_CONTENT_TYPE_1Changing(value As String)
    End Sub
    Partial Private Sub OnFILE_ATTACH_CONTENT_TYPE_1Changed()
    End Sub
    Partial Private Sub OnFILE_ATTACH_DATA_1Changing(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnFILE_ATTACH_DATA_1Changed()
    End Sub
    Partial Private Sub OnFILE_ATTACH_NAME_2Changing(value As String)
    End Sub
    Partial Private Sub OnFILE_ATTACH_NAME_2Changed()
    End Sub
    Partial Private Sub OnFILE_ATTACH_CONTENT_TYPE_2Changing(value As String)
    End Sub
    Partial Private Sub OnFILE_ATTACH_CONTENT_TYPE_2Changed()
    End Sub
    Partial Private Sub OnFILE_ATTACH_DATA_2Changing(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnFILE_ATTACH_DATA_2Changed()
    End Sub
    Partial Private Sub OnFILE_ATTACH_NAME_3Changing(value As String)
    End Sub
    Partial Private Sub OnFILE_ATTACH_NAME_3Changed()
    End Sub
    Partial Private Sub OnFILE_ATTACH_CONTENT_TYPE_3Changing(value As String)
    End Sub
    Partial Private Sub OnFILE_ATTACH_CONTENT_TYPE_3Changed()
    End Sub
    Partial Private Sub OnFILE_ATTACH_DATA_3Changing(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnFILE_ATTACH_DATA_3Changed()
    End Sub
    Partial Private Sub OnDATE_ADDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_ADDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_NO", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID_NO() As Integer
		Get
			Return Me._ID_NO
		End Get
		Set
			If ((Me._ID_NO = value)  _
						= false) Then
				Me.OnID_NOChanging(value)
				Me.SendPropertyChanging
				Me._ID_NO = value
				Me.SendPropertyChanged("ID_NO")
				Me.OnID_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO", DbType:="VarChar(10)")>  _
	Public Property MC_NO() As String
		Get
			Return Me._MC_NO
		End Get
		Set
			If (String.Equals(Me._MC_NO, value) = false) Then
				Me.OnMC_NOChanging(value)
				Me.SendPropertyChanging
				Me._MC_NO = value
				Me.SendPropertyChanged("MC_NO")
				Me.OnMC_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NAME", DbType:="VarChar(50)")>  _
	Public Property MC_NAME() As String
		Get
			Return Me._MC_NAME
		End Get
		Set
			If (String.Equals(Me._MC_NAME, value) = false) Then
				Me.OnMC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._MC_NAME = value
				Me.SendPropertyChanged("MC_NAME")
				Me.OnMC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NUMBER", DbType:="VarChar(50)")>  _
	Public Property MC_NUMBER() As String
		Get
			Return Me._MC_NUMBER
		End Get
		Set
			If (String.Equals(Me._MC_NUMBER, value) = false) Then
				Me.OnMC_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._MC_NUMBER = value
				Me.SendPropertyChanged("MC_NUMBER")
				Me.OnMC_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T1_1", DbType:="VarChar(50)")>  _
	Public Property Detail_T1_1() As String
		Get
			Return Me._Detail_T1_1
		End Get
		Set
			If (String.Equals(Me._Detail_T1_1, value) = false) Then
				Me.OnDetail_T1_1Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T1_1 = value
				Me.SendPropertyChanged("Detail_T1_1")
				Me.OnDetail_T1_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T1_2", DbType:="VarChar(50)")>  _
	Public Property Detail_T1_2() As String
		Get
			Return Me._Detail_T1_2
		End Get
		Set
			If (String.Equals(Me._Detail_T1_2, value) = false) Then
				Me.OnDetail_T1_2Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T1_2 = value
				Me.SendPropertyChanged("Detail_T1_2")
				Me.OnDetail_T1_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T1_3", DbType:="VarChar(50)")>  _
	Public Property Detail_T1_3() As String
		Get
			Return Me._Detail_T1_3
		End Get
		Set
			If (String.Equals(Me._Detail_T1_3, value) = false) Then
				Me.OnDetail_T1_3Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T1_3 = value
				Me.SendPropertyChanged("Detail_T1_3")
				Me.OnDetail_T1_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T1_4", DbType:="VarChar(50)")>  _
	Public Property Detail_T1_4() As String
		Get
			Return Me._Detail_T1_4
		End Get
		Set
			If (String.Equals(Me._Detail_T1_4, value) = false) Then
				Me.OnDetail_T1_4Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T1_4 = value
				Me.SendPropertyChanged("Detail_T1_4")
				Me.OnDetail_T1_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T1_5", DbType:="VarChar(50)")>  _
	Public Property Detail_T1_5() As String
		Get
			Return Me._Detail_T1_5
		End Get
		Set
			If (String.Equals(Me._Detail_T1_5, value) = false) Then
				Me.OnDetail_T1_5Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T1_5 = value
				Me.SendPropertyChanged("Detail_T1_5")
				Me.OnDetail_T1_5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T1_6", DbType:="VarChar(50)")>  _
	Public Property Detail_T1_6() As String
		Get
			Return Me._Detail_T1_6
		End Get
		Set
			If (String.Equals(Me._Detail_T1_6, value) = false) Then
				Me.OnDetail_T1_6Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T1_6 = value
				Me.SendPropertyChanged("Detail_T1_6")
				Me.OnDetail_T1_6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T1_7", DbType:="VarChar(50)")>  _
	Public Property Detail_T1_7() As String
		Get
			Return Me._Detail_T1_7
		End Get
		Set
			If (String.Equals(Me._Detail_T1_7, value) = false) Then
				Me.OnDetail_T1_7Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T1_7 = value
				Me.SendPropertyChanged("Detail_T1_7")
				Me.OnDetail_T1_7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T1_8", DbType:="VarChar(50)")>  _
	Public Property Detail_T1_8() As String
		Get
			Return Me._Detail_T1_8
		End Get
		Set
			If (String.Equals(Me._Detail_T1_8, value) = false) Then
				Me.OnDetail_T1_8Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T1_8 = value
				Me.SendPropertyChanged("Detail_T1_8")
				Me.OnDetail_T1_8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T1_1", DbType:="Int")>  _
	Public Property Number_T1_1() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T1_1
		End Get
		Set
			If (Me._Number_T1_1.Equals(value) = false) Then
				Me.OnNumber_T1_1Changing(value)
				Me.SendPropertyChanging
				Me._Number_T1_1 = value
				Me.SendPropertyChanged("Number_T1_1")
				Me.OnNumber_T1_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T1_2", DbType:="Int")>  _
	Public Property Number_T1_2() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T1_2
		End Get
		Set
			If (Me._Number_T1_2.Equals(value) = false) Then
				Me.OnNumber_T1_2Changing(value)
				Me.SendPropertyChanging
				Me._Number_T1_2 = value
				Me.SendPropertyChanged("Number_T1_2")
				Me.OnNumber_T1_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T1_3", DbType:="Int")>  _
	Public Property Number_T1_3() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T1_3
		End Get
		Set
			If (Me._Number_T1_3.Equals(value) = false) Then
				Me.OnNumber_T1_3Changing(value)
				Me.SendPropertyChanging
				Me._Number_T1_3 = value
				Me.SendPropertyChanged("Number_T1_3")
				Me.OnNumber_T1_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T1_4", DbType:="Int")>  _
	Public Property Number_T1_4() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T1_4
		End Get
		Set
			If (Me._Number_T1_4.Equals(value) = false) Then
				Me.OnNumber_T1_4Changing(value)
				Me.SendPropertyChanging
				Me._Number_T1_4 = value
				Me.SendPropertyChanged("Number_T1_4")
				Me.OnNumber_T1_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T1_5", DbType:="Int")>  _
	Public Property Number_T1_5() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T1_5
		End Get
		Set
			If (Me._Number_T1_5.Equals(value) = false) Then
				Me.OnNumber_T1_5Changing(value)
				Me.SendPropertyChanging
				Me._Number_T1_5 = value
				Me.SendPropertyChanged("Number_T1_5")
				Me.OnNumber_T1_5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T1_6", DbType:="Int")>  _
	Public Property Number_T1_6() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T1_6
		End Get
		Set
			If (Me._Number_T1_6.Equals(value) = false) Then
				Me.OnNumber_T1_6Changing(value)
				Me.SendPropertyChanging
				Me._Number_T1_6 = value
				Me.SendPropertyChanged("Number_T1_6")
				Me.OnNumber_T1_6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T1_7", DbType:="Int")>  _
	Public Property Number_T1_7() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T1_7
		End Get
		Set
			If (Me._Number_T1_7.Equals(value) = false) Then
				Me.OnNumber_T1_7Changing(value)
				Me.SendPropertyChanging
				Me._Number_T1_7 = value
				Me.SendPropertyChanged("Number_T1_7")
				Me.OnNumber_T1_7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T1_8", DbType:="Int")>  _
	Public Property Number_T1_8() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T1_8
		End Get
		Set
			If (Me._Number_T1_8.Equals(value) = false) Then
				Me.OnNumber_T1_8Changing(value)
				Me.SendPropertyChanging
				Me._Number_T1_8 = value
				Me.SendPropertyChanged("Number_T1_8")
				Me.OnNumber_T1_8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T1_1", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T1_1() As Boolean
		Get
			Return Me._IsSelected_T1_1
		End Get
		Set
			If ((Me._IsSelected_T1_1 = value)  _
						= false) Then
				Me.OnIsSelected_T1_1Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T1_1 = value
				Me.SendPropertyChanged("IsSelected_T1_1")
				Me.OnIsSelected_T1_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T1_2", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T1_2() As Boolean
		Get
			Return Me._IsSelected_T1_2
		End Get
		Set
			If ((Me._IsSelected_T1_2 = value)  _
						= false) Then
				Me.OnIsSelected_T1_2Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T1_2 = value
				Me.SendPropertyChanged("IsSelected_T1_2")
				Me.OnIsSelected_T1_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T1_3", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T1_3() As Boolean
		Get
			Return Me._IsSelected_T1_3
		End Get
		Set
			If ((Me._IsSelected_T1_3 = value)  _
						= false) Then
				Me.OnIsSelected_T1_3Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T1_3 = value
				Me.SendPropertyChanged("IsSelected_T1_3")
				Me.OnIsSelected_T1_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T1_4", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T1_4() As Boolean
		Get
			Return Me._IsSelected_T1_4
		End Get
		Set
			If ((Me._IsSelected_T1_4 = value)  _
						= false) Then
				Me.OnIsSelected_T1_4Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T1_4 = value
				Me.SendPropertyChanged("IsSelected_T1_4")
				Me.OnIsSelected_T1_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T1_5", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T1_5() As Boolean
		Get
			Return Me._IsSelected_T1_5
		End Get
		Set
			If ((Me._IsSelected_T1_5 = value)  _
						= false) Then
				Me.OnIsSelected_T1_5Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T1_5 = value
				Me.SendPropertyChanged("IsSelected_T1_5")
				Me.OnIsSelected_T1_5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T1_6", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T1_6() As Boolean
		Get
			Return Me._IsSelected_T1_6
		End Get
		Set
			If ((Me._IsSelected_T1_6 = value)  _
						= false) Then
				Me.OnIsSelected_T1_6Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T1_6 = value
				Me.SendPropertyChanged("IsSelected_T1_6")
				Me.OnIsSelected_T1_6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T1_7", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T1_7() As Boolean
		Get
			Return Me._IsSelected_T1_7
		End Get
		Set
			If ((Me._IsSelected_T1_7 = value)  _
						= false) Then
				Me.OnIsSelected_T1_7Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T1_7 = value
				Me.SendPropertyChanged("IsSelected_T1_7")
				Me.OnIsSelected_T1_7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T1_8", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T1_8() As Boolean
		Get
			Return Me._IsSelected_T1_8
		End Get
		Set
			If ((Me._IsSelected_T1_8 = value)  _
						= false) Then
				Me.OnIsSelected_T1_8Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T1_8 = value
				Me.SendPropertyChanged("IsSelected_T1_8")
				Me.OnIsSelected_T1_8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T2_1", DbType:="VarChar(50)")>  _
	Public Property Detail_T2_1() As String
		Get
			Return Me._Detail_T2_1
		End Get
		Set
			If (String.Equals(Me._Detail_T2_1, value) = false) Then
				Me.OnDetail_T2_1Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T2_1 = value
				Me.SendPropertyChanged("Detail_T2_1")
				Me.OnDetail_T2_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T2_2", DbType:="VarChar(50)")>  _
	Public Property Detail_T2_2() As String
		Get
			Return Me._Detail_T2_2
		End Get
		Set
			If (String.Equals(Me._Detail_T2_2, value) = false) Then
				Me.OnDetail_T2_2Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T2_2 = value
				Me.SendPropertyChanged("Detail_T2_2")
				Me.OnDetail_T2_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T2_3", DbType:="VarChar(50)")>  _
	Public Property Detail_T2_3() As String
		Get
			Return Me._Detail_T2_3
		End Get
		Set
			If (String.Equals(Me._Detail_T2_3, value) = false) Then
				Me.OnDetail_T2_3Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T2_3 = value
				Me.SendPropertyChanged("Detail_T2_3")
				Me.OnDetail_T2_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T2_4", DbType:="VarChar(50)")>  _
	Public Property Detail_T2_4() As String
		Get
			Return Me._Detail_T2_4
		End Get
		Set
			If (String.Equals(Me._Detail_T2_4, value) = false) Then
				Me.OnDetail_T2_4Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T2_4 = value
				Me.SendPropertyChanged("Detail_T2_4")
				Me.OnDetail_T2_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T2_5", DbType:="VarChar(50)")>  _
	Public Property Detail_T2_5() As String
		Get
			Return Me._Detail_T2_5
		End Get
		Set
			If (String.Equals(Me._Detail_T2_5, value) = false) Then
				Me.OnDetail_T2_5Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T2_5 = value
				Me.SendPropertyChanged("Detail_T2_5")
				Me.OnDetail_T2_5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T2_6", DbType:="VarChar(50)")>  _
	Public Property Detail_T2_6() As String
		Get
			Return Me._Detail_T2_6
		End Get
		Set
			If (String.Equals(Me._Detail_T2_6, value) = false) Then
				Me.OnDetail_T2_6Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T2_6 = value
				Me.SendPropertyChanged("Detail_T2_6")
				Me.OnDetail_T2_6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T2_7", DbType:="VarChar(50)")>  _
	Public Property Detail_T2_7() As String
		Get
			Return Me._Detail_T2_7
		End Get
		Set
			If (String.Equals(Me._Detail_T2_7, value) = false) Then
				Me.OnDetail_T2_7Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T2_7 = value
				Me.SendPropertyChanged("Detail_T2_7")
				Me.OnDetail_T2_7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T2_8", DbType:="VarChar(50)")>  _
	Public Property Detail_T2_8() As String
		Get
			Return Me._Detail_T2_8
		End Get
		Set
			If (String.Equals(Me._Detail_T2_8, value) = false) Then
				Me.OnDetail_T2_8Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T2_8 = value
				Me.SendPropertyChanged("Detail_T2_8")
				Me.OnDetail_T2_8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T2_1", DbType:="Int")>  _
	Public Property Number_T2_1() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T2_1
		End Get
		Set
			If (Me._Number_T2_1.Equals(value) = false) Then
				Me.OnNumber_T2_1Changing(value)
				Me.SendPropertyChanging
				Me._Number_T2_1 = value
				Me.SendPropertyChanged("Number_T2_1")
				Me.OnNumber_T2_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T2_2", DbType:="Int")>  _
	Public Property Number_T2_2() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T2_2
		End Get
		Set
			If (Me._Number_T2_2.Equals(value) = false) Then
				Me.OnNumber_T2_2Changing(value)
				Me.SendPropertyChanging
				Me._Number_T2_2 = value
				Me.SendPropertyChanged("Number_T2_2")
				Me.OnNumber_T2_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T2_3", DbType:="Int")>  _
	Public Property Number_T2_3() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T2_3
		End Get
		Set
			If (Me._Number_T2_3.Equals(value) = false) Then
				Me.OnNumber_T2_3Changing(value)
				Me.SendPropertyChanging
				Me._Number_T2_3 = value
				Me.SendPropertyChanged("Number_T2_3")
				Me.OnNumber_T2_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T2_4", DbType:="Int")>  _
	Public Property Number_T2_4() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T2_4
		End Get
		Set
			If (Me._Number_T2_4.Equals(value) = false) Then
				Me.OnNumber_T2_4Changing(value)
				Me.SendPropertyChanging
				Me._Number_T2_4 = value
				Me.SendPropertyChanged("Number_T2_4")
				Me.OnNumber_T2_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T2_5", DbType:="Int")>  _
	Public Property Number_T2_5() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T2_5
		End Get
		Set
			If (Me._Number_T2_5.Equals(value) = false) Then
				Me.OnNumber_T2_5Changing(value)
				Me.SendPropertyChanging
				Me._Number_T2_5 = value
				Me.SendPropertyChanged("Number_T2_5")
				Me.OnNumber_T2_5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T2_6", DbType:="Int")>  _
	Public Property Number_T2_6() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T2_6
		End Get
		Set
			If (Me._Number_T2_6.Equals(value) = false) Then
				Me.OnNumber_T2_6Changing(value)
				Me.SendPropertyChanging
				Me._Number_T2_6 = value
				Me.SendPropertyChanged("Number_T2_6")
				Me.OnNumber_T2_6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T2_7", DbType:="Int")>  _
	Public Property Number_T2_7() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T2_7
		End Get
		Set
			If (Me._Number_T2_7.Equals(value) = false) Then
				Me.OnNumber_T2_7Changing(value)
				Me.SendPropertyChanging
				Me._Number_T2_7 = value
				Me.SendPropertyChanged("Number_T2_7")
				Me.OnNumber_T2_7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T2_8", DbType:="Int")>  _
	Public Property Number_T2_8() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T2_8
		End Get
		Set
			If (Me._Number_T2_8.Equals(value) = false) Then
				Me.OnNumber_T2_8Changing(value)
				Me.SendPropertyChanging
				Me._Number_T2_8 = value
				Me.SendPropertyChanged("Number_T2_8")
				Me.OnNumber_T2_8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T2_1", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T2_1() As Boolean
		Get
			Return Me._IsSelected_T2_1
		End Get
		Set
			If ((Me._IsSelected_T2_1 = value)  _
						= false) Then
				Me.OnIsSelected_T2_1Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T2_1 = value
				Me.SendPropertyChanged("IsSelected_T2_1")
				Me.OnIsSelected_T2_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T2_2", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T2_2() As Boolean
		Get
			Return Me._IsSelected_T2_2
		End Get
		Set
			If ((Me._IsSelected_T2_2 = value)  _
						= false) Then
				Me.OnIsSelected_T2_2Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T2_2 = value
				Me.SendPropertyChanged("IsSelected_T2_2")
				Me.OnIsSelected_T2_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T2_3", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T2_3() As Boolean
		Get
			Return Me._IsSelected_T2_3
		End Get
		Set
			If ((Me._IsSelected_T2_3 = value)  _
						= false) Then
				Me.OnIsSelected_T2_3Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T2_3 = value
				Me.SendPropertyChanged("IsSelected_T2_3")
				Me.OnIsSelected_T2_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T2_4", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T2_4() As Boolean
		Get
			Return Me._IsSelected_T2_4
		End Get
		Set
			If ((Me._IsSelected_T2_4 = value)  _
						= false) Then
				Me.OnIsSelected_T2_4Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T2_4 = value
				Me.SendPropertyChanged("IsSelected_T2_4")
				Me.OnIsSelected_T2_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T2_5", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T2_5() As Boolean
		Get
			Return Me._IsSelected_T2_5
		End Get
		Set
			If ((Me._IsSelected_T2_5 = value)  _
						= false) Then
				Me.OnIsSelected_T2_5Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T2_5 = value
				Me.SendPropertyChanged("IsSelected_T2_5")
				Me.OnIsSelected_T2_5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T2_6", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T2_6() As Boolean
		Get
			Return Me._IsSelected_T2_6
		End Get
		Set
			If ((Me._IsSelected_T2_6 = value)  _
						= false) Then
				Me.OnIsSelected_T2_6Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T2_6 = value
				Me.SendPropertyChanged("IsSelected_T2_6")
				Me.OnIsSelected_T2_6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T2_7", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T2_7() As Boolean
		Get
			Return Me._IsSelected_T2_7
		End Get
		Set
			If ((Me._IsSelected_T2_7 = value)  _
						= false) Then
				Me.OnIsSelected_T2_7Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T2_7 = value
				Me.SendPropertyChanged("IsSelected_T2_7")
				Me.OnIsSelected_T2_7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T2_8", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T2_8() As Boolean
		Get
			Return Me._IsSelected_T2_8
		End Get
		Set
			If ((Me._IsSelected_T2_8 = value)  _
						= false) Then
				Me.OnIsSelected_T2_8Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T2_8 = value
				Me.SendPropertyChanged("IsSelected_T2_8")
				Me.OnIsSelected_T2_8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T3_1", DbType:="VarChar(50)")>  _
	Public Property Detail_T3_1() As String
		Get
			Return Me._Detail_T3_1
		End Get
		Set
			If (String.Equals(Me._Detail_T3_1, value) = false) Then
				Me.OnDetail_T3_1Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T3_1 = value
				Me.SendPropertyChanged("Detail_T3_1")
				Me.OnDetail_T3_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T3_2", DbType:="VarChar(50)")>  _
	Public Property Detail_T3_2() As String
		Get
			Return Me._Detail_T3_2
		End Get
		Set
			If (String.Equals(Me._Detail_T3_2, value) = false) Then
				Me.OnDetail_T3_2Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T3_2 = value
				Me.SendPropertyChanged("Detail_T3_2")
				Me.OnDetail_T3_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T3_3", DbType:="VarChar(50)")>  _
	Public Property Detail_T3_3() As String
		Get
			Return Me._Detail_T3_3
		End Get
		Set
			If (String.Equals(Me._Detail_T3_3, value) = false) Then
				Me.OnDetail_T3_3Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T3_3 = value
				Me.SendPropertyChanged("Detail_T3_3")
				Me.OnDetail_T3_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T3_4", DbType:="VarChar(50)")>  _
	Public Property Detail_T3_4() As String
		Get
			Return Me._Detail_T3_4
		End Get
		Set
			If (String.Equals(Me._Detail_T3_4, value) = false) Then
				Me.OnDetail_T3_4Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T3_4 = value
				Me.SendPropertyChanged("Detail_T3_4")
				Me.OnDetail_T3_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T3_5", DbType:="VarChar(50)")>  _
	Public Property Detail_T3_5() As String
		Get
			Return Me._Detail_T3_5
		End Get
		Set
			If (String.Equals(Me._Detail_T3_5, value) = false) Then
				Me.OnDetail_T3_5Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T3_5 = value
				Me.SendPropertyChanged("Detail_T3_5")
				Me.OnDetail_T3_5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T3_6", DbType:="VarChar(50)")>  _
	Public Property Detail_T3_6() As String
		Get
			Return Me._Detail_T3_6
		End Get
		Set
			If (String.Equals(Me._Detail_T3_6, value) = false) Then
				Me.OnDetail_T3_6Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T3_6 = value
				Me.SendPropertyChanged("Detail_T3_6")
				Me.OnDetail_T3_6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T3_7", DbType:="VarChar(50)")>  _
	Public Property Detail_T3_7() As String
		Get
			Return Me._Detail_T3_7
		End Get
		Set
			If (String.Equals(Me._Detail_T3_7, value) = false) Then
				Me.OnDetail_T3_7Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T3_7 = value
				Me.SendPropertyChanged("Detail_T3_7")
				Me.OnDetail_T3_7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T3_8", DbType:="VarChar(50)")>  _
	Public Property Detail_T3_8() As String
		Get
			Return Me._Detail_T3_8
		End Get
		Set
			If (String.Equals(Me._Detail_T3_8, value) = false) Then
				Me.OnDetail_T3_8Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T3_8 = value
				Me.SendPropertyChanged("Detail_T3_8")
				Me.OnDetail_T3_8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T3_1", DbType:="Int")>  _
	Public Property Number_T3_1() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T3_1
		End Get
		Set
			If (Me._Number_T3_1.Equals(value) = false) Then
				Me.OnNumber_T3_1Changing(value)
				Me.SendPropertyChanging
				Me._Number_T3_1 = value
				Me.SendPropertyChanged("Number_T3_1")
				Me.OnNumber_T3_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T3_2", DbType:="Int")>  _
	Public Property Number_T3_2() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T3_2
		End Get
		Set
			If (Me._Number_T3_2.Equals(value) = false) Then
				Me.OnNumber_T3_2Changing(value)
				Me.SendPropertyChanging
				Me._Number_T3_2 = value
				Me.SendPropertyChanged("Number_T3_2")
				Me.OnNumber_T3_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T3_3", DbType:="Int")>  _
	Public Property Number_T3_3() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T3_3
		End Get
		Set
			If (Me._Number_T3_3.Equals(value) = false) Then
				Me.OnNumber_T3_3Changing(value)
				Me.SendPropertyChanging
				Me._Number_T3_3 = value
				Me.SendPropertyChanged("Number_T3_3")
				Me.OnNumber_T3_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T3_4", DbType:="Int")>  _
	Public Property Number_T3_4() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T3_4
		End Get
		Set
			If (Me._Number_T3_4.Equals(value) = false) Then
				Me.OnNumber_T3_4Changing(value)
				Me.SendPropertyChanging
				Me._Number_T3_4 = value
				Me.SendPropertyChanged("Number_T3_4")
				Me.OnNumber_T3_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T3_5", DbType:="Int")>  _
	Public Property Number_T3_5() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T3_5
		End Get
		Set
			If (Me._Number_T3_5.Equals(value) = false) Then
				Me.OnNumber_T3_5Changing(value)
				Me.SendPropertyChanging
				Me._Number_T3_5 = value
				Me.SendPropertyChanged("Number_T3_5")
				Me.OnNumber_T3_5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T3_6", DbType:="Int")>  _
	Public Property Number_T3_6() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T3_6
		End Get
		Set
			If (Me._Number_T3_6.Equals(value) = false) Then
				Me.OnNumber_T3_6Changing(value)
				Me.SendPropertyChanging
				Me._Number_T3_6 = value
				Me.SendPropertyChanged("Number_T3_6")
				Me.OnNumber_T3_6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T3_7", DbType:="Int")>  _
	Public Property Number_T3_7() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T3_7
		End Get
		Set
			If (Me._Number_T3_7.Equals(value) = false) Then
				Me.OnNumber_T3_7Changing(value)
				Me.SendPropertyChanging
				Me._Number_T3_7 = value
				Me.SendPropertyChanged("Number_T3_7")
				Me.OnNumber_T3_7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T3_8", DbType:="Int")>  _
	Public Property Number_T3_8() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T3_8
		End Get
		Set
			If (Me._Number_T3_8.Equals(value) = false) Then
				Me.OnNumber_T3_8Changing(value)
				Me.SendPropertyChanging
				Me._Number_T3_8 = value
				Me.SendPropertyChanged("Number_T3_8")
				Me.OnNumber_T3_8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T3_1", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T3_1() As Boolean
		Get
			Return Me._IsSelected_T3_1
		End Get
		Set
			If ((Me._IsSelected_T3_1 = value)  _
						= false) Then
				Me.OnIsSelected_T3_1Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T3_1 = value
				Me.SendPropertyChanged("IsSelected_T3_1")
				Me.OnIsSelected_T3_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T3_2", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T3_2() As Boolean
		Get
			Return Me._IsSelected_T3_2
		End Get
		Set
			If ((Me._IsSelected_T3_2 = value)  _
						= false) Then
				Me.OnIsSelected_T3_2Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T3_2 = value
				Me.SendPropertyChanged("IsSelected_T3_2")
				Me.OnIsSelected_T3_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T3_3", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T3_3() As Boolean
		Get
			Return Me._IsSelected_T3_3
		End Get
		Set
			If ((Me._IsSelected_T3_3 = value)  _
						= false) Then
				Me.OnIsSelected_T3_3Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T3_3 = value
				Me.SendPropertyChanged("IsSelected_T3_3")
				Me.OnIsSelected_T3_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T3_4", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T3_4() As Boolean
		Get
			Return Me._IsSelected_T3_4
		End Get
		Set
			If ((Me._IsSelected_T3_4 = value)  _
						= false) Then
				Me.OnIsSelected_T3_4Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T3_4 = value
				Me.SendPropertyChanged("IsSelected_T3_4")
				Me.OnIsSelected_T3_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T3_5", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T3_5() As Boolean
		Get
			Return Me._IsSelected_T3_5
		End Get
		Set
			If ((Me._IsSelected_T3_5 = value)  _
						= false) Then
				Me.OnIsSelected_T3_5Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T3_5 = value
				Me.SendPropertyChanged("IsSelected_T3_5")
				Me.OnIsSelected_T3_5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T3_6", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T3_6() As Boolean
		Get
			Return Me._IsSelected_T3_6
		End Get
		Set
			If ((Me._IsSelected_T3_6 = value)  _
						= false) Then
				Me.OnIsSelected_T3_6Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T3_6 = value
				Me.SendPropertyChanged("IsSelected_T3_6")
				Me.OnIsSelected_T3_6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T3_7", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T3_7() As Boolean
		Get
			Return Me._IsSelected_T3_7
		End Get
		Set
			If ((Me._IsSelected_T3_7 = value)  _
						= false) Then
				Me.OnIsSelected_T3_7Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T3_7 = value
				Me.SendPropertyChanged("IsSelected_T3_7")
				Me.OnIsSelected_T3_7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T3_8", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T3_8() As Boolean
		Get
			Return Me._IsSelected_T3_8
		End Get
		Set
			If ((Me._IsSelected_T3_8 = value)  _
						= false) Then
				Me.OnIsSelected_T3_8Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T3_8 = value
				Me.SendPropertyChanged("IsSelected_T3_8")
				Me.OnIsSelected_T3_8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T4_1", DbType:="VarChar(50)")>  _
	Public Property Detail_T4_1() As String
		Get
			Return Me._Detail_T4_1
		End Get
		Set
			If (String.Equals(Me._Detail_T4_1, value) = false) Then
				Me.OnDetail_T4_1Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T4_1 = value
				Me.SendPropertyChanged("Detail_T4_1")
				Me.OnDetail_T4_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T4_2", DbType:="VarChar(50)")>  _
	Public Property Detail_T4_2() As String
		Get
			Return Me._Detail_T4_2
		End Get
		Set
			If (String.Equals(Me._Detail_T4_2, value) = false) Then
				Me.OnDetail_T4_2Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T4_2 = value
				Me.SendPropertyChanged("Detail_T4_2")
				Me.OnDetail_T4_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T4_3", DbType:="VarChar(50)")>  _
	Public Property Detail_T4_3() As String
		Get
			Return Me._Detail_T4_3
		End Get
		Set
			If (String.Equals(Me._Detail_T4_3, value) = false) Then
				Me.OnDetail_T4_3Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T4_3 = value
				Me.SendPropertyChanged("Detail_T4_3")
				Me.OnDetail_T4_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T4_4", DbType:="VarChar(50)")>  _
	Public Property Detail_T4_4() As String
		Get
			Return Me._Detail_T4_4
		End Get
		Set
			If (String.Equals(Me._Detail_T4_4, value) = false) Then
				Me.OnDetail_T4_4Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T4_4 = value
				Me.SendPropertyChanged("Detail_T4_4")
				Me.OnDetail_T4_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T4_5", DbType:="VarChar(50)")>  _
	Public Property Detail_T4_5() As String
		Get
			Return Me._Detail_T4_5
		End Get
		Set
			If (String.Equals(Me._Detail_T4_5, value) = false) Then
				Me.OnDetail_T4_5Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T4_5 = value
				Me.SendPropertyChanged("Detail_T4_5")
				Me.OnDetail_T4_5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T4_6", DbType:="VarChar(50)")>  _
	Public Property Detail_T4_6() As String
		Get
			Return Me._Detail_T4_6
		End Get
		Set
			If (String.Equals(Me._Detail_T4_6, value) = false) Then
				Me.OnDetail_T4_6Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T4_6 = value
				Me.SendPropertyChanged("Detail_T4_6")
				Me.OnDetail_T4_6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T4_7", DbType:="VarChar(50)")>  _
	Public Property Detail_T4_7() As String
		Get
			Return Me._Detail_T4_7
		End Get
		Set
			If (String.Equals(Me._Detail_T4_7, value) = false) Then
				Me.OnDetail_T4_7Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T4_7 = value
				Me.SendPropertyChanged("Detail_T4_7")
				Me.OnDetail_T4_7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Detail_T4_8", DbType:="VarChar(50)")>  _
	Public Property Detail_T4_8() As String
		Get
			Return Me._Detail_T4_8
		End Get
		Set
			If (String.Equals(Me._Detail_T4_8, value) = false) Then
				Me.OnDetail_T4_8Changing(value)
				Me.SendPropertyChanging
				Me._Detail_T4_8 = value
				Me.SendPropertyChanged("Detail_T4_8")
				Me.OnDetail_T4_8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T4_1", DbType:="Int")>  _
	Public Property Number_T4_1() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T4_1
		End Get
		Set
			If (Me._Number_T4_1.Equals(value) = false) Then
				Me.OnNumber_T4_1Changing(value)
				Me.SendPropertyChanging
				Me._Number_T4_1 = value
				Me.SendPropertyChanged("Number_T4_1")
				Me.OnNumber_T4_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T4_2", DbType:="Int")>  _
	Public Property Number_T4_2() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T4_2
		End Get
		Set
			If (Me._Number_T4_2.Equals(value) = false) Then
				Me.OnNumber_T4_2Changing(value)
				Me.SendPropertyChanging
				Me._Number_T4_2 = value
				Me.SendPropertyChanged("Number_T4_2")
				Me.OnNumber_T4_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T4_3", DbType:="Int")>  _
	Public Property Number_T4_3() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T4_3
		End Get
		Set
			If (Me._Number_T4_3.Equals(value) = false) Then
				Me.OnNumber_T4_3Changing(value)
				Me.SendPropertyChanging
				Me._Number_T4_3 = value
				Me.SendPropertyChanged("Number_T4_3")
				Me.OnNumber_T4_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T4_4", DbType:="Int")>  _
	Public Property Number_T4_4() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T4_4
		End Get
		Set
			If (Me._Number_T4_4.Equals(value) = false) Then
				Me.OnNumber_T4_4Changing(value)
				Me.SendPropertyChanging
				Me._Number_T4_4 = value
				Me.SendPropertyChanged("Number_T4_4")
				Me.OnNumber_T4_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T4_5", DbType:="Int")>  _
	Public Property Number_T4_5() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T4_5
		End Get
		Set
			If (Me._Number_T4_5.Equals(value) = false) Then
				Me.OnNumber_T4_5Changing(value)
				Me.SendPropertyChanging
				Me._Number_T4_5 = value
				Me.SendPropertyChanged("Number_T4_5")
				Me.OnNumber_T4_5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T4_6", DbType:="Int")>  _
	Public Property Number_T4_6() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T4_6
		End Get
		Set
			If (Me._Number_T4_6.Equals(value) = false) Then
				Me.OnNumber_T4_6Changing(value)
				Me.SendPropertyChanging
				Me._Number_T4_6 = value
				Me.SendPropertyChanged("Number_T4_6")
				Me.OnNumber_T4_6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T4_7", DbType:="Int")>  _
	Public Property Number_T4_7() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T4_7
		End Get
		Set
			If (Me._Number_T4_7.Equals(value) = false) Then
				Me.OnNumber_T4_7Changing(value)
				Me.SendPropertyChanging
				Me._Number_T4_7 = value
				Me.SendPropertyChanged("Number_T4_7")
				Me.OnNumber_T4_7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Number_T4_8", DbType:="Int")>  _
	Public Property Number_T4_8() As System.Nullable(Of Integer)
		Get
			Return Me._Number_T4_8
		End Get
		Set
			If (Me._Number_T4_8.Equals(value) = false) Then
				Me.OnNumber_T4_8Changing(value)
				Me.SendPropertyChanging
				Me._Number_T4_8 = value
				Me.SendPropertyChanged("Number_T4_8")
				Me.OnNumber_T4_8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T4_1", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T4_1() As Boolean
		Get
			Return Me._IsSelected_T4_1
		End Get
		Set
			If ((Me._IsSelected_T4_1 = value)  _
						= false) Then
				Me.OnIsSelected_T4_1Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T4_1 = value
				Me.SendPropertyChanged("IsSelected_T4_1")
				Me.OnIsSelected_T4_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T4_2", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T4_2() As Boolean
		Get
			Return Me._IsSelected_T4_2
		End Get
		Set
			If ((Me._IsSelected_T4_2 = value)  _
						= false) Then
				Me.OnIsSelected_T4_2Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T4_2 = value
				Me.SendPropertyChanged("IsSelected_T4_2")
				Me.OnIsSelected_T4_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T4_3", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T4_3() As Boolean
		Get
			Return Me._IsSelected_T4_3
		End Get
		Set
			If ((Me._IsSelected_T4_3 = value)  _
						= false) Then
				Me.OnIsSelected_T4_3Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T4_3 = value
				Me.SendPropertyChanged("IsSelected_T4_3")
				Me.OnIsSelected_T4_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T4_4", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T4_4() As Boolean
		Get
			Return Me._IsSelected_T4_4
		End Get
		Set
			If ((Me._IsSelected_T4_4 = value)  _
						= false) Then
				Me.OnIsSelected_T4_4Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T4_4 = value
				Me.SendPropertyChanged("IsSelected_T4_4")
				Me.OnIsSelected_T4_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T4_5", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T4_5() As Boolean
		Get
			Return Me._IsSelected_T4_5
		End Get
		Set
			If ((Me._IsSelected_T4_5 = value)  _
						= false) Then
				Me.OnIsSelected_T4_5Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T4_5 = value
				Me.SendPropertyChanged("IsSelected_T4_5")
				Me.OnIsSelected_T4_5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T4_6", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T4_6() As Boolean
		Get
			Return Me._IsSelected_T4_6
		End Get
		Set
			If ((Me._IsSelected_T4_6 = value)  _
						= false) Then
				Me.OnIsSelected_T4_6Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T4_6 = value
				Me.SendPropertyChanged("IsSelected_T4_6")
				Me.OnIsSelected_T4_6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T4_7", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T4_7() As Boolean
		Get
			Return Me._IsSelected_T4_7
		End Get
		Set
			If ((Me._IsSelected_T4_7 = value)  _
						= false) Then
				Me.OnIsSelected_T4_7Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T4_7 = value
				Me.SendPropertyChanged("IsSelected_T4_7")
				Me.OnIsSelected_T4_7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSelected_T4_8", DbType:="Bit NOT NULL")>  _
	Public Property IsSelected_T4_8() As Boolean
		Get
			Return Me._IsSelected_T4_8
		End Get
		Set
			If ((Me._IsSelected_T4_8 = value)  _
						= false) Then
				Me.OnIsSelected_T4_8Changing(value)
				Me.SendPropertyChanging
				Me._IsSelected_T4_8 = value
				Me.SendPropertyChanged("IsSelected_T4_8")
				Me.OnIsSelected_T4_8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Division", DbType:="VarChar(50)")>  _
	Public Property Division() As String
		Get
			Return Me._Division
		End Get
		Set
			If (String.Equals(Me._Division, value) = false) Then
				Me.OnDivisionChanging(value)
				Me.SendPropertyChanging
				Me._Division = value
				Me.SendPropertyChanged("Division")
				Me.OnDivisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="VarChar(50)")>  _
	Public Property Department() As String
		Get
			Return Me._Department
		End Get
		Set
			If (String.Equals(Me._Department, value) = false) Then
				Me.OnDepartmentChanging(value)
				Me.SendPropertyChanging
				Me._Department = value
				Me.SendPropertyChanged("Department")
				Me.OnDepartmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Section", DbType:="VarChar(50)")>  _
	Public Property Section() As String
		Get
			Return Me._Section
		End Get
		Set
			If (String.Equals(Me._Section, value) = false) Then
				Me.OnSectionChanging(value)
				Me.SendPropertyChanging
				Me._Section = value
				Me.SendPropertyChanged("Section")
				Me.OnSectionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Building", DbType:="VarChar(50)")>  _
	Public Property Building() As String
		Get
			Return Me._Building
		End Get
		Set
			If (String.Equals(Me._Building, value) = false) Then
				Me.OnBuildingChanging(value)
				Me.SendPropertyChanging
				Me._Building = value
				Me.SendPropertyChanged("Building")
				Me.OnBuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Floor", DbType:="VarChar(50)")>  _
	Public Property Floor() As String
		Get
			Return Me._Floor
		End Get
		Set
			If (String.Equals(Me._Floor, value) = false) Then
				Me.OnFloorChanging(value)
				Me.SendPropertyChanging
				Me._Floor = value
				Me.SendPropertyChanged("Floor")
				Me.OnFloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Process", DbType:="VarChar(50)")>  _
	Public Property Process() As String
		Get
			Return Me._Process
		End Get
		Set
			If (String.Equals(Me._Process, value) = false) Then
				Me.OnProcessChanging(value)
				Me.SendPropertyChanging
				Me._Process = value
				Me.SendPropertyChanged("Process")
				Me.OnProcessChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILE_ATTACH_NAME_1", DbType:="VarChar(150)")>  _
	Public Property FILE_ATTACH_NAME_1() As String
		Get
			Return Me._FILE_ATTACH_NAME_1
		End Get
		Set
			If (String.Equals(Me._FILE_ATTACH_NAME_1, value) = false) Then
				Me.OnFILE_ATTACH_NAME_1Changing(value)
				Me.SendPropertyChanging
				Me._FILE_ATTACH_NAME_1 = value
				Me.SendPropertyChanged("FILE_ATTACH_NAME_1")
				Me.OnFILE_ATTACH_NAME_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILE_ATTACH_CONTENT_TYPE_1", DbType:="VarChar(50)")>  _
	Public Property FILE_ATTACH_CONTENT_TYPE_1() As String
		Get
			Return Me._FILE_ATTACH_CONTENT_TYPE_1
		End Get
		Set
			If (String.Equals(Me._FILE_ATTACH_CONTENT_TYPE_1, value) = false) Then
				Me.OnFILE_ATTACH_CONTENT_TYPE_1Changing(value)
				Me.SendPropertyChanging
				Me._FILE_ATTACH_CONTENT_TYPE_1 = value
				Me.SendPropertyChanged("FILE_ATTACH_CONTENT_TYPE_1")
				Me.OnFILE_ATTACH_CONTENT_TYPE_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILE_ATTACH_DATA_1", DbType:="VarBinary(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property FILE_ATTACH_DATA_1() As System.Data.Linq.Binary
		Get
			Return Me._FILE_ATTACH_DATA_1
		End Get
		Set
			If (Object.Equals(Me._FILE_ATTACH_DATA_1, value) = false) Then
				Me.OnFILE_ATTACH_DATA_1Changing(value)
				Me.SendPropertyChanging
				Me._FILE_ATTACH_DATA_1 = value
				Me.SendPropertyChanged("FILE_ATTACH_DATA_1")
				Me.OnFILE_ATTACH_DATA_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILE_ATTACH_NAME_2", DbType:="VarChar(150)")>  _
	Public Property FILE_ATTACH_NAME_2() As String
		Get
			Return Me._FILE_ATTACH_NAME_2
		End Get
		Set
			If (String.Equals(Me._FILE_ATTACH_NAME_2, value) = false) Then
				Me.OnFILE_ATTACH_NAME_2Changing(value)
				Me.SendPropertyChanging
				Me._FILE_ATTACH_NAME_2 = value
				Me.SendPropertyChanged("FILE_ATTACH_NAME_2")
				Me.OnFILE_ATTACH_NAME_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILE_ATTACH_CONTENT_TYPE_2", DbType:="VarChar(50)")>  _
	Public Property FILE_ATTACH_CONTENT_TYPE_2() As String
		Get
			Return Me._FILE_ATTACH_CONTENT_TYPE_2
		End Get
		Set
			If (String.Equals(Me._FILE_ATTACH_CONTENT_TYPE_2, value) = false) Then
				Me.OnFILE_ATTACH_CONTENT_TYPE_2Changing(value)
				Me.SendPropertyChanging
				Me._FILE_ATTACH_CONTENT_TYPE_2 = value
				Me.SendPropertyChanged("FILE_ATTACH_CONTENT_TYPE_2")
				Me.OnFILE_ATTACH_CONTENT_TYPE_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILE_ATTACH_DATA_2", DbType:="VarBinary(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property FILE_ATTACH_DATA_2() As System.Data.Linq.Binary
		Get
			Return Me._FILE_ATTACH_DATA_2
		End Get
		Set
			If (Object.Equals(Me._FILE_ATTACH_DATA_2, value) = false) Then
				Me.OnFILE_ATTACH_DATA_2Changing(value)
				Me.SendPropertyChanging
				Me._FILE_ATTACH_DATA_2 = value
				Me.SendPropertyChanged("FILE_ATTACH_DATA_2")
				Me.OnFILE_ATTACH_DATA_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILE_ATTACH_NAME_3", DbType:="VarChar(150)")>  _
	Public Property FILE_ATTACH_NAME_3() As String
		Get
			Return Me._FILE_ATTACH_NAME_3
		End Get
		Set
			If (String.Equals(Me._FILE_ATTACH_NAME_3, value) = false) Then
				Me.OnFILE_ATTACH_NAME_3Changing(value)
				Me.SendPropertyChanging
				Me._FILE_ATTACH_NAME_3 = value
				Me.SendPropertyChanged("FILE_ATTACH_NAME_3")
				Me.OnFILE_ATTACH_NAME_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILE_ATTACH_CONTENT_TYPE_3", DbType:="VarChar(50)")>  _
	Public Property FILE_ATTACH_CONTENT_TYPE_3() As String
		Get
			Return Me._FILE_ATTACH_CONTENT_TYPE_3
		End Get
		Set
			If (String.Equals(Me._FILE_ATTACH_CONTENT_TYPE_3, value) = false) Then
				Me.OnFILE_ATTACH_CONTENT_TYPE_3Changing(value)
				Me.SendPropertyChanging
				Me._FILE_ATTACH_CONTENT_TYPE_3 = value
				Me.SendPropertyChanged("FILE_ATTACH_CONTENT_TYPE_3")
				Me.OnFILE_ATTACH_CONTENT_TYPE_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILE_ATTACH_DATA_3", DbType:="VarBinary(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property FILE_ATTACH_DATA_3() As System.Data.Linq.Binary
		Get
			Return Me._FILE_ATTACH_DATA_3
		End Get
		Set
			If (Object.Equals(Me._FILE_ATTACH_DATA_3, value) = false) Then
				Me.OnFILE_ATTACH_DATA_3Changing(value)
				Me.SendPropertyChanging
				Me._FILE_ATTACH_DATA_3 = value
				Me.SendPropertyChanged("FILE_ATTACH_DATA_3")
				Me.OnFILE_ATTACH_DATA_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ADD", DbType:="DateTime")>  _
	Public Property DATE_ADD() As System.Nullable(Of Date)
		Get
			Return Me._DATE_ADD
		End Get
		Set
			If (Me._DATE_ADD.Equals(value) = false) Then
				Me.OnDATE_ADDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ADD = value
				Me.SendPropertyChanged("DATE_ADD")
				Me.OnDATE_ADDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TB_SECURITY")>  _
Partial Public Class TB_SECURITY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _MC_NO As String
	
	Private _R_1 As String
	
	Private _PB1 As String
	
	Private _RS1 As String
	
	Private _DT1 As System.Nullable(Of Date)
	
	Private _R_2 As String
	
	Private _PB2 As String
	
	Private _RS2 As String
	
	Private _DT2 As System.Nullable(Of Date)
	
	Private _R_3 As String
	
	Private _PB3 As String
	
	Private _RS3 As String
	
	Private _DT3 As System.Nullable(Of Date)
	
	Private _R_4 As String
	
	Private _PB4 As String
	
	Private _RS4 As String
	
	Private _DT4 As System.Nullable(Of Date)
	
	Private _R_5 As String
	
	Private _PB5 As String
	
	Private _RS5 As String
	
	Private _DT5 As System.Nullable(Of Date)
	
	Private _R_6 As String
	
	Private _PB6 As String
	
	Private _RS6 As String
	
	Private _DT6 As System.Nullable(Of Date)
	
	Private _R_7 As String
	
	Private _PB7 As String
	
	Private _RS7 As String
	
	Private _DT7 As System.Nullable(Of Date)
	
	Private _R_8 As String
	
	Private _PB8 As String
	
	Private _RS8 As String
	
	Private _DT8 As System.Nullable(Of Date)
	
	Private _R_9 As String
	
	Private _PB9 As String
	
	Private _RS9 As String
	
	Private _DT9 As System.Nullable(Of Date)
	
	Private _R_10 As String
	
	Private _PB10 As String
	
	Private _RS10 As String
	
	Private _DT10 As System.Nullable(Of Date)
	
	Private _R_11 As String
	
	Private _PB11 As String
	
	Private _RS11 As String
	
	Private _DT11 As System.Nullable(Of Date)
	
	Private _R_12 As String
	
	Private _PB12 As String
	
	Private _RS12 As String
	
	Private _DT12 As System.Nullable(Of Date)
	
	Private _R_13 As String
	
	Private _PB13 As String
	
	Private _RS13 As String
	
	Private _DT13 As System.Nullable(Of Date)
	
	Private _R_14 As String
	
	Private _PB14 As String
	
	Private _RS14 As String
	
	Private _DT14 As System.Nullable(Of Date)
	
	Private _R_15 As String
	
	Private _PB15 As String
	
	Private _RS15 As String
	
	Private _DT15 As System.Nullable(Of Date)
	
	Private _R_16 As String
	
	Private _PB16 As String
	
	Private _RS16 As String
	
	Private _DT16 As System.Nullable(Of Date)
	
	Private _R_17 As String
	
	Private _PB17 As String
	
	Private _RS17 As String
	
	Private _DT17 As System.Nullable(Of Date)
	
	Private _R_18 As String
	
	Private _PB18 As String
	
	Private _RS18 As String
	
	Private _DT18 As System.Nullable(Of Date)
	
	Private _R_19 As String
	
	Private _PB19 As String
	
	Private _RS19 As String
	
	Private _DT19 As System.Nullable(Of Date)
	
	Private _R_20 As String
	
	Private _PB20 As String
	
	Private _RS20 As String
	
	Private _DT20 As System.Nullable(Of Date)
	
	Private _R_21 As String
	
	Private _PB21 As String
	
	Private _RS21 As String
	
	Private _DT21 As System.Nullable(Of Date)
	
	Private _R_22 As String
	
	Private _PB22 As String
	
	Private _RS22 As String
	
	Private _DT22 As System.Nullable(Of Date)
	
	Private _R_23 As String
	
	Private _PB23 As String
	
	Private _RS23 As String
	
	Private _DT23 As System.Nullable(Of Date)
	
	Private _R_24 As String
	
	Private _PB24 As String
	
	Private _RS24 As String
	
	Private _DT24 As System.Nullable(Of Date)
	
	Private _R_25 As String
	
	Private _PB25 As String
	
	Private _RS25 As String
	
	Private _DT25 As System.Nullable(Of Date)
	
	Private _R_26 As String
	
	Private _PB26 As String
	
	Private _RS26 As String
	
	Private _DT26 As System.Nullable(Of Date)
	
	Private _R_27 As String
	
	Private _PB27 As String
	
	Private _RS27 As String
	
	Private _DT27 As System.Nullable(Of Date)
	
	Private _R_28 As String
	
	Private _PB28 As String
	
	Private _RS28 As String
	
	Private _DT28 As System.Nullable(Of Date)
	
	Private _R_29 As String
	
	Private _PB29 As String
	
	Private _RS29 As String
	
	Private _DT29 As System.Nullable(Of Date)
	
	Private _R_30 As String
	
	Private _PB30 As String
	
	Private _RS30 As String
	
	Private _DT30 As System.Nullable(Of Date)
	
	Private _R_31 As String
	
	Private _PB31 As String
	
	Private _RS31 As String
	
	Private _DT31 As System.Nullable(Of Date)
	
	Private _R_32 As String
	
	Private _PB32 As String
	
	Private _RS32 As String
	
	Private _DT32 As System.Nullable(Of Date)
	
	Private _R_33 As String
	
	Private _PB33 As String
	
	Private _RS33 As String
	
	Private _DT33 As System.Nullable(Of Date)
	
	Private _R_34 As String
	
	Private _PB34 As String
	
	Private _RS34 As String
	
	Private _DT34 As System.Nullable(Of Date)
	
	Private _R_35 As String
	
	Private _PB35 As String
	
	Private _RS35 As String
	
	Private _DT35 As System.Nullable(Of Date)
	
	Private _R_36 As String
	
	Private _PB36 As String
	
	Private _RS36 As String
	
	Private _DT36 As System.Nullable(Of Date)
	
	Private _R_37 As String
	
	Private _PB37 As String
	
	Private _RS37 As String
	
	Private _DT37 As System.Nullable(Of Date)
	
	Private _R_38 As String
	
	Private _PB38 As String
	
	Private _RS38 As String
	
	Private _DT38 As System.Nullable(Of Date)
	
	Private _R_39 As String
	
	Private _PB39 As String
	
	Private _RS39 As String
	
	Private _DT39 As System.Nullable(Of Date)
	
	Private _R_40 As String
	
	Private _PB40 As String
	
	Private _RS40 As String
	
	Private _DT40 As System.Nullable(Of Date)
	
	Private _R_41 As String
	
	Private _PB41 As String
	
	Private _RS41 As String
	
	Private _DT41 As System.Nullable(Of Date)
	
	Private _IP As String
	
	Private _OPNO_ADD As String
	
	Private _DATE_ADD As System.Nullable(Of Date)
	
	Private _OPNO_UPDATE As String
	
	Private _DATE_UPDATE As System.Nullable(Of Date)
	
	Private _FLAG As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnMC_NOChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NOChanged()
    End Sub
    Partial Private Sub OnR_1Changing(value As String)
    End Sub
    Partial Private Sub OnR_1Changed()
    End Sub
    Partial Private Sub OnPB1Changing(value As String)
    End Sub
    Partial Private Sub OnPB1Changed()
    End Sub
    Partial Private Sub OnRS1Changing(value As String)
    End Sub
    Partial Private Sub OnRS1Changed()
    End Sub
    Partial Private Sub OnDT1Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT1Changed()
    End Sub
    Partial Private Sub OnR_2Changing(value As String)
    End Sub
    Partial Private Sub OnR_2Changed()
    End Sub
    Partial Private Sub OnPB2Changing(value As String)
    End Sub
    Partial Private Sub OnPB2Changed()
    End Sub
    Partial Private Sub OnRS2Changing(value As String)
    End Sub
    Partial Private Sub OnRS2Changed()
    End Sub
    Partial Private Sub OnDT2Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT2Changed()
    End Sub
    Partial Private Sub OnR_3Changing(value As String)
    End Sub
    Partial Private Sub OnR_3Changed()
    End Sub
    Partial Private Sub OnPB3Changing(value As String)
    End Sub
    Partial Private Sub OnPB3Changed()
    End Sub
    Partial Private Sub OnRS3Changing(value As String)
    End Sub
    Partial Private Sub OnRS3Changed()
    End Sub
    Partial Private Sub OnDT3Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT3Changed()
    End Sub
    Partial Private Sub OnR_4Changing(value As String)
    End Sub
    Partial Private Sub OnR_4Changed()
    End Sub
    Partial Private Sub OnPB4Changing(value As String)
    End Sub
    Partial Private Sub OnPB4Changed()
    End Sub
    Partial Private Sub OnRS4Changing(value As String)
    End Sub
    Partial Private Sub OnRS4Changed()
    End Sub
    Partial Private Sub OnDT4Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT4Changed()
    End Sub
    Partial Private Sub OnR_5Changing(value As String)
    End Sub
    Partial Private Sub OnR_5Changed()
    End Sub
    Partial Private Sub OnPB5Changing(value As String)
    End Sub
    Partial Private Sub OnPB5Changed()
    End Sub
    Partial Private Sub OnRS5Changing(value As String)
    End Sub
    Partial Private Sub OnRS5Changed()
    End Sub
    Partial Private Sub OnDT5Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT5Changed()
    End Sub
    Partial Private Sub OnR_6Changing(value As String)
    End Sub
    Partial Private Sub OnR_6Changed()
    End Sub
    Partial Private Sub OnPB6Changing(value As String)
    End Sub
    Partial Private Sub OnPB6Changed()
    End Sub
    Partial Private Sub OnRS6Changing(value As String)
    End Sub
    Partial Private Sub OnRS6Changed()
    End Sub
    Partial Private Sub OnDT6Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT6Changed()
    End Sub
    Partial Private Sub OnR_7Changing(value As String)
    End Sub
    Partial Private Sub OnR_7Changed()
    End Sub
    Partial Private Sub OnPB7Changing(value As String)
    End Sub
    Partial Private Sub OnPB7Changed()
    End Sub
    Partial Private Sub OnRS7Changing(value As String)
    End Sub
    Partial Private Sub OnRS7Changed()
    End Sub
    Partial Private Sub OnDT7Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT7Changed()
    End Sub
    Partial Private Sub OnR_8Changing(value As String)
    End Sub
    Partial Private Sub OnR_8Changed()
    End Sub
    Partial Private Sub OnPB8Changing(value As String)
    End Sub
    Partial Private Sub OnPB8Changed()
    End Sub
    Partial Private Sub OnRS8Changing(value As String)
    End Sub
    Partial Private Sub OnRS8Changed()
    End Sub
    Partial Private Sub OnDT8Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT8Changed()
    End Sub
    Partial Private Sub OnR_9Changing(value As String)
    End Sub
    Partial Private Sub OnR_9Changed()
    End Sub
    Partial Private Sub OnPB9Changing(value As String)
    End Sub
    Partial Private Sub OnPB9Changed()
    End Sub
    Partial Private Sub OnRS9Changing(value As String)
    End Sub
    Partial Private Sub OnRS9Changed()
    End Sub
    Partial Private Sub OnDT9Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT9Changed()
    End Sub
    Partial Private Sub OnR_10Changing(value As String)
    End Sub
    Partial Private Sub OnR_10Changed()
    End Sub
    Partial Private Sub OnPB10Changing(value As String)
    End Sub
    Partial Private Sub OnPB10Changed()
    End Sub
    Partial Private Sub OnRS10Changing(value As String)
    End Sub
    Partial Private Sub OnRS10Changed()
    End Sub
    Partial Private Sub OnDT10Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT10Changed()
    End Sub
    Partial Private Sub OnR_11Changing(value As String)
    End Sub
    Partial Private Sub OnR_11Changed()
    End Sub
    Partial Private Sub OnPB11Changing(value As String)
    End Sub
    Partial Private Sub OnPB11Changed()
    End Sub
    Partial Private Sub OnRS11Changing(value As String)
    End Sub
    Partial Private Sub OnRS11Changed()
    End Sub
    Partial Private Sub OnDT11Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT11Changed()
    End Sub
    Partial Private Sub OnR_12Changing(value As String)
    End Sub
    Partial Private Sub OnR_12Changed()
    End Sub
    Partial Private Sub OnPB12Changing(value As String)
    End Sub
    Partial Private Sub OnPB12Changed()
    End Sub
    Partial Private Sub OnRS12Changing(value As String)
    End Sub
    Partial Private Sub OnRS12Changed()
    End Sub
    Partial Private Sub OnDT12Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT12Changed()
    End Sub
    Partial Private Sub OnR_13Changing(value As String)
    End Sub
    Partial Private Sub OnR_13Changed()
    End Sub
    Partial Private Sub OnPB13Changing(value As String)
    End Sub
    Partial Private Sub OnPB13Changed()
    End Sub
    Partial Private Sub OnRS13Changing(value As String)
    End Sub
    Partial Private Sub OnRS13Changed()
    End Sub
    Partial Private Sub OnDT13Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT13Changed()
    End Sub
    Partial Private Sub OnR_14Changing(value As String)
    End Sub
    Partial Private Sub OnR_14Changed()
    End Sub
    Partial Private Sub OnPB14Changing(value As String)
    End Sub
    Partial Private Sub OnPB14Changed()
    End Sub
    Partial Private Sub OnRS14Changing(value As String)
    End Sub
    Partial Private Sub OnRS14Changed()
    End Sub
    Partial Private Sub OnDT14Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT14Changed()
    End Sub
    Partial Private Sub OnR_15Changing(value As String)
    End Sub
    Partial Private Sub OnR_15Changed()
    End Sub
    Partial Private Sub OnPB15Changing(value As String)
    End Sub
    Partial Private Sub OnPB15Changed()
    End Sub
    Partial Private Sub OnRS15Changing(value As String)
    End Sub
    Partial Private Sub OnRS15Changed()
    End Sub
    Partial Private Sub OnDT15Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT15Changed()
    End Sub
    Partial Private Sub OnR_16Changing(value As String)
    End Sub
    Partial Private Sub OnR_16Changed()
    End Sub
    Partial Private Sub OnPB16Changing(value As String)
    End Sub
    Partial Private Sub OnPB16Changed()
    End Sub
    Partial Private Sub OnRS16Changing(value As String)
    End Sub
    Partial Private Sub OnRS16Changed()
    End Sub
    Partial Private Sub OnDT16Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT16Changed()
    End Sub
    Partial Private Sub OnR_17Changing(value As String)
    End Sub
    Partial Private Sub OnR_17Changed()
    End Sub
    Partial Private Sub OnPB17Changing(value As String)
    End Sub
    Partial Private Sub OnPB17Changed()
    End Sub
    Partial Private Sub OnRS17Changing(value As String)
    End Sub
    Partial Private Sub OnRS17Changed()
    End Sub
    Partial Private Sub OnDT17Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT17Changed()
    End Sub
    Partial Private Sub OnR_18Changing(value As String)
    End Sub
    Partial Private Sub OnR_18Changed()
    End Sub
    Partial Private Sub OnPB18Changing(value As String)
    End Sub
    Partial Private Sub OnPB18Changed()
    End Sub
    Partial Private Sub OnRS18Changing(value As String)
    End Sub
    Partial Private Sub OnRS18Changed()
    End Sub
    Partial Private Sub OnDT18Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT18Changed()
    End Sub
    Partial Private Sub OnR_19Changing(value As String)
    End Sub
    Partial Private Sub OnR_19Changed()
    End Sub
    Partial Private Sub OnPB19Changing(value As String)
    End Sub
    Partial Private Sub OnPB19Changed()
    End Sub
    Partial Private Sub OnRS19Changing(value As String)
    End Sub
    Partial Private Sub OnRS19Changed()
    End Sub
    Partial Private Sub OnDT19Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT19Changed()
    End Sub
    Partial Private Sub OnR_20Changing(value As String)
    End Sub
    Partial Private Sub OnR_20Changed()
    End Sub
    Partial Private Sub OnPB20Changing(value As String)
    End Sub
    Partial Private Sub OnPB20Changed()
    End Sub
    Partial Private Sub OnRS20Changing(value As String)
    End Sub
    Partial Private Sub OnRS20Changed()
    End Sub
    Partial Private Sub OnDT20Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT20Changed()
    End Sub
    Partial Private Sub OnR_21Changing(value As String)
    End Sub
    Partial Private Sub OnR_21Changed()
    End Sub
    Partial Private Sub OnPB21Changing(value As String)
    End Sub
    Partial Private Sub OnPB21Changed()
    End Sub
    Partial Private Sub OnRS21Changing(value As String)
    End Sub
    Partial Private Sub OnRS21Changed()
    End Sub
    Partial Private Sub OnDT21Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT21Changed()
    End Sub
    Partial Private Sub OnR_22Changing(value As String)
    End Sub
    Partial Private Sub OnR_22Changed()
    End Sub
    Partial Private Sub OnPB22Changing(value As String)
    End Sub
    Partial Private Sub OnPB22Changed()
    End Sub
    Partial Private Sub OnRS22Changing(value As String)
    End Sub
    Partial Private Sub OnRS22Changed()
    End Sub
    Partial Private Sub OnDT22Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT22Changed()
    End Sub
    Partial Private Sub OnR_23Changing(value As String)
    End Sub
    Partial Private Sub OnR_23Changed()
    End Sub
    Partial Private Sub OnPB23Changing(value As String)
    End Sub
    Partial Private Sub OnPB23Changed()
    End Sub
    Partial Private Sub OnRS23Changing(value As String)
    End Sub
    Partial Private Sub OnRS23Changed()
    End Sub
    Partial Private Sub OnDT23Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT23Changed()
    End Sub
    Partial Private Sub OnR_24Changing(value As String)
    End Sub
    Partial Private Sub OnR_24Changed()
    End Sub
    Partial Private Sub OnPB24Changing(value As String)
    End Sub
    Partial Private Sub OnPB24Changed()
    End Sub
    Partial Private Sub OnRS24Changing(value As String)
    End Sub
    Partial Private Sub OnRS24Changed()
    End Sub
    Partial Private Sub OnDT24Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT24Changed()
    End Sub
    Partial Private Sub OnR_25Changing(value As String)
    End Sub
    Partial Private Sub OnR_25Changed()
    End Sub
    Partial Private Sub OnPB25Changing(value As String)
    End Sub
    Partial Private Sub OnPB25Changed()
    End Sub
    Partial Private Sub OnRS25Changing(value As String)
    End Sub
    Partial Private Sub OnRS25Changed()
    End Sub
    Partial Private Sub OnDT25Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT25Changed()
    End Sub
    Partial Private Sub OnR_26Changing(value As String)
    End Sub
    Partial Private Sub OnR_26Changed()
    End Sub
    Partial Private Sub OnPB26Changing(value As String)
    End Sub
    Partial Private Sub OnPB26Changed()
    End Sub
    Partial Private Sub OnRS26Changing(value As String)
    End Sub
    Partial Private Sub OnRS26Changed()
    End Sub
    Partial Private Sub OnDT26Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT26Changed()
    End Sub
    Partial Private Sub OnR_27Changing(value As String)
    End Sub
    Partial Private Sub OnR_27Changed()
    End Sub
    Partial Private Sub OnPB27Changing(value As String)
    End Sub
    Partial Private Sub OnPB27Changed()
    End Sub
    Partial Private Sub OnRS27Changing(value As String)
    End Sub
    Partial Private Sub OnRS27Changed()
    End Sub
    Partial Private Sub OnDT27Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT27Changed()
    End Sub
    Partial Private Sub OnR_28Changing(value As String)
    End Sub
    Partial Private Sub OnR_28Changed()
    End Sub
    Partial Private Sub OnPB28Changing(value As String)
    End Sub
    Partial Private Sub OnPB28Changed()
    End Sub
    Partial Private Sub OnRS28Changing(value As String)
    End Sub
    Partial Private Sub OnRS28Changed()
    End Sub
    Partial Private Sub OnDT28Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT28Changed()
    End Sub
    Partial Private Sub OnR_29Changing(value As String)
    End Sub
    Partial Private Sub OnR_29Changed()
    End Sub
    Partial Private Sub OnPB29Changing(value As String)
    End Sub
    Partial Private Sub OnPB29Changed()
    End Sub
    Partial Private Sub OnRS29Changing(value As String)
    End Sub
    Partial Private Sub OnRS29Changed()
    End Sub
    Partial Private Sub OnDT29Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT29Changed()
    End Sub
    Partial Private Sub OnR_30Changing(value As String)
    End Sub
    Partial Private Sub OnR_30Changed()
    End Sub
    Partial Private Sub OnPB30Changing(value As String)
    End Sub
    Partial Private Sub OnPB30Changed()
    End Sub
    Partial Private Sub OnRS30Changing(value As String)
    End Sub
    Partial Private Sub OnRS30Changed()
    End Sub
    Partial Private Sub OnDT30Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT30Changed()
    End Sub
    Partial Private Sub OnR_31Changing(value As String)
    End Sub
    Partial Private Sub OnR_31Changed()
    End Sub
    Partial Private Sub OnPB31Changing(value As String)
    End Sub
    Partial Private Sub OnPB31Changed()
    End Sub
    Partial Private Sub OnRS31Changing(value As String)
    End Sub
    Partial Private Sub OnRS31Changed()
    End Sub
    Partial Private Sub OnDT31Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT31Changed()
    End Sub
    Partial Private Sub OnR_32Changing(value As String)
    End Sub
    Partial Private Sub OnR_32Changed()
    End Sub
    Partial Private Sub OnPB32Changing(value As String)
    End Sub
    Partial Private Sub OnPB32Changed()
    End Sub
    Partial Private Sub OnRS32Changing(value As String)
    End Sub
    Partial Private Sub OnRS32Changed()
    End Sub
    Partial Private Sub OnDT32Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT32Changed()
    End Sub
    Partial Private Sub OnR_33Changing(value As String)
    End Sub
    Partial Private Sub OnR_33Changed()
    End Sub
    Partial Private Sub OnPB33Changing(value As String)
    End Sub
    Partial Private Sub OnPB33Changed()
    End Sub
    Partial Private Sub OnRS33Changing(value As String)
    End Sub
    Partial Private Sub OnRS33Changed()
    End Sub
    Partial Private Sub OnDT33Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT33Changed()
    End Sub
    Partial Private Sub OnR_34Changing(value As String)
    End Sub
    Partial Private Sub OnR_34Changed()
    End Sub
    Partial Private Sub OnPB34Changing(value As String)
    End Sub
    Partial Private Sub OnPB34Changed()
    End Sub
    Partial Private Sub OnRS34Changing(value As String)
    End Sub
    Partial Private Sub OnRS34Changed()
    End Sub
    Partial Private Sub OnDT34Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT34Changed()
    End Sub
    Partial Private Sub OnR_35Changing(value As String)
    End Sub
    Partial Private Sub OnR_35Changed()
    End Sub
    Partial Private Sub OnPB35Changing(value As String)
    End Sub
    Partial Private Sub OnPB35Changed()
    End Sub
    Partial Private Sub OnRS35Changing(value As String)
    End Sub
    Partial Private Sub OnRS35Changed()
    End Sub
    Partial Private Sub OnDT35Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT35Changed()
    End Sub
    Partial Private Sub OnR_36Changing(value As String)
    End Sub
    Partial Private Sub OnR_36Changed()
    End Sub
    Partial Private Sub OnPB36Changing(value As String)
    End Sub
    Partial Private Sub OnPB36Changed()
    End Sub
    Partial Private Sub OnRS36Changing(value As String)
    End Sub
    Partial Private Sub OnRS36Changed()
    End Sub
    Partial Private Sub OnDT36Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT36Changed()
    End Sub
    Partial Private Sub OnR_37Changing(value As String)
    End Sub
    Partial Private Sub OnR_37Changed()
    End Sub
    Partial Private Sub OnPB37Changing(value As String)
    End Sub
    Partial Private Sub OnPB37Changed()
    End Sub
    Partial Private Sub OnRS37Changing(value As String)
    End Sub
    Partial Private Sub OnRS37Changed()
    End Sub
    Partial Private Sub OnDT37Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT37Changed()
    End Sub
    Partial Private Sub OnR_38Changing(value As String)
    End Sub
    Partial Private Sub OnR_38Changed()
    End Sub
    Partial Private Sub OnPB38Changing(value As String)
    End Sub
    Partial Private Sub OnPB38Changed()
    End Sub
    Partial Private Sub OnRS38Changing(value As String)
    End Sub
    Partial Private Sub OnRS38Changed()
    End Sub
    Partial Private Sub OnDT38Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT38Changed()
    End Sub
    Partial Private Sub OnR_39Changing(value As String)
    End Sub
    Partial Private Sub OnR_39Changed()
    End Sub
    Partial Private Sub OnPB39Changing(value As String)
    End Sub
    Partial Private Sub OnPB39Changed()
    End Sub
    Partial Private Sub OnRS39Changing(value As String)
    End Sub
    Partial Private Sub OnRS39Changed()
    End Sub
    Partial Private Sub OnDT39Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT39Changed()
    End Sub
    Partial Private Sub OnR_40Changing(value As String)
    End Sub
    Partial Private Sub OnR_40Changed()
    End Sub
    Partial Private Sub OnPB40Changing(value As String)
    End Sub
    Partial Private Sub OnPB40Changed()
    End Sub
    Partial Private Sub OnRS40Changing(value As String)
    End Sub
    Partial Private Sub OnRS40Changed()
    End Sub
    Partial Private Sub OnDT40Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT40Changed()
    End Sub
    Partial Private Sub OnR_41Changing(value As String)
    End Sub
    Partial Private Sub OnR_41Changed()
    End Sub
    Partial Private Sub OnPB41Changing(value As String)
    End Sub
    Partial Private Sub OnPB41Changed()
    End Sub
    Partial Private Sub OnRS41Changing(value As String)
    End Sub
    Partial Private Sub OnRS41Changed()
    End Sub
    Partial Private Sub OnDT41Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDT41Changed()
    End Sub
    Partial Private Sub OnIPChanging(value As String)
    End Sub
    Partial Private Sub OnIPChanged()
    End Sub
    Partial Private Sub OnOPNO_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnOPNO_ADDChanged()
    End Sub
    Partial Private Sub OnDATE_ADDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_ADDChanged()
    End Sub
    Partial Private Sub OnOPNO_UPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnOPNO_UPDATEChanged()
    End Sub
    Partial Private Sub OnDATE_UPDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_UPDATEChanged()
    End Sub
    Partial Private Sub OnFLAGChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFLAGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO", DbType:="VarChar(10)")>  _
	Public Property MC_NO() As String
		Get
			Return Me._MC_NO
		End Get
		Set
			If (String.Equals(Me._MC_NO, value) = false) Then
				Me.OnMC_NOChanging(value)
				Me.SendPropertyChanging
				Me._MC_NO = value
				Me.SendPropertyChanged("MC_NO")
				Me.OnMC_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_1", DbType:="VarChar(10)")>  _
	Public Property R_1() As String
		Get
			Return Me._R_1
		End Get
		Set
			If (String.Equals(Me._R_1, value) = false) Then
				Me.OnR_1Changing(value)
				Me.SendPropertyChanging
				Me._R_1 = value
				Me.SendPropertyChanged("R_1")
				Me.OnR_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB1", DbType:="NVarChar(60)")>  _
	Public Property PB1() As String
		Get
			Return Me._PB1
		End Get
		Set
			If (String.Equals(Me._PB1, value) = false) Then
				Me.OnPB1Changing(value)
				Me.SendPropertyChanging
				Me._PB1 = value
				Me.SendPropertyChanged("PB1")
				Me.OnPB1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS1", DbType:="VarChar(60)")>  _
	Public Property RS1() As String
		Get
			Return Me._RS1
		End Get
		Set
			If (String.Equals(Me._RS1, value) = false) Then
				Me.OnRS1Changing(value)
				Me.SendPropertyChanging
				Me._RS1 = value
				Me.SendPropertyChanged("RS1")
				Me.OnRS1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT1", DbType:="DateTime")>  _
	Public Property DT1() As System.Nullable(Of Date)
		Get
			Return Me._DT1
		End Get
		Set
			If (Me._DT1.Equals(value) = false) Then
				Me.OnDT1Changing(value)
				Me.SendPropertyChanging
				Me._DT1 = value
				Me.SendPropertyChanged("DT1")
				Me.OnDT1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_2", DbType:="VarChar(10)")>  _
	Public Property R_2() As String
		Get
			Return Me._R_2
		End Get
		Set
			If (String.Equals(Me._R_2, value) = false) Then
				Me.OnR_2Changing(value)
				Me.SendPropertyChanging
				Me._R_2 = value
				Me.SendPropertyChanged("R_2")
				Me.OnR_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB2", DbType:="NVarChar(60)")>  _
	Public Property PB2() As String
		Get
			Return Me._PB2
		End Get
		Set
			If (String.Equals(Me._PB2, value) = false) Then
				Me.OnPB2Changing(value)
				Me.SendPropertyChanging
				Me._PB2 = value
				Me.SendPropertyChanged("PB2")
				Me.OnPB2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS2", DbType:="VarChar(60)")>  _
	Public Property RS2() As String
		Get
			Return Me._RS2
		End Get
		Set
			If (String.Equals(Me._RS2, value) = false) Then
				Me.OnRS2Changing(value)
				Me.SendPropertyChanging
				Me._RS2 = value
				Me.SendPropertyChanged("RS2")
				Me.OnRS2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT2", DbType:="DateTime")>  _
	Public Property DT2() As System.Nullable(Of Date)
		Get
			Return Me._DT2
		End Get
		Set
			If (Me._DT2.Equals(value) = false) Then
				Me.OnDT2Changing(value)
				Me.SendPropertyChanging
				Me._DT2 = value
				Me.SendPropertyChanged("DT2")
				Me.OnDT2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_3", DbType:="VarChar(10)")>  _
	Public Property R_3() As String
		Get
			Return Me._R_3
		End Get
		Set
			If (String.Equals(Me._R_3, value) = false) Then
				Me.OnR_3Changing(value)
				Me.SendPropertyChanging
				Me._R_3 = value
				Me.SendPropertyChanged("R_3")
				Me.OnR_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB3", DbType:="NVarChar(60)")>  _
	Public Property PB3() As String
		Get
			Return Me._PB3
		End Get
		Set
			If (String.Equals(Me._PB3, value) = false) Then
				Me.OnPB3Changing(value)
				Me.SendPropertyChanging
				Me._PB3 = value
				Me.SendPropertyChanged("PB3")
				Me.OnPB3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS3", DbType:="VarChar(60)")>  _
	Public Property RS3() As String
		Get
			Return Me._RS3
		End Get
		Set
			If (String.Equals(Me._RS3, value) = false) Then
				Me.OnRS3Changing(value)
				Me.SendPropertyChanging
				Me._RS3 = value
				Me.SendPropertyChanged("RS3")
				Me.OnRS3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT3", DbType:="DateTime")>  _
	Public Property DT3() As System.Nullable(Of Date)
		Get
			Return Me._DT3
		End Get
		Set
			If (Me._DT3.Equals(value) = false) Then
				Me.OnDT3Changing(value)
				Me.SendPropertyChanging
				Me._DT3 = value
				Me.SendPropertyChanged("DT3")
				Me.OnDT3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_4", DbType:="VarChar(10)")>  _
	Public Property R_4() As String
		Get
			Return Me._R_4
		End Get
		Set
			If (String.Equals(Me._R_4, value) = false) Then
				Me.OnR_4Changing(value)
				Me.SendPropertyChanging
				Me._R_4 = value
				Me.SendPropertyChanged("R_4")
				Me.OnR_4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB4", DbType:="NVarChar(60)")>  _
	Public Property PB4() As String
		Get
			Return Me._PB4
		End Get
		Set
			If (String.Equals(Me._PB4, value) = false) Then
				Me.OnPB4Changing(value)
				Me.SendPropertyChanging
				Me._PB4 = value
				Me.SendPropertyChanged("PB4")
				Me.OnPB4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS4", DbType:="VarChar(60)")>  _
	Public Property RS4() As String
		Get
			Return Me._RS4
		End Get
		Set
			If (String.Equals(Me._RS4, value) = false) Then
				Me.OnRS4Changing(value)
				Me.SendPropertyChanging
				Me._RS4 = value
				Me.SendPropertyChanged("RS4")
				Me.OnRS4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT4", DbType:="DateTime")>  _
	Public Property DT4() As System.Nullable(Of Date)
		Get
			Return Me._DT4
		End Get
		Set
			If (Me._DT4.Equals(value) = false) Then
				Me.OnDT4Changing(value)
				Me.SendPropertyChanging
				Me._DT4 = value
				Me.SendPropertyChanged("DT4")
				Me.OnDT4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_5", DbType:="VarChar(10)")>  _
	Public Property R_5() As String
		Get
			Return Me._R_5
		End Get
		Set
			If (String.Equals(Me._R_5, value) = false) Then
				Me.OnR_5Changing(value)
				Me.SendPropertyChanging
				Me._R_5 = value
				Me.SendPropertyChanged("R_5")
				Me.OnR_5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB5", DbType:="NVarChar(60)")>  _
	Public Property PB5() As String
		Get
			Return Me._PB5
		End Get
		Set
			If (String.Equals(Me._PB5, value) = false) Then
				Me.OnPB5Changing(value)
				Me.SendPropertyChanging
				Me._PB5 = value
				Me.SendPropertyChanged("PB5")
				Me.OnPB5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS5", DbType:="VarChar(60)")>  _
	Public Property RS5() As String
		Get
			Return Me._RS5
		End Get
		Set
			If (String.Equals(Me._RS5, value) = false) Then
				Me.OnRS5Changing(value)
				Me.SendPropertyChanging
				Me._RS5 = value
				Me.SendPropertyChanged("RS5")
				Me.OnRS5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT5", DbType:="DateTime")>  _
	Public Property DT5() As System.Nullable(Of Date)
		Get
			Return Me._DT5
		End Get
		Set
			If (Me._DT5.Equals(value) = false) Then
				Me.OnDT5Changing(value)
				Me.SendPropertyChanging
				Me._DT5 = value
				Me.SendPropertyChanged("DT5")
				Me.OnDT5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_6", DbType:="VarChar(10)")>  _
	Public Property R_6() As String
		Get
			Return Me._R_6
		End Get
		Set
			If (String.Equals(Me._R_6, value) = false) Then
				Me.OnR_6Changing(value)
				Me.SendPropertyChanging
				Me._R_6 = value
				Me.SendPropertyChanged("R_6")
				Me.OnR_6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB6", DbType:="NVarChar(60)")>  _
	Public Property PB6() As String
		Get
			Return Me._PB6
		End Get
		Set
			If (String.Equals(Me._PB6, value) = false) Then
				Me.OnPB6Changing(value)
				Me.SendPropertyChanging
				Me._PB6 = value
				Me.SendPropertyChanged("PB6")
				Me.OnPB6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS6", DbType:="VarChar(60)")>  _
	Public Property RS6() As String
		Get
			Return Me._RS6
		End Get
		Set
			If (String.Equals(Me._RS6, value) = false) Then
				Me.OnRS6Changing(value)
				Me.SendPropertyChanging
				Me._RS6 = value
				Me.SendPropertyChanged("RS6")
				Me.OnRS6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT6", DbType:="DateTime")>  _
	Public Property DT6() As System.Nullable(Of Date)
		Get
			Return Me._DT6
		End Get
		Set
			If (Me._DT6.Equals(value) = false) Then
				Me.OnDT6Changing(value)
				Me.SendPropertyChanging
				Me._DT6 = value
				Me.SendPropertyChanged("DT6")
				Me.OnDT6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_7", DbType:="VarChar(10)")>  _
	Public Property R_7() As String
		Get
			Return Me._R_7
		End Get
		Set
			If (String.Equals(Me._R_7, value) = false) Then
				Me.OnR_7Changing(value)
				Me.SendPropertyChanging
				Me._R_7 = value
				Me.SendPropertyChanged("R_7")
				Me.OnR_7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB7", DbType:="NVarChar(60)")>  _
	Public Property PB7() As String
		Get
			Return Me._PB7
		End Get
		Set
			If (String.Equals(Me._PB7, value) = false) Then
				Me.OnPB7Changing(value)
				Me.SendPropertyChanging
				Me._PB7 = value
				Me.SendPropertyChanged("PB7")
				Me.OnPB7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS7", DbType:="VarChar(60)")>  _
	Public Property RS7() As String
		Get
			Return Me._RS7
		End Get
		Set
			If (String.Equals(Me._RS7, value) = false) Then
				Me.OnRS7Changing(value)
				Me.SendPropertyChanging
				Me._RS7 = value
				Me.SendPropertyChanged("RS7")
				Me.OnRS7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT7", DbType:="DateTime")>  _
	Public Property DT7() As System.Nullable(Of Date)
		Get
			Return Me._DT7
		End Get
		Set
			If (Me._DT7.Equals(value) = false) Then
				Me.OnDT7Changing(value)
				Me.SendPropertyChanging
				Me._DT7 = value
				Me.SendPropertyChanged("DT7")
				Me.OnDT7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_8", DbType:="VarChar(10)")>  _
	Public Property R_8() As String
		Get
			Return Me._R_8
		End Get
		Set
			If (String.Equals(Me._R_8, value) = false) Then
				Me.OnR_8Changing(value)
				Me.SendPropertyChanging
				Me._R_8 = value
				Me.SendPropertyChanged("R_8")
				Me.OnR_8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB8", DbType:="NVarChar(60)")>  _
	Public Property PB8() As String
		Get
			Return Me._PB8
		End Get
		Set
			If (String.Equals(Me._PB8, value) = false) Then
				Me.OnPB8Changing(value)
				Me.SendPropertyChanging
				Me._PB8 = value
				Me.SendPropertyChanged("PB8")
				Me.OnPB8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS8", DbType:="VarChar(60)")>  _
	Public Property RS8() As String
		Get
			Return Me._RS8
		End Get
		Set
			If (String.Equals(Me._RS8, value) = false) Then
				Me.OnRS8Changing(value)
				Me.SendPropertyChanging
				Me._RS8 = value
				Me.SendPropertyChanged("RS8")
				Me.OnRS8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT8", DbType:="DateTime")>  _
	Public Property DT8() As System.Nullable(Of Date)
		Get
			Return Me._DT8
		End Get
		Set
			If (Me._DT8.Equals(value) = false) Then
				Me.OnDT8Changing(value)
				Me.SendPropertyChanging
				Me._DT8 = value
				Me.SendPropertyChanged("DT8")
				Me.OnDT8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_9", DbType:="VarChar(10)")>  _
	Public Property R_9() As String
		Get
			Return Me._R_9
		End Get
		Set
			If (String.Equals(Me._R_9, value) = false) Then
				Me.OnR_9Changing(value)
				Me.SendPropertyChanging
				Me._R_9 = value
				Me.SendPropertyChanged("R_9")
				Me.OnR_9Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB9", DbType:="NVarChar(60)")>  _
	Public Property PB9() As String
		Get
			Return Me._PB9
		End Get
		Set
			If (String.Equals(Me._PB9, value) = false) Then
				Me.OnPB9Changing(value)
				Me.SendPropertyChanging
				Me._PB9 = value
				Me.SendPropertyChanged("PB9")
				Me.OnPB9Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS9", DbType:="VarChar(60)")>  _
	Public Property RS9() As String
		Get
			Return Me._RS9
		End Get
		Set
			If (String.Equals(Me._RS9, value) = false) Then
				Me.OnRS9Changing(value)
				Me.SendPropertyChanging
				Me._RS9 = value
				Me.SendPropertyChanged("RS9")
				Me.OnRS9Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT9", DbType:="DateTime")>  _
	Public Property DT9() As System.Nullable(Of Date)
		Get
			Return Me._DT9
		End Get
		Set
			If (Me._DT9.Equals(value) = false) Then
				Me.OnDT9Changing(value)
				Me.SendPropertyChanging
				Me._DT9 = value
				Me.SendPropertyChanged("DT9")
				Me.OnDT9Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_10", DbType:="VarChar(10)")>  _
	Public Property R_10() As String
		Get
			Return Me._R_10
		End Get
		Set
			If (String.Equals(Me._R_10, value) = false) Then
				Me.OnR_10Changing(value)
				Me.SendPropertyChanging
				Me._R_10 = value
				Me.SendPropertyChanged("R_10")
				Me.OnR_10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB10", DbType:="NVarChar(60)")>  _
	Public Property PB10() As String
		Get
			Return Me._PB10
		End Get
		Set
			If (String.Equals(Me._PB10, value) = false) Then
				Me.OnPB10Changing(value)
				Me.SendPropertyChanging
				Me._PB10 = value
				Me.SendPropertyChanged("PB10")
				Me.OnPB10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS10", DbType:="VarChar(60)")>  _
	Public Property RS10() As String
		Get
			Return Me._RS10
		End Get
		Set
			If (String.Equals(Me._RS10, value) = false) Then
				Me.OnRS10Changing(value)
				Me.SendPropertyChanging
				Me._RS10 = value
				Me.SendPropertyChanged("RS10")
				Me.OnRS10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT10", DbType:="DateTime")>  _
	Public Property DT10() As System.Nullable(Of Date)
		Get
			Return Me._DT10
		End Get
		Set
			If (Me._DT10.Equals(value) = false) Then
				Me.OnDT10Changing(value)
				Me.SendPropertyChanging
				Me._DT10 = value
				Me.SendPropertyChanged("DT10")
				Me.OnDT10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_11", DbType:="VarChar(10)")>  _
	Public Property R_11() As String
		Get
			Return Me._R_11
		End Get
		Set
			If (String.Equals(Me._R_11, value) = false) Then
				Me.OnR_11Changing(value)
				Me.SendPropertyChanging
				Me._R_11 = value
				Me.SendPropertyChanged("R_11")
				Me.OnR_11Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB11", DbType:="NVarChar(60)")>  _
	Public Property PB11() As String
		Get
			Return Me._PB11
		End Get
		Set
			If (String.Equals(Me._PB11, value) = false) Then
				Me.OnPB11Changing(value)
				Me.SendPropertyChanging
				Me._PB11 = value
				Me.SendPropertyChanged("PB11")
				Me.OnPB11Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS11", DbType:="VarChar(60)")>  _
	Public Property RS11() As String
		Get
			Return Me._RS11
		End Get
		Set
			If (String.Equals(Me._RS11, value) = false) Then
				Me.OnRS11Changing(value)
				Me.SendPropertyChanging
				Me._RS11 = value
				Me.SendPropertyChanged("RS11")
				Me.OnRS11Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT11", DbType:="DateTime")>  _
	Public Property DT11() As System.Nullable(Of Date)
		Get
			Return Me._DT11
		End Get
		Set
			If (Me._DT11.Equals(value) = false) Then
				Me.OnDT11Changing(value)
				Me.SendPropertyChanging
				Me._DT11 = value
				Me.SendPropertyChanged("DT11")
				Me.OnDT11Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_12", DbType:="VarChar(10)")>  _
	Public Property R_12() As String
		Get
			Return Me._R_12
		End Get
		Set
			If (String.Equals(Me._R_12, value) = false) Then
				Me.OnR_12Changing(value)
				Me.SendPropertyChanging
				Me._R_12 = value
				Me.SendPropertyChanged("R_12")
				Me.OnR_12Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB12", DbType:="NVarChar(60)")>  _
	Public Property PB12() As String
		Get
			Return Me._PB12
		End Get
		Set
			If (String.Equals(Me._PB12, value) = false) Then
				Me.OnPB12Changing(value)
				Me.SendPropertyChanging
				Me._PB12 = value
				Me.SendPropertyChanged("PB12")
				Me.OnPB12Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS12", DbType:="VarChar(60)")>  _
	Public Property RS12() As String
		Get
			Return Me._RS12
		End Get
		Set
			If (String.Equals(Me._RS12, value) = false) Then
				Me.OnRS12Changing(value)
				Me.SendPropertyChanging
				Me._RS12 = value
				Me.SendPropertyChanged("RS12")
				Me.OnRS12Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT12", DbType:="DateTime")>  _
	Public Property DT12() As System.Nullable(Of Date)
		Get
			Return Me._DT12
		End Get
		Set
			If (Me._DT12.Equals(value) = false) Then
				Me.OnDT12Changing(value)
				Me.SendPropertyChanging
				Me._DT12 = value
				Me.SendPropertyChanged("DT12")
				Me.OnDT12Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_13", DbType:="VarChar(10)")>  _
	Public Property R_13() As String
		Get
			Return Me._R_13
		End Get
		Set
			If (String.Equals(Me._R_13, value) = false) Then
				Me.OnR_13Changing(value)
				Me.SendPropertyChanging
				Me._R_13 = value
				Me.SendPropertyChanged("R_13")
				Me.OnR_13Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB13", DbType:="NVarChar(60)")>  _
	Public Property PB13() As String
		Get
			Return Me._PB13
		End Get
		Set
			If (String.Equals(Me._PB13, value) = false) Then
				Me.OnPB13Changing(value)
				Me.SendPropertyChanging
				Me._PB13 = value
				Me.SendPropertyChanged("PB13")
				Me.OnPB13Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS13", DbType:="VarChar(60)")>  _
	Public Property RS13() As String
		Get
			Return Me._RS13
		End Get
		Set
			If (String.Equals(Me._RS13, value) = false) Then
				Me.OnRS13Changing(value)
				Me.SendPropertyChanging
				Me._RS13 = value
				Me.SendPropertyChanged("RS13")
				Me.OnRS13Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT13", DbType:="DateTime")>  _
	Public Property DT13() As System.Nullable(Of Date)
		Get
			Return Me._DT13
		End Get
		Set
			If (Me._DT13.Equals(value) = false) Then
				Me.OnDT13Changing(value)
				Me.SendPropertyChanging
				Me._DT13 = value
				Me.SendPropertyChanged("DT13")
				Me.OnDT13Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_14", DbType:="VarChar(10)")>  _
	Public Property R_14() As String
		Get
			Return Me._R_14
		End Get
		Set
			If (String.Equals(Me._R_14, value) = false) Then
				Me.OnR_14Changing(value)
				Me.SendPropertyChanging
				Me._R_14 = value
				Me.SendPropertyChanged("R_14")
				Me.OnR_14Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB14", DbType:="NVarChar(60)")>  _
	Public Property PB14() As String
		Get
			Return Me._PB14
		End Get
		Set
			If (String.Equals(Me._PB14, value) = false) Then
				Me.OnPB14Changing(value)
				Me.SendPropertyChanging
				Me._PB14 = value
				Me.SendPropertyChanged("PB14")
				Me.OnPB14Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS14", DbType:="VarChar(60)")>  _
	Public Property RS14() As String
		Get
			Return Me._RS14
		End Get
		Set
			If (String.Equals(Me._RS14, value) = false) Then
				Me.OnRS14Changing(value)
				Me.SendPropertyChanging
				Me._RS14 = value
				Me.SendPropertyChanged("RS14")
				Me.OnRS14Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT14", DbType:="DateTime")>  _
	Public Property DT14() As System.Nullable(Of Date)
		Get
			Return Me._DT14
		End Get
		Set
			If (Me._DT14.Equals(value) = false) Then
				Me.OnDT14Changing(value)
				Me.SendPropertyChanging
				Me._DT14 = value
				Me.SendPropertyChanged("DT14")
				Me.OnDT14Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_15", DbType:="VarChar(10)")>  _
	Public Property R_15() As String
		Get
			Return Me._R_15
		End Get
		Set
			If (String.Equals(Me._R_15, value) = false) Then
				Me.OnR_15Changing(value)
				Me.SendPropertyChanging
				Me._R_15 = value
				Me.SendPropertyChanged("R_15")
				Me.OnR_15Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB15", DbType:="NVarChar(60)")>  _
	Public Property PB15() As String
		Get
			Return Me._PB15
		End Get
		Set
			If (String.Equals(Me._PB15, value) = false) Then
				Me.OnPB15Changing(value)
				Me.SendPropertyChanging
				Me._PB15 = value
				Me.SendPropertyChanged("PB15")
				Me.OnPB15Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS15", DbType:="VarChar(60)")>  _
	Public Property RS15() As String
		Get
			Return Me._RS15
		End Get
		Set
			If (String.Equals(Me._RS15, value) = false) Then
				Me.OnRS15Changing(value)
				Me.SendPropertyChanging
				Me._RS15 = value
				Me.SendPropertyChanged("RS15")
				Me.OnRS15Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT15", DbType:="DateTime")>  _
	Public Property DT15() As System.Nullable(Of Date)
		Get
			Return Me._DT15
		End Get
		Set
			If (Me._DT15.Equals(value) = false) Then
				Me.OnDT15Changing(value)
				Me.SendPropertyChanging
				Me._DT15 = value
				Me.SendPropertyChanged("DT15")
				Me.OnDT15Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_16", DbType:="VarChar(10)")>  _
	Public Property R_16() As String
		Get
			Return Me._R_16
		End Get
		Set
			If (String.Equals(Me._R_16, value) = false) Then
				Me.OnR_16Changing(value)
				Me.SendPropertyChanging
				Me._R_16 = value
				Me.SendPropertyChanged("R_16")
				Me.OnR_16Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB16", DbType:="NVarChar(60)")>  _
	Public Property PB16() As String
		Get
			Return Me._PB16
		End Get
		Set
			If (String.Equals(Me._PB16, value) = false) Then
				Me.OnPB16Changing(value)
				Me.SendPropertyChanging
				Me._PB16 = value
				Me.SendPropertyChanged("PB16")
				Me.OnPB16Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS16", DbType:="VarChar(60)")>  _
	Public Property RS16() As String
		Get
			Return Me._RS16
		End Get
		Set
			If (String.Equals(Me._RS16, value) = false) Then
				Me.OnRS16Changing(value)
				Me.SendPropertyChanging
				Me._RS16 = value
				Me.SendPropertyChanged("RS16")
				Me.OnRS16Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT16", DbType:="DateTime")>  _
	Public Property DT16() As System.Nullable(Of Date)
		Get
			Return Me._DT16
		End Get
		Set
			If (Me._DT16.Equals(value) = false) Then
				Me.OnDT16Changing(value)
				Me.SendPropertyChanging
				Me._DT16 = value
				Me.SendPropertyChanged("DT16")
				Me.OnDT16Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_17", DbType:="VarChar(10)")>  _
	Public Property R_17() As String
		Get
			Return Me._R_17
		End Get
		Set
			If (String.Equals(Me._R_17, value) = false) Then
				Me.OnR_17Changing(value)
				Me.SendPropertyChanging
				Me._R_17 = value
				Me.SendPropertyChanged("R_17")
				Me.OnR_17Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB17", DbType:="NVarChar(60)")>  _
	Public Property PB17() As String
		Get
			Return Me._PB17
		End Get
		Set
			If (String.Equals(Me._PB17, value) = false) Then
				Me.OnPB17Changing(value)
				Me.SendPropertyChanging
				Me._PB17 = value
				Me.SendPropertyChanged("PB17")
				Me.OnPB17Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS17", DbType:="VarChar(60)")>  _
	Public Property RS17() As String
		Get
			Return Me._RS17
		End Get
		Set
			If (String.Equals(Me._RS17, value) = false) Then
				Me.OnRS17Changing(value)
				Me.SendPropertyChanging
				Me._RS17 = value
				Me.SendPropertyChanged("RS17")
				Me.OnRS17Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT17", DbType:="DateTime")>  _
	Public Property DT17() As System.Nullable(Of Date)
		Get
			Return Me._DT17
		End Get
		Set
			If (Me._DT17.Equals(value) = false) Then
				Me.OnDT17Changing(value)
				Me.SendPropertyChanging
				Me._DT17 = value
				Me.SendPropertyChanged("DT17")
				Me.OnDT17Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_18", DbType:="VarChar(10)")>  _
	Public Property R_18() As String
		Get
			Return Me._R_18
		End Get
		Set
			If (String.Equals(Me._R_18, value) = false) Then
				Me.OnR_18Changing(value)
				Me.SendPropertyChanging
				Me._R_18 = value
				Me.SendPropertyChanged("R_18")
				Me.OnR_18Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB18", DbType:="NVarChar(60)")>  _
	Public Property PB18() As String
		Get
			Return Me._PB18
		End Get
		Set
			If (String.Equals(Me._PB18, value) = false) Then
				Me.OnPB18Changing(value)
				Me.SendPropertyChanging
				Me._PB18 = value
				Me.SendPropertyChanged("PB18")
				Me.OnPB18Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS18", DbType:="VarChar(60)")>  _
	Public Property RS18() As String
		Get
			Return Me._RS18
		End Get
		Set
			If (String.Equals(Me._RS18, value) = false) Then
				Me.OnRS18Changing(value)
				Me.SendPropertyChanging
				Me._RS18 = value
				Me.SendPropertyChanged("RS18")
				Me.OnRS18Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT18", DbType:="DateTime")>  _
	Public Property DT18() As System.Nullable(Of Date)
		Get
			Return Me._DT18
		End Get
		Set
			If (Me._DT18.Equals(value) = false) Then
				Me.OnDT18Changing(value)
				Me.SendPropertyChanging
				Me._DT18 = value
				Me.SendPropertyChanged("DT18")
				Me.OnDT18Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_19", DbType:="VarChar(10)")>  _
	Public Property R_19() As String
		Get
			Return Me._R_19
		End Get
		Set
			If (String.Equals(Me._R_19, value) = false) Then
				Me.OnR_19Changing(value)
				Me.SendPropertyChanging
				Me._R_19 = value
				Me.SendPropertyChanged("R_19")
				Me.OnR_19Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB19", DbType:="NVarChar(60)")>  _
	Public Property PB19() As String
		Get
			Return Me._PB19
		End Get
		Set
			If (String.Equals(Me._PB19, value) = false) Then
				Me.OnPB19Changing(value)
				Me.SendPropertyChanging
				Me._PB19 = value
				Me.SendPropertyChanged("PB19")
				Me.OnPB19Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS19", DbType:="VarChar(60)")>  _
	Public Property RS19() As String
		Get
			Return Me._RS19
		End Get
		Set
			If (String.Equals(Me._RS19, value) = false) Then
				Me.OnRS19Changing(value)
				Me.SendPropertyChanging
				Me._RS19 = value
				Me.SendPropertyChanged("RS19")
				Me.OnRS19Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT19", DbType:="DateTime")>  _
	Public Property DT19() As System.Nullable(Of Date)
		Get
			Return Me._DT19
		End Get
		Set
			If (Me._DT19.Equals(value) = false) Then
				Me.OnDT19Changing(value)
				Me.SendPropertyChanging
				Me._DT19 = value
				Me.SendPropertyChanged("DT19")
				Me.OnDT19Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_20", DbType:="VarChar(10)")>  _
	Public Property R_20() As String
		Get
			Return Me._R_20
		End Get
		Set
			If (String.Equals(Me._R_20, value) = false) Then
				Me.OnR_20Changing(value)
				Me.SendPropertyChanging
				Me._R_20 = value
				Me.SendPropertyChanged("R_20")
				Me.OnR_20Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB20", DbType:="NVarChar(60)")>  _
	Public Property PB20() As String
		Get
			Return Me._PB20
		End Get
		Set
			If (String.Equals(Me._PB20, value) = false) Then
				Me.OnPB20Changing(value)
				Me.SendPropertyChanging
				Me._PB20 = value
				Me.SendPropertyChanged("PB20")
				Me.OnPB20Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS20", DbType:="VarChar(60)")>  _
	Public Property RS20() As String
		Get
			Return Me._RS20
		End Get
		Set
			If (String.Equals(Me._RS20, value) = false) Then
				Me.OnRS20Changing(value)
				Me.SendPropertyChanging
				Me._RS20 = value
				Me.SendPropertyChanged("RS20")
				Me.OnRS20Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT20", DbType:="DateTime")>  _
	Public Property DT20() As System.Nullable(Of Date)
		Get
			Return Me._DT20
		End Get
		Set
			If (Me._DT20.Equals(value) = false) Then
				Me.OnDT20Changing(value)
				Me.SendPropertyChanging
				Me._DT20 = value
				Me.SendPropertyChanged("DT20")
				Me.OnDT20Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_21", DbType:="VarChar(10)")>  _
	Public Property R_21() As String
		Get
			Return Me._R_21
		End Get
		Set
			If (String.Equals(Me._R_21, value) = false) Then
				Me.OnR_21Changing(value)
				Me.SendPropertyChanging
				Me._R_21 = value
				Me.SendPropertyChanged("R_21")
				Me.OnR_21Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB21", DbType:="NVarChar(60)")>  _
	Public Property PB21() As String
		Get
			Return Me._PB21
		End Get
		Set
			If (String.Equals(Me._PB21, value) = false) Then
				Me.OnPB21Changing(value)
				Me.SendPropertyChanging
				Me._PB21 = value
				Me.SendPropertyChanged("PB21")
				Me.OnPB21Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS21", DbType:="VarChar(60)")>  _
	Public Property RS21() As String
		Get
			Return Me._RS21
		End Get
		Set
			If (String.Equals(Me._RS21, value) = false) Then
				Me.OnRS21Changing(value)
				Me.SendPropertyChanging
				Me._RS21 = value
				Me.SendPropertyChanged("RS21")
				Me.OnRS21Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT21", DbType:="DateTime")>  _
	Public Property DT21() As System.Nullable(Of Date)
		Get
			Return Me._DT21
		End Get
		Set
			If (Me._DT21.Equals(value) = false) Then
				Me.OnDT21Changing(value)
				Me.SendPropertyChanging
				Me._DT21 = value
				Me.SendPropertyChanged("DT21")
				Me.OnDT21Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_22", DbType:="VarChar(10)")>  _
	Public Property R_22() As String
		Get
			Return Me._R_22
		End Get
		Set
			If (String.Equals(Me._R_22, value) = false) Then
				Me.OnR_22Changing(value)
				Me.SendPropertyChanging
				Me._R_22 = value
				Me.SendPropertyChanged("R_22")
				Me.OnR_22Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB22", DbType:="NVarChar(60)")>  _
	Public Property PB22() As String
		Get
			Return Me._PB22
		End Get
		Set
			If (String.Equals(Me._PB22, value) = false) Then
				Me.OnPB22Changing(value)
				Me.SendPropertyChanging
				Me._PB22 = value
				Me.SendPropertyChanged("PB22")
				Me.OnPB22Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS22", DbType:="VarChar(60)")>  _
	Public Property RS22() As String
		Get
			Return Me._RS22
		End Get
		Set
			If (String.Equals(Me._RS22, value) = false) Then
				Me.OnRS22Changing(value)
				Me.SendPropertyChanging
				Me._RS22 = value
				Me.SendPropertyChanged("RS22")
				Me.OnRS22Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT22", DbType:="DateTime")>  _
	Public Property DT22() As System.Nullable(Of Date)
		Get
			Return Me._DT22
		End Get
		Set
			If (Me._DT22.Equals(value) = false) Then
				Me.OnDT22Changing(value)
				Me.SendPropertyChanging
				Me._DT22 = value
				Me.SendPropertyChanged("DT22")
				Me.OnDT22Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_23", DbType:="VarChar(10)")>  _
	Public Property R_23() As String
		Get
			Return Me._R_23
		End Get
		Set
			If (String.Equals(Me._R_23, value) = false) Then
				Me.OnR_23Changing(value)
				Me.SendPropertyChanging
				Me._R_23 = value
				Me.SendPropertyChanged("R_23")
				Me.OnR_23Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB23", DbType:="NVarChar(60)")>  _
	Public Property PB23() As String
		Get
			Return Me._PB23
		End Get
		Set
			If (String.Equals(Me._PB23, value) = false) Then
				Me.OnPB23Changing(value)
				Me.SendPropertyChanging
				Me._PB23 = value
				Me.SendPropertyChanged("PB23")
				Me.OnPB23Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS23", DbType:="VarChar(60)")>  _
	Public Property RS23() As String
		Get
			Return Me._RS23
		End Get
		Set
			If (String.Equals(Me._RS23, value) = false) Then
				Me.OnRS23Changing(value)
				Me.SendPropertyChanging
				Me._RS23 = value
				Me.SendPropertyChanged("RS23")
				Me.OnRS23Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT23", DbType:="DateTime")>  _
	Public Property DT23() As System.Nullable(Of Date)
		Get
			Return Me._DT23
		End Get
		Set
			If (Me._DT23.Equals(value) = false) Then
				Me.OnDT23Changing(value)
				Me.SendPropertyChanging
				Me._DT23 = value
				Me.SendPropertyChanged("DT23")
				Me.OnDT23Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_24", DbType:="VarChar(10)")>  _
	Public Property R_24() As String
		Get
			Return Me._R_24
		End Get
		Set
			If (String.Equals(Me._R_24, value) = false) Then
				Me.OnR_24Changing(value)
				Me.SendPropertyChanging
				Me._R_24 = value
				Me.SendPropertyChanged("R_24")
				Me.OnR_24Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB24", DbType:="NVarChar(60)")>  _
	Public Property PB24() As String
		Get
			Return Me._PB24
		End Get
		Set
			If (String.Equals(Me._PB24, value) = false) Then
				Me.OnPB24Changing(value)
				Me.SendPropertyChanging
				Me._PB24 = value
				Me.SendPropertyChanged("PB24")
				Me.OnPB24Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS24", DbType:="VarChar(60)")>  _
	Public Property RS24() As String
		Get
			Return Me._RS24
		End Get
		Set
			If (String.Equals(Me._RS24, value) = false) Then
				Me.OnRS24Changing(value)
				Me.SendPropertyChanging
				Me._RS24 = value
				Me.SendPropertyChanged("RS24")
				Me.OnRS24Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT24", DbType:="DateTime")>  _
	Public Property DT24() As System.Nullable(Of Date)
		Get
			Return Me._DT24
		End Get
		Set
			If (Me._DT24.Equals(value) = false) Then
				Me.OnDT24Changing(value)
				Me.SendPropertyChanging
				Me._DT24 = value
				Me.SendPropertyChanged("DT24")
				Me.OnDT24Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_25", DbType:="VarChar(10)")>  _
	Public Property R_25() As String
		Get
			Return Me._R_25
		End Get
		Set
			If (String.Equals(Me._R_25, value) = false) Then
				Me.OnR_25Changing(value)
				Me.SendPropertyChanging
				Me._R_25 = value
				Me.SendPropertyChanged("R_25")
				Me.OnR_25Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB25", DbType:="NVarChar(60)")>  _
	Public Property PB25() As String
		Get
			Return Me._PB25
		End Get
		Set
			If (String.Equals(Me._PB25, value) = false) Then
				Me.OnPB25Changing(value)
				Me.SendPropertyChanging
				Me._PB25 = value
				Me.SendPropertyChanged("PB25")
				Me.OnPB25Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS25", DbType:="VarChar(60)")>  _
	Public Property RS25() As String
		Get
			Return Me._RS25
		End Get
		Set
			If (String.Equals(Me._RS25, value) = false) Then
				Me.OnRS25Changing(value)
				Me.SendPropertyChanging
				Me._RS25 = value
				Me.SendPropertyChanged("RS25")
				Me.OnRS25Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT25", DbType:="DateTime")>  _
	Public Property DT25() As System.Nullable(Of Date)
		Get
			Return Me._DT25
		End Get
		Set
			If (Me._DT25.Equals(value) = false) Then
				Me.OnDT25Changing(value)
				Me.SendPropertyChanging
				Me._DT25 = value
				Me.SendPropertyChanged("DT25")
				Me.OnDT25Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_26", DbType:="VarChar(10)")>  _
	Public Property R_26() As String
		Get
			Return Me._R_26
		End Get
		Set
			If (String.Equals(Me._R_26, value) = false) Then
				Me.OnR_26Changing(value)
				Me.SendPropertyChanging
				Me._R_26 = value
				Me.SendPropertyChanged("R_26")
				Me.OnR_26Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB26", DbType:="NVarChar(60)")>  _
	Public Property PB26() As String
		Get
			Return Me._PB26
		End Get
		Set
			If (String.Equals(Me._PB26, value) = false) Then
				Me.OnPB26Changing(value)
				Me.SendPropertyChanging
				Me._PB26 = value
				Me.SendPropertyChanged("PB26")
				Me.OnPB26Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS26", DbType:="VarChar(60)")>  _
	Public Property RS26() As String
		Get
			Return Me._RS26
		End Get
		Set
			If (String.Equals(Me._RS26, value) = false) Then
				Me.OnRS26Changing(value)
				Me.SendPropertyChanging
				Me._RS26 = value
				Me.SendPropertyChanged("RS26")
				Me.OnRS26Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT26", DbType:="DateTime")>  _
	Public Property DT26() As System.Nullable(Of Date)
		Get
			Return Me._DT26
		End Get
		Set
			If (Me._DT26.Equals(value) = false) Then
				Me.OnDT26Changing(value)
				Me.SendPropertyChanging
				Me._DT26 = value
				Me.SendPropertyChanged("DT26")
				Me.OnDT26Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_27", DbType:="VarChar(10)")>  _
	Public Property R_27() As String
		Get
			Return Me._R_27
		End Get
		Set
			If (String.Equals(Me._R_27, value) = false) Then
				Me.OnR_27Changing(value)
				Me.SendPropertyChanging
				Me._R_27 = value
				Me.SendPropertyChanged("R_27")
				Me.OnR_27Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB27", DbType:="NVarChar(60)")>  _
	Public Property PB27() As String
		Get
			Return Me._PB27
		End Get
		Set
			If (String.Equals(Me._PB27, value) = false) Then
				Me.OnPB27Changing(value)
				Me.SendPropertyChanging
				Me._PB27 = value
				Me.SendPropertyChanged("PB27")
				Me.OnPB27Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS27", DbType:="VarChar(60)")>  _
	Public Property RS27() As String
		Get
			Return Me._RS27
		End Get
		Set
			If (String.Equals(Me._RS27, value) = false) Then
				Me.OnRS27Changing(value)
				Me.SendPropertyChanging
				Me._RS27 = value
				Me.SendPropertyChanged("RS27")
				Me.OnRS27Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT27", DbType:="DateTime")>  _
	Public Property DT27() As System.Nullable(Of Date)
		Get
			Return Me._DT27
		End Get
		Set
			If (Me._DT27.Equals(value) = false) Then
				Me.OnDT27Changing(value)
				Me.SendPropertyChanging
				Me._DT27 = value
				Me.SendPropertyChanged("DT27")
				Me.OnDT27Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_28", DbType:="VarChar(10)")>  _
	Public Property R_28() As String
		Get
			Return Me._R_28
		End Get
		Set
			If (String.Equals(Me._R_28, value) = false) Then
				Me.OnR_28Changing(value)
				Me.SendPropertyChanging
				Me._R_28 = value
				Me.SendPropertyChanged("R_28")
				Me.OnR_28Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB28", DbType:="NVarChar(60)")>  _
	Public Property PB28() As String
		Get
			Return Me._PB28
		End Get
		Set
			If (String.Equals(Me._PB28, value) = false) Then
				Me.OnPB28Changing(value)
				Me.SendPropertyChanging
				Me._PB28 = value
				Me.SendPropertyChanged("PB28")
				Me.OnPB28Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS28", DbType:="VarChar(60)")>  _
	Public Property RS28() As String
		Get
			Return Me._RS28
		End Get
		Set
			If (String.Equals(Me._RS28, value) = false) Then
				Me.OnRS28Changing(value)
				Me.SendPropertyChanging
				Me._RS28 = value
				Me.SendPropertyChanged("RS28")
				Me.OnRS28Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT28", DbType:="DateTime")>  _
	Public Property DT28() As System.Nullable(Of Date)
		Get
			Return Me._DT28
		End Get
		Set
			If (Me._DT28.Equals(value) = false) Then
				Me.OnDT28Changing(value)
				Me.SendPropertyChanging
				Me._DT28 = value
				Me.SendPropertyChanged("DT28")
				Me.OnDT28Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_29", DbType:="VarChar(10)")>  _
	Public Property R_29() As String
		Get
			Return Me._R_29
		End Get
		Set
			If (String.Equals(Me._R_29, value) = false) Then
				Me.OnR_29Changing(value)
				Me.SendPropertyChanging
				Me._R_29 = value
				Me.SendPropertyChanged("R_29")
				Me.OnR_29Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB29", DbType:="NVarChar(60)")>  _
	Public Property PB29() As String
		Get
			Return Me._PB29
		End Get
		Set
			If (String.Equals(Me._PB29, value) = false) Then
				Me.OnPB29Changing(value)
				Me.SendPropertyChanging
				Me._PB29 = value
				Me.SendPropertyChanged("PB29")
				Me.OnPB29Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS29", DbType:="VarChar(60)")>  _
	Public Property RS29() As String
		Get
			Return Me._RS29
		End Get
		Set
			If (String.Equals(Me._RS29, value) = false) Then
				Me.OnRS29Changing(value)
				Me.SendPropertyChanging
				Me._RS29 = value
				Me.SendPropertyChanged("RS29")
				Me.OnRS29Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT29", DbType:="DateTime")>  _
	Public Property DT29() As System.Nullable(Of Date)
		Get
			Return Me._DT29
		End Get
		Set
			If (Me._DT29.Equals(value) = false) Then
				Me.OnDT29Changing(value)
				Me.SendPropertyChanging
				Me._DT29 = value
				Me.SendPropertyChanged("DT29")
				Me.OnDT29Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_30", DbType:="VarChar(10)")>  _
	Public Property R_30() As String
		Get
			Return Me._R_30
		End Get
		Set
			If (String.Equals(Me._R_30, value) = false) Then
				Me.OnR_30Changing(value)
				Me.SendPropertyChanging
				Me._R_30 = value
				Me.SendPropertyChanged("R_30")
				Me.OnR_30Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB30", DbType:="NVarChar(60)")>  _
	Public Property PB30() As String
		Get
			Return Me._PB30
		End Get
		Set
			If (String.Equals(Me._PB30, value) = false) Then
				Me.OnPB30Changing(value)
				Me.SendPropertyChanging
				Me._PB30 = value
				Me.SendPropertyChanged("PB30")
				Me.OnPB30Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS30", DbType:="VarChar(60)")>  _
	Public Property RS30() As String
		Get
			Return Me._RS30
		End Get
		Set
			If (String.Equals(Me._RS30, value) = false) Then
				Me.OnRS30Changing(value)
				Me.SendPropertyChanging
				Me._RS30 = value
				Me.SendPropertyChanged("RS30")
				Me.OnRS30Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT30", DbType:="DateTime")>  _
	Public Property DT30() As System.Nullable(Of Date)
		Get
			Return Me._DT30
		End Get
		Set
			If (Me._DT30.Equals(value) = false) Then
				Me.OnDT30Changing(value)
				Me.SendPropertyChanging
				Me._DT30 = value
				Me.SendPropertyChanged("DT30")
				Me.OnDT30Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_31", DbType:="VarChar(10)")>  _
	Public Property R_31() As String
		Get
			Return Me._R_31
		End Get
		Set
			If (String.Equals(Me._R_31, value) = false) Then
				Me.OnR_31Changing(value)
				Me.SendPropertyChanging
				Me._R_31 = value
				Me.SendPropertyChanged("R_31")
				Me.OnR_31Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB31", DbType:="NVarChar(60)")>  _
	Public Property PB31() As String
		Get
			Return Me._PB31
		End Get
		Set
			If (String.Equals(Me._PB31, value) = false) Then
				Me.OnPB31Changing(value)
				Me.SendPropertyChanging
				Me._PB31 = value
				Me.SendPropertyChanged("PB31")
				Me.OnPB31Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS31", DbType:="VarChar(60)")>  _
	Public Property RS31() As String
		Get
			Return Me._RS31
		End Get
		Set
			If (String.Equals(Me._RS31, value) = false) Then
				Me.OnRS31Changing(value)
				Me.SendPropertyChanging
				Me._RS31 = value
				Me.SendPropertyChanged("RS31")
				Me.OnRS31Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT31", DbType:="DateTime")>  _
	Public Property DT31() As System.Nullable(Of Date)
		Get
			Return Me._DT31
		End Get
		Set
			If (Me._DT31.Equals(value) = false) Then
				Me.OnDT31Changing(value)
				Me.SendPropertyChanging
				Me._DT31 = value
				Me.SendPropertyChanged("DT31")
				Me.OnDT31Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_32", DbType:="VarChar(10)")>  _
	Public Property R_32() As String
		Get
			Return Me._R_32
		End Get
		Set
			If (String.Equals(Me._R_32, value) = false) Then
				Me.OnR_32Changing(value)
				Me.SendPropertyChanging
				Me._R_32 = value
				Me.SendPropertyChanged("R_32")
				Me.OnR_32Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB32", DbType:="NVarChar(60)")>  _
	Public Property PB32() As String
		Get
			Return Me._PB32
		End Get
		Set
			If (String.Equals(Me._PB32, value) = false) Then
				Me.OnPB32Changing(value)
				Me.SendPropertyChanging
				Me._PB32 = value
				Me.SendPropertyChanged("PB32")
				Me.OnPB32Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS32", DbType:="VarChar(60)")>  _
	Public Property RS32() As String
		Get
			Return Me._RS32
		End Get
		Set
			If (String.Equals(Me._RS32, value) = false) Then
				Me.OnRS32Changing(value)
				Me.SendPropertyChanging
				Me._RS32 = value
				Me.SendPropertyChanged("RS32")
				Me.OnRS32Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT32", DbType:="DateTime")>  _
	Public Property DT32() As System.Nullable(Of Date)
		Get
			Return Me._DT32
		End Get
		Set
			If (Me._DT32.Equals(value) = false) Then
				Me.OnDT32Changing(value)
				Me.SendPropertyChanging
				Me._DT32 = value
				Me.SendPropertyChanged("DT32")
				Me.OnDT32Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_33", DbType:="VarChar(10)")>  _
	Public Property R_33() As String
		Get
			Return Me._R_33
		End Get
		Set
			If (String.Equals(Me._R_33, value) = false) Then
				Me.OnR_33Changing(value)
				Me.SendPropertyChanging
				Me._R_33 = value
				Me.SendPropertyChanged("R_33")
				Me.OnR_33Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB33", DbType:="NVarChar(60)")>  _
	Public Property PB33() As String
		Get
			Return Me._PB33
		End Get
		Set
			If (String.Equals(Me._PB33, value) = false) Then
				Me.OnPB33Changing(value)
				Me.SendPropertyChanging
				Me._PB33 = value
				Me.SendPropertyChanged("PB33")
				Me.OnPB33Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS33", DbType:="VarChar(60)")>  _
	Public Property RS33() As String
		Get
			Return Me._RS33
		End Get
		Set
			If (String.Equals(Me._RS33, value) = false) Then
				Me.OnRS33Changing(value)
				Me.SendPropertyChanging
				Me._RS33 = value
				Me.SendPropertyChanged("RS33")
				Me.OnRS33Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT33", DbType:="DateTime")>  _
	Public Property DT33() As System.Nullable(Of Date)
		Get
			Return Me._DT33
		End Get
		Set
			If (Me._DT33.Equals(value) = false) Then
				Me.OnDT33Changing(value)
				Me.SendPropertyChanging
				Me._DT33 = value
				Me.SendPropertyChanged("DT33")
				Me.OnDT33Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_34", DbType:="VarChar(10)")>  _
	Public Property R_34() As String
		Get
			Return Me._R_34
		End Get
		Set
			If (String.Equals(Me._R_34, value) = false) Then
				Me.OnR_34Changing(value)
				Me.SendPropertyChanging
				Me._R_34 = value
				Me.SendPropertyChanged("R_34")
				Me.OnR_34Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB34", DbType:="NVarChar(60)")>  _
	Public Property PB34() As String
		Get
			Return Me._PB34
		End Get
		Set
			If (String.Equals(Me._PB34, value) = false) Then
				Me.OnPB34Changing(value)
				Me.SendPropertyChanging
				Me._PB34 = value
				Me.SendPropertyChanged("PB34")
				Me.OnPB34Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS34", DbType:="VarChar(60)")>  _
	Public Property RS34() As String
		Get
			Return Me._RS34
		End Get
		Set
			If (String.Equals(Me._RS34, value) = false) Then
				Me.OnRS34Changing(value)
				Me.SendPropertyChanging
				Me._RS34 = value
				Me.SendPropertyChanged("RS34")
				Me.OnRS34Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT34", DbType:="DateTime")>  _
	Public Property DT34() As System.Nullable(Of Date)
		Get
			Return Me._DT34
		End Get
		Set
			If (Me._DT34.Equals(value) = false) Then
				Me.OnDT34Changing(value)
				Me.SendPropertyChanging
				Me._DT34 = value
				Me.SendPropertyChanged("DT34")
				Me.OnDT34Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_35", DbType:="VarChar(10)")>  _
	Public Property R_35() As String
		Get
			Return Me._R_35
		End Get
		Set
			If (String.Equals(Me._R_35, value) = false) Then
				Me.OnR_35Changing(value)
				Me.SendPropertyChanging
				Me._R_35 = value
				Me.SendPropertyChanged("R_35")
				Me.OnR_35Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB35", DbType:="NVarChar(60)")>  _
	Public Property PB35() As String
		Get
			Return Me._PB35
		End Get
		Set
			If (String.Equals(Me._PB35, value) = false) Then
				Me.OnPB35Changing(value)
				Me.SendPropertyChanging
				Me._PB35 = value
				Me.SendPropertyChanged("PB35")
				Me.OnPB35Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS35", DbType:="VarChar(60)")>  _
	Public Property RS35() As String
		Get
			Return Me._RS35
		End Get
		Set
			If (String.Equals(Me._RS35, value) = false) Then
				Me.OnRS35Changing(value)
				Me.SendPropertyChanging
				Me._RS35 = value
				Me.SendPropertyChanged("RS35")
				Me.OnRS35Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT35", DbType:="DateTime")>  _
	Public Property DT35() As System.Nullable(Of Date)
		Get
			Return Me._DT35
		End Get
		Set
			If (Me._DT35.Equals(value) = false) Then
				Me.OnDT35Changing(value)
				Me.SendPropertyChanging
				Me._DT35 = value
				Me.SendPropertyChanged("DT35")
				Me.OnDT35Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_36", DbType:="VarChar(10)")>  _
	Public Property R_36() As String
		Get
			Return Me._R_36
		End Get
		Set
			If (String.Equals(Me._R_36, value) = false) Then
				Me.OnR_36Changing(value)
				Me.SendPropertyChanging
				Me._R_36 = value
				Me.SendPropertyChanged("R_36")
				Me.OnR_36Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB36", DbType:="NVarChar(60)")>  _
	Public Property PB36() As String
		Get
			Return Me._PB36
		End Get
		Set
			If (String.Equals(Me._PB36, value) = false) Then
				Me.OnPB36Changing(value)
				Me.SendPropertyChanging
				Me._PB36 = value
				Me.SendPropertyChanged("PB36")
				Me.OnPB36Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS36", DbType:="VarChar(60)")>  _
	Public Property RS36() As String
		Get
			Return Me._RS36
		End Get
		Set
			If (String.Equals(Me._RS36, value) = false) Then
				Me.OnRS36Changing(value)
				Me.SendPropertyChanging
				Me._RS36 = value
				Me.SendPropertyChanged("RS36")
				Me.OnRS36Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT36", DbType:="DateTime")>  _
	Public Property DT36() As System.Nullable(Of Date)
		Get
			Return Me._DT36
		End Get
		Set
			If (Me._DT36.Equals(value) = false) Then
				Me.OnDT36Changing(value)
				Me.SendPropertyChanging
				Me._DT36 = value
				Me.SendPropertyChanged("DT36")
				Me.OnDT36Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_37", DbType:="VarChar(10)")>  _
	Public Property R_37() As String
		Get
			Return Me._R_37
		End Get
		Set
			If (String.Equals(Me._R_37, value) = false) Then
				Me.OnR_37Changing(value)
				Me.SendPropertyChanging
				Me._R_37 = value
				Me.SendPropertyChanged("R_37")
				Me.OnR_37Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB37", DbType:="NVarChar(60)")>  _
	Public Property PB37() As String
		Get
			Return Me._PB37
		End Get
		Set
			If (String.Equals(Me._PB37, value) = false) Then
				Me.OnPB37Changing(value)
				Me.SendPropertyChanging
				Me._PB37 = value
				Me.SendPropertyChanged("PB37")
				Me.OnPB37Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS37", DbType:="VarChar(60)")>  _
	Public Property RS37() As String
		Get
			Return Me._RS37
		End Get
		Set
			If (String.Equals(Me._RS37, value) = false) Then
				Me.OnRS37Changing(value)
				Me.SendPropertyChanging
				Me._RS37 = value
				Me.SendPropertyChanged("RS37")
				Me.OnRS37Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT37", DbType:="DateTime")>  _
	Public Property DT37() As System.Nullable(Of Date)
		Get
			Return Me._DT37
		End Get
		Set
			If (Me._DT37.Equals(value) = false) Then
				Me.OnDT37Changing(value)
				Me.SendPropertyChanging
				Me._DT37 = value
				Me.SendPropertyChanged("DT37")
				Me.OnDT37Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_38", DbType:="VarChar(10)")>  _
	Public Property R_38() As String
		Get
			Return Me._R_38
		End Get
		Set
			If (String.Equals(Me._R_38, value) = false) Then
				Me.OnR_38Changing(value)
				Me.SendPropertyChanging
				Me._R_38 = value
				Me.SendPropertyChanged("R_38")
				Me.OnR_38Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB38", DbType:="NVarChar(60)")>  _
	Public Property PB38() As String
		Get
			Return Me._PB38
		End Get
		Set
			If (String.Equals(Me._PB38, value) = false) Then
				Me.OnPB38Changing(value)
				Me.SendPropertyChanging
				Me._PB38 = value
				Me.SendPropertyChanged("PB38")
				Me.OnPB38Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS38", DbType:="VarChar(60)")>  _
	Public Property RS38() As String
		Get
			Return Me._RS38
		End Get
		Set
			If (String.Equals(Me._RS38, value) = false) Then
				Me.OnRS38Changing(value)
				Me.SendPropertyChanging
				Me._RS38 = value
				Me.SendPropertyChanged("RS38")
				Me.OnRS38Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT38", DbType:="DateTime")>  _
	Public Property DT38() As System.Nullable(Of Date)
		Get
			Return Me._DT38
		End Get
		Set
			If (Me._DT38.Equals(value) = false) Then
				Me.OnDT38Changing(value)
				Me.SendPropertyChanging
				Me._DT38 = value
				Me.SendPropertyChanged("DT38")
				Me.OnDT38Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_39", DbType:="VarChar(10)")>  _
	Public Property R_39() As String
		Get
			Return Me._R_39
		End Get
		Set
			If (String.Equals(Me._R_39, value) = false) Then
				Me.OnR_39Changing(value)
				Me.SendPropertyChanging
				Me._R_39 = value
				Me.SendPropertyChanged("R_39")
				Me.OnR_39Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB39", DbType:="NVarChar(60)")>  _
	Public Property PB39() As String
		Get
			Return Me._PB39
		End Get
		Set
			If (String.Equals(Me._PB39, value) = false) Then
				Me.OnPB39Changing(value)
				Me.SendPropertyChanging
				Me._PB39 = value
				Me.SendPropertyChanged("PB39")
				Me.OnPB39Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS39", DbType:="VarChar(60)")>  _
	Public Property RS39() As String
		Get
			Return Me._RS39
		End Get
		Set
			If (String.Equals(Me._RS39, value) = false) Then
				Me.OnRS39Changing(value)
				Me.SendPropertyChanging
				Me._RS39 = value
				Me.SendPropertyChanged("RS39")
				Me.OnRS39Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT39", DbType:="DateTime")>  _
	Public Property DT39() As System.Nullable(Of Date)
		Get
			Return Me._DT39
		End Get
		Set
			If (Me._DT39.Equals(value) = false) Then
				Me.OnDT39Changing(value)
				Me.SendPropertyChanging
				Me._DT39 = value
				Me.SendPropertyChanged("DT39")
				Me.OnDT39Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_40", DbType:="VarChar(10)")>  _
	Public Property R_40() As String
		Get
			Return Me._R_40
		End Get
		Set
			If (String.Equals(Me._R_40, value) = false) Then
				Me.OnR_40Changing(value)
				Me.SendPropertyChanging
				Me._R_40 = value
				Me.SendPropertyChanged("R_40")
				Me.OnR_40Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB40", DbType:="NVarChar(60)")>  _
	Public Property PB40() As String
		Get
			Return Me._PB40
		End Get
		Set
			If (String.Equals(Me._PB40, value) = false) Then
				Me.OnPB40Changing(value)
				Me.SendPropertyChanging
				Me._PB40 = value
				Me.SendPropertyChanged("PB40")
				Me.OnPB40Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS40", DbType:="VarChar(60)")>  _
	Public Property RS40() As String
		Get
			Return Me._RS40
		End Get
		Set
			If (String.Equals(Me._RS40, value) = false) Then
				Me.OnRS40Changing(value)
				Me.SendPropertyChanging
				Me._RS40 = value
				Me.SendPropertyChanged("RS40")
				Me.OnRS40Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT40", DbType:="DateTime")>  _
	Public Property DT40() As System.Nullable(Of Date)
		Get
			Return Me._DT40
		End Get
		Set
			If (Me._DT40.Equals(value) = false) Then
				Me.OnDT40Changing(value)
				Me.SendPropertyChanging
				Me._DT40 = value
				Me.SendPropertyChanged("DT40")
				Me.OnDT40Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_41", DbType:="VarChar(10)")>  _
	Public Property R_41() As String
		Get
			Return Me._R_41
		End Get
		Set
			If (String.Equals(Me._R_41, value) = false) Then
				Me.OnR_41Changing(value)
				Me.SendPropertyChanging
				Me._R_41 = value
				Me.SendPropertyChanged("R_41")
				Me.OnR_41Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PB41", DbType:="NVarChar(60)")>  _
	Public Property PB41() As String
		Get
			Return Me._PB41
		End Get
		Set
			If (String.Equals(Me._PB41, value) = false) Then
				Me.OnPB41Changing(value)
				Me.SendPropertyChanging
				Me._PB41 = value
				Me.SendPropertyChanged("PB41")
				Me.OnPB41Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RS41", DbType:="VarChar(60)")>  _
	Public Property RS41() As String
		Get
			Return Me._RS41
		End Get
		Set
			If (String.Equals(Me._RS41, value) = false) Then
				Me.OnRS41Changing(value)
				Me.SendPropertyChanging
				Me._RS41 = value
				Me.SendPropertyChanged("RS41")
				Me.OnRS41Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DT41", DbType:="DateTime")>  _
	Public Property DT41() As System.Nullable(Of Date)
		Get
			Return Me._DT41
		End Get
		Set
			If (Me._DT41.Equals(value) = false) Then
				Me.OnDT41Changing(value)
				Me.SendPropertyChanging
				Me._DT41 = value
				Me.SendPropertyChanged("DT41")
				Me.OnDT41Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IP", DbType:="VarChar(10)")>  _
	Public Property IP() As String
		Get
			Return Me._IP
		End Get
		Set
			If (String.Equals(Me._IP, value) = false) Then
				Me.OnIPChanging(value)
				Me.SendPropertyChanging
				Me._IP = value
				Me.SendPropertyChanged("IP")
				Me.OnIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPNO_ADD", DbType:="VarChar(10)")>  _
	Public Property OPNO_ADD() As String
		Get
			Return Me._OPNO_ADD
		End Get
		Set
			If (String.Equals(Me._OPNO_ADD, value) = false) Then
				Me.OnOPNO_ADDChanging(value)
				Me.SendPropertyChanging
				Me._OPNO_ADD = value
				Me.SendPropertyChanged("OPNO_ADD")
				Me.OnOPNO_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ADD", DbType:="DateTime")>  _
	Public Property DATE_ADD() As System.Nullable(Of Date)
		Get
			Return Me._DATE_ADD
		End Get
		Set
			If (Me._DATE_ADD.Equals(value) = false) Then
				Me.OnDATE_ADDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ADD = value
				Me.SendPropertyChanged("DATE_ADD")
				Me.OnDATE_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPNO_UPDATE", DbType:="VarChar(10)")>  _
	Public Property OPNO_UPDATE() As String
		Get
			Return Me._OPNO_UPDATE
		End Get
		Set
			If (String.Equals(Me._OPNO_UPDATE, value) = false) Then
				Me.OnOPNO_UPDATEChanging(value)
				Me.SendPropertyChanging
				Me._OPNO_UPDATE = value
				Me.SendPropertyChanged("OPNO_UPDATE")
				Me.OnOPNO_UPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_UPDATE", DbType:="DateTime")>  _
	Public Property DATE_UPDATE() As System.Nullable(Of Date)
		Get
			Return Me._DATE_UPDATE
		End Get
		Set
			If (Me._DATE_UPDATE.Equals(value) = false) Then
				Me.OnDATE_UPDATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE_UPDATE = value
				Me.SendPropertyChanged("DATE_UPDATE")
				Me.OnDATE_UPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLAG", DbType:="Int")>  _
	Public Property FLAG() As System.Nullable(Of Integer)
		Get
			Return Me._FLAG
		End Get
		Set
			If (Me._FLAG.Equals(value) = false) Then
				Me.OnFLAGChanging(value)
				Me.SendPropertyChanging
				Me._FLAG = value
				Me.SendPropertyChanged("FLAG")
				Me.OnFLAGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TB_MACHINE_TOOL_CHECK_P3")>  _
Partial Public Class TB_MACHINE_TOOL_CHECK_P3
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _MC_NO As String
	
	Private _A1_1_BEFORE_IMPORT As String
	
	Private _A1_1_BEFORE_IMPORT_NOTE As String
	
	Private _A1_1_BEFORE_START_WORK As String
	
	Private _A1_1_BEFORE_START_WORK_NOTE As String
	
	Private _A1_2_BEFORE_IMPORT As String
	
	Private _A1_2_BEFORE_IMPORT_NOTE As String
	
	Private _A1_2_BEFORE_START_WORK As String
	
	Private _A1_2_BEFORE_START_WORK_NOTE As String
	
	Private _A1_A_BEFORE_IMPORT As String
	
	Private _A1_A_BEFORE_IMPORT_NOTE As String
	
	Private _A1_A_BEFORE_START_WORK As String
	
	Private _A1_A_BEFORE_START_WORK_NOTE As String
	
	Private _A1_3_BEFORE_IMPORT As String
	
	Private _A1_3_BEFORE_IMPORT_NOTE As String
	
	Private _A1_3_BEFORE_START_WORK As String
	
	Private _A1_3_BEFORE_START_WORK_NOTE As String
	
	Private _A1_4_BEFORE_IMPORT As String
	
	Private _A1_4_BEFORE_IMPORT_NOTE As String
	
	Private _A1_4_BEFORE_START_WORK As String
	
	Private _A1_4_BEFORE_START_WORK_NOTE As String
	
	Private _A1_5_BEFORE_IMPORT As String
	
	Private _A1_5_BEFORE_IMPORT_NOTE As String
	
	Private _A1_5_BEFORE_START_WORK As String
	
	Private _A1_5_BEFORE_START_WORK_NOTE As String
	
	Private _A1_6_BEFORE_IMPORT As String
	
	Private _A1_6_BEFORE_IMPORT_NOTE As String
	
	Private _A1_6_BEFORE_START_WORK As String
	
	Private _A1_6_BEFORE_START_WORK_NOTE As String
	
	Private _A1_7_BEFORE_IMPORT As String
	
	Private _A1_7_BEFORE_IMPORT_NOTE As String
	
	Private _A1_7_BEFORE_START_WORK As String
	
	Private _A1_7_BEFORE_START_WORK_NOTE As String
	
	Private _A1_8_BEFORE_IMPORT As String
	
	Private _A1_8_BEFORE_IMPORT_NOTE As String
	
	Private _A1_8_BEFORE_START_WORK As String
	
	Private _A1_8_BEFORE_START_WORK_NOTE As String
	
	Private _A1_9_BEFORE_IMPORT As String
	
	Private _A1_9_BEFORE_IMPORT_NOTE As String
	
	Private _A1_9_BEFORE_START_WORK As String
	
	Private _A1_9_BEFORE_START_WORK_NOTE As String
	
	Private _A1_10_BEFORE_IMPORT As String
	
	Private _A1_10_BEFORE_IMPORT_NOTE As String
	
	Private _A1_10_BEFORE_START_WORK As String
	
	Private _A1_10_BEFORE_START_WORK_NOTE As String
	
	Private _A1_11_BEFORE_IMPORT As String
	
	Private _A1_11_BEFORE_IMPORT_NOTE As String
	
	Private _A1_11_BEFORE_START_WORK As String
	
	Private _A1_11_BEFORE_START_WORK_NOTE As String
	
	Private _A2_1_BEFORE_IMPORT As String
	
	Private _A2_1_BEFORE_IMPORT_NOTE As String
	
	Private _A2_1_BEFORE_START_WORK As String
	
	Private _A2_1_BEFORE_START_WORK_NOTE As String
	
	Private _A2_2_BEFORE_IMPORT As String
	
	Private _A2_2_BEFORE_IMPORT_NOTE As String
	
	Private _A2_2_BEFORE_START_WORK As String
	
	Private _A2_2_BEFORE_START_WORK_NOTE As String
	
	Private _A2_3_BEFORE_IMPORT As String
	
	Private _A2_3_BEFORE_IMPORT_NOTE As String
	
	Private _A2_3_BEFORE_START_WORK As String
	
	Private _A2_3_BEFORE_START_WORK_NOTE As String
	
	Private _A2_4_BEFORE_IMPORT As String
	
	Private _A2_4_BEFORE_IMPORT_NOTE As String
	
	Private _A2_4_BEFORE_START_WORK As String
	
	Private _A2_4_BEFORE_START_WORK_NOTE As String
	
	Private _A2_5_BEFORE_IMPORT As String
	
	Private _A2_5_BEFORE_IMPORT_NOTE As String
	
	Private _A2_5_BEFORE_START_WORK As String
	
	Private _A2_5_BEFORE_START_WORK_NOTE As String
	
	Private _A2_6_BEFORE_IMPORT As String
	
	Private _A2_6_BEFORE_IMPORT_NOTE As String
	
	Private _A2_6_BEFORE_START_WORK As String
	
	Private _A2_6_BEFORE_START_WORK_NOTE As String
	
	Private _A2_7_BEFORE_IMPORT As String
	
	Private _A2_7_BEFORE_IMPORT_NOTE As String
	
	Private _A2_7_BEFORE_START_WORK As String
	
	Private _A2_7_BEFORE_START_WORK_NOTE As String
	
	Private _B1_1_BEFORE_IMPORT As String
	
	Private _B1_1_BEFORE_IMPORT_NOTE As String
	
	Private _B1_1_BEFORE_START_WORK As String
	
	Private _B1_1_BEFORE_START_WORK_NOTE As String
	
	Private _B1_2_BEFORE_IMPORT As String
	
	Private _B1_2_BEFORE_IMPORT_NOTE As String
	
	Private _B1_2_BEFORE_START_WORK As String
	
	Private _B1_2_BEFORE_START_WORK_NOTE As String
	
	Private _B1_3_BEFORE_IMPORT As String
	
	Private _B1_3_BEFORE_IMPORT_NOTE As String
	
	Private _B1_3_BEFORE_START_WORK As String
	
	Private _B1_3_BEFORE_START_WORK_NOTE As String
	
	Private _B1_4_BEFORE_IMPORT As String
	
	Private _B1_4_BEFORE_IMPORT_NOTE As String
	
	Private _B1_4_BEFORE_START_WORK As String
	
	Private _B1_4_BEFORE_START_WORK_NOTE As String
	
	Private _B1_5_BEFORE_IMPORT As String
	
	Private _B1_5_BEFORE_IMPORT_NOTE As String
	
	Private _B1_5_BEFORE_START_WORK As String
	
	Private _B1_5_BEFORE_START_WORK_NOTE As String
	
	Private _C1_1_BEFORE_IMPORT As String
	
	Private _C1_1_BEFORE_IMPORT_NOTE As String
	
	Private _C1_1_BEFORE_START_WORK As String
	
	Private _C1_1_BEFORE_START_WORK_NOTE As String
	
	Private _C1_2_BEFORE_IMPORT As String
	
	Private _C1_2_BEFORE_IMPORT_NOTE As String
	
	Private _C1_2_BEFORE_START_WORK As String
	
	Private _C1_2_BEFORE_START_WORK_NOTE As String
	
	Private _C1_3_BEFORE_IMPORT As String
	
	Private _C1_3_BEFORE_IMPORT_NOTE As String
	
	Private _C1_3_BEFORE_START_WORK As String
	
	Private _C1_3_BEFORE_START_WORK_NOTE As String
	
	Private _C1_4_BEFORE_IMPORT As String
	
	Private _C1_4_BEFORE_IMPORT_NOTE As String
	
	Private _C1_4_BEFORE_START_WORK As String
	
	Private _C1_4_BEFORE_START_WORK_NOTE As String
	
	Private _C1_5_BEFORE_IMPORT As String
	
	Private _C1_5_BEFORE_IMPORT_NOTE As String
	
	Private _C1_5_BEFORE_START_WORK As String
	
	Private _C1_5_BEFORE_START_WORK_NOTE As String
	
	Private _C1_6_BEFORE_IMPORT As String
	
	Private _C1_6_BEFORE_IMPORT_NOTE As String
	
	Private _C1_6_BEFORE_START_WORK As String
	
	Private _C1_6_BEFORE_START_WORK_NOTE As String
	
	Private _C1_7_BEFORE_IMPORT As String
	
	Private _C1_7_BEFORE_IMPORT_NOTE As String
	
	Private _C1_7_BEFORE_START_WORK As String
	
	Private _C1_7_BEFORE_START_WORK_NOTE As String
	
	Private _C1_8_BEFORE_IMPORT As String
	
	Private _C1_8_BEFORE_IMPORT_NOTE As String
	
	Private _C1_8_BEFORE_START_WORK As String
	
	Private _C1_8_BEFORE_START_WORK_NOTE As String
	
	Private _C1_9_BEFORE_IMPORT As String
	
	Private _C1_9_BEFORE_IMPORT_NOTE As String
	
	Private _C1_9_BEFORE_START_WORK As String
	
	Private _C1_9_BEFORE_START_WORK_NOTE As String
	
	Private _C1_10_BEFORE_IMPORT As String
	
	Private _C1_10_BEFORE_IMPORT_NOTE As String
	
	Private _C1_10_BEFORE_START_WORK As String
	
	Private _C1_10_BEFORE_START_WORK_NOTE As String
	
	Private _C2_A_BEFORE_IMPORT As String
	
	Private _C2_A_BEFORE_IMPORT_NOTE As String
	
	Private _C2_A_BEFORE_START_WORK As String
	
	Private _C2_A_BEFORE_START_WORK_NOTE As String
	
	Private _C2_B_BEFORE_IMPORT As String
	
	Private _C2_B_BEFORE_IMPORT_NOTE As String
	
	Private _C2_B_BEFORE_START_WORK As String
	
	Private _C2_B_BEFORE_START_WORK_NOTE As String
	
	Private _C2_C_BEFORE_IMPORT As String
	
	Private _C2_C_BEFORE_IMPORT_NOTE As String
	
	Private _C2_C_BEFORE_START_WORK As String
	
	Private _C2_C_BEFORE_START_WORK_NOTE As String
	
	Private _C2_D_BEFORE_IMPORT As String
	
	Private _C2_D_BEFORE_IMPORT_NOTE As String
	
	Private _C2_D_BEFORE_START_WORK As String
	
	Private _C2_D_BEFORE_START_WORK_NOTE As String
	
	Private _C2_E_BEFORE_IMPORT As String
	
	Private _C2_E_BEFORE_IMPORT_NOTE As String
	
	Private _C2_E_BEFORE_START_WORK As String
	
	Private _C2_E_BEFORE_START_WORK_NOTE As String
	
	Private _C2_F_BEFORE_IMPORT As String
	
	Private _C2_F_BEFORE_IMPORT_NOTE As String
	
	Private _C2_F_BEFORE_START_WORK As String
	
	Private _C2_F_BEFORE_START_WORK_NOTE As String
	
	Private _C2_G_BEFORE_IMPORT As String
	
	Private _C2_G_BEFORE_IMPORT_NOTE As String
	
	Private _C2_G_BEFORE_START_WORK As String
	
	Private _C2_G_BEFORE_START_WORK_NOTE As String
	
	Private _C3_A_BEFORE_IMPORT As String
	
	Private _C3_A_BEFORE_IMPORT_NOTE As String
	
	Private _C3_A_BEFORE_START_WORK As String
	
	Private _C3_A_BEFORE_START_WORK_NOTE As String
	
	Private _C3_B_BEFORE_IMPORT As String
	
	Private _C3_B_BEFORE_IMPORT_NOTE As String
	
	Private _C3_B_BEFORE_START_WORK As String
	
	Private _C3_B_BEFORE_START_WORK_NOTE As String
	
	Private _C3_C_BEFORE_IMPORT As String
	
	Private _C3_C_BEFORE_IMPORT_NOTE As String
	
	Private _C3_C_BEFORE_START_WORK As String
	
	Private _C3_C_BEFORE_START_WORK_NOTE As String
	
	Private _C3_D_BEFORE_IMPORT As String
	
	Private _C3_D_BEFORE_IMPORT_NOTE As String
	
	Private _C3_D_BEFORE_START_WORK As String
	
	Private _C3_D_BEFORE_START_WORK_NOTE As String
	
	Private _C3_E_BEFORE_IMPORT As String
	
	Private _C3_E_BEFORE_IMPORT_NOTE As String
	
	Private _C3_E_BEFORE_START_WORK As String
	
	Private _C3_E_BEFORE_START_WORK_NOTE As String
	
	Private _C3_E_CHK1 As System.Nullable(Of Boolean)
	
	Private _C3_E_CHK2 As System.Nullable(Of Boolean)
	
	Private _C3_E_CHK3 As System.Nullable(Of Boolean)
	
	Private _C3_F_BEFORE_IMPORT As String
	
	Private _C3_F_BEFORE_IMPORT_NOTE As String
	
	Private _C3_F_BEFORE_START_WORK As String
	
	Private _C3_F_BEFORE_START_WORK_NOTE As String
	
	Private _C4_A_BEFORE_IMPORT As String
	
	Private _C4_A_BEFORE_IMPORT_NOTE As String
	
	Private _C4_A_BEFORE_START_WORK As String
	
	Private _C4_A_BEFORE_START_WORK_NOTE As String
	
	Private _C4_B_BEFORE_IMPORT As String
	
	Private _C4_B_BEFORE_IMPORT_NOTE As String
	
	Private _C4_B_BEFORE_START_WORK As String
	
	Private _C4_B_BEFORE_START_WORK_NOTE As String
	
	Private _C4_C_BEFORE_IMPORT As String
	
	Private _C4_C_BEFORE_IMPORT_NOTE As String
	
	Private _C4_C_BEFORE_START_WORK As String
	
	Private _C4_C_BEFORE_START_WORK_NOTE As String
	
	Private _D_A_BEFORE_IMPORT As String
	
	Private _D_A_BEFORE_IMPORT_NOTE As String
	
	Private _D_A_BEFORE_START_WORK As String
	
	Private _D_A_BEFORE_START_WORK_NOTE As String
	
	Private _D_B_BEFORE_IMPORT As String
	
	Private _D_B_BEFORE_IMPORT_NOTE As String
	
	Private _D_B_BEFORE_START_WORK As String
	
	Private _D_B_BEFORE_START_WORK_NOTE As String
	
	Private _D_C_BEFORE_IMPORT As String
	
	Private _D_C_BEFORE_IMPORT_NOTE As String
	
	Private _D_C_BEFORE_START_WORK As String
	
	Private _D_C_BEFORE_START_WORK_NOTE As String
	
	Private _D_D_BEFORE_IMPORT As String
	
	Private _D_D_BEFORE_IMPORT_NOTE As String
	
	Private _D_D_BEFORE_START_WORK As String
	
	Private _D_D_BEFORE_START_WORK_NOTE As String
	
	Private _D_E_BEFORE_IMPORT As String
	
	Private _D_E_BEFORE_IMPORT_NOTE As String
	
	Private _D_E_BEFORE_START_WORK As String
	
	Private _D_E_BEFORE_START_WORK_NOTE As String
	
	Private _D_F_BEFORE_IMPORT As String
	
	Private _D_F_BEFORE_IMPORT_NOTE As String
	
	Private _D_F_BEFORE_START_WORK As String
	
	Private _D_F_BEFORE_START_WORK_NOTE As String
	
	Private _D_G_BEFORE_IMPORT As String
	
	Private _D_G_BEFORE_IMPORT_NOTE As String
	
	Private _D_G_BEFORE_START_WORK As String
	
	Private _D_G_BEFORE_START_WORK_NOTE As String
	
	Private _E1_A_BEFORE_IMPORT As String
	
	Private _E1_A_BEFORE_IMPORT_NOTE As String
	
	Private _E1_A_BEFORE_START_WORK As String
	
	Private _E1_A_BEFORE_START_WORK_NOTE As String
	
	Private _E1_B_BEFORE_IMPORT As String
	
	Private _E1_B_BEFORE_IMPORT_NOTE As String
	
	Private _E1_B_BEFORE_START_WORK As String
	
	Private _E1_B_BEFORE_START_WORK_NOTE As String
	
	Private _E2_A_BEFORE_IMPORT As String
	
	Private _E2_A_BEFORE_IMPORT_NOTE As String
	
	Private _E2_A_BEFORE_START_WORK As String
	
	Private _E2_A_BEFORE_START_WORK_NOTE As String
	
	Private _E2_B_BEFORE_IMPORT As String
	
	Private _E2_B_BEFORE_IMPORT_NOTE As String
	
	Private _E2_B_BEFORE_START_WORK As String
	
	Private _E2_B_BEFORE_START_WORK_NOTE As String
	
	Private _E2_C_BEFORE_IMPORT As String
	
	Private _E2_C_BEFORE_IMPORT_NOTE As String
	
	Private _E2_C_BEFORE_START_WORK As String
	
	Private _E2_C_BEFORE_START_WORK_NOTE As String
	
	Private _E3_A_BEFORE_IMPORT As String
	
	Private _E3_A_BEFORE_IMPORT_NOTE As String
	
	Private _E3_A_BEFORE_START_WORK As String
	
	Private _E3_A_BEFORE_START_WORK_NOTE As String
	
	Private _E3_B_BEFORE_IMPORT As String
	
	Private _E3_B_BEFORE_IMPORT_NOTE As String
	
	Private _E3_B_BEFORE_START_WORK As String
	
	Private _E3_B_BEFORE_START_WORK_NOTE As String
	
	Private _E3_C_BEFORE_IMPORT As String
	
	Private _E3_C_BEFORE_IMPORT_NOTE As String
	
	Private _E3_C_BEFORE_START_WORK As String
	
	Private _E3_C_BEFORE_START_WORK_NOTE As String
	
	Private _E3_D_BEFORE_IMPORT As String
	
	Private _E3_D_BEFORE_IMPORT_NOTE As String
	
	Private _E3_D_BEFORE_START_WORK As String
	
	Private _E3_D_BEFORE_START_WORK_NOTE As String
	
	Private _E4_A_BEFORE_IMPORT As String
	
	Private _E4_A_BEFORE_IMPORT_NOTE As String
	
	Private _E4_A_BEFORE_START_WORK As String
	
	Private _E4_A_BEFORE_START_WORK_NOTE As String
	
	Private _E4_B_BEFORE_IMPORT As String
	
	Private _E4_B_BEFORE_IMPORT_NOTE As String
	
	Private _E4_B_BEFORE_START_WORK As String
	
	Private _E4_B_BEFORE_START_WORK_NOTE As String
	
	Private _E4_C_BEFORE_IMPORT As String
	
	Private _E4_C_BEFORE_IMPORT_NOTE As String
	
	Private _E4_C_BEFORE_START_WORK As String
	
	Private _E4_C_BEFORE_START_WORK_NOTE As String
	
	Private _E4_D_BEFORE_IMPORT As String
	
	Private _E4_D_BEFORE_IMPORT_NOTE As String
	
	Private _E4_D_BEFORE_START_WORK As String
	
	Private _E4_D_BEFORE_START_WORK_NOTE As String
	
	Private _OPNO_ADD As String
	
	Private _DATE_ADD As System.Nullable(Of Date)
	
	Private _OPNO_UPDATE As String
	
	Private _DATE_UPDATE As System.Nullable(Of Date)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _STATUS_NAME As String
	
	Private _IP As String
	
	Private _DOCUMENT_ATTACH_NAME As String
	
	Private _DOCUMENT_ATTACH_CONTENT_TYPE As String
	
	Private _DOCUMENT_ATTACH_DATA() As Byte
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnMC_NOChanging(value As String)
    End Sub
    Partial Private Sub OnMC_NOChanged()
    End Sub
    Partial Private Sub OnA1_1_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA1_1_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA1_1_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_1_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_1_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA1_1_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA1_1_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_1_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_2_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA1_2_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA1_2_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_2_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_2_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA1_2_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA1_2_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_2_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_A_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA1_A_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA1_A_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_A_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_A_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA1_A_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA1_A_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_A_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_3_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA1_3_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA1_3_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_3_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_3_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA1_3_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA1_3_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_3_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_4_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA1_4_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA1_4_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_4_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_4_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA1_4_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA1_4_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_4_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_5_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA1_5_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA1_5_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_5_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_5_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA1_5_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA1_5_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_5_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_6_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA1_6_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA1_6_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_6_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_6_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA1_6_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA1_6_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_6_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_7_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA1_7_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA1_7_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_7_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_7_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA1_7_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA1_7_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_7_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_8_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA1_8_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA1_8_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_8_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_8_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA1_8_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA1_8_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_8_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_9_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA1_9_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA1_9_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_9_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_9_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA1_9_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA1_9_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_9_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_10_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA1_10_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA1_10_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_10_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_10_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA1_10_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA1_10_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_10_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_11_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA1_11_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA1_11_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_11_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA1_11_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA1_11_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA1_11_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA1_11_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnA2_1_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA2_1_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA2_1_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA2_1_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA2_1_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA2_1_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA2_1_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA2_1_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnA2_2_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA2_2_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA2_2_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA2_2_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA2_2_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA2_2_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA2_2_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA2_2_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnA2_3_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA2_3_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA2_3_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA2_3_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA2_3_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA2_3_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA2_3_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA2_3_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnA2_4_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA2_4_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA2_4_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA2_4_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA2_4_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA2_4_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA2_4_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA2_4_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnA2_5_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA2_5_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA2_5_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA2_5_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA2_5_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA2_5_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA2_5_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA2_5_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnA2_6_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA2_6_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA2_6_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA2_6_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA2_6_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA2_6_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA2_6_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA2_6_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnA2_7_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnA2_7_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnA2_7_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA2_7_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnA2_7_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnA2_7_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnA2_7_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnA2_7_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnB1_1_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnB1_1_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnB1_1_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnB1_1_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnB1_1_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnB1_1_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnB1_1_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnB1_1_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnB1_2_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnB1_2_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnB1_2_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnB1_2_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnB1_2_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnB1_2_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnB1_2_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnB1_2_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnB1_3_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnB1_3_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnB1_3_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnB1_3_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnB1_3_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnB1_3_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnB1_3_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnB1_3_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnB1_4_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnB1_4_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnB1_4_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnB1_4_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnB1_4_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnB1_4_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnB1_4_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnB1_4_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnB1_5_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnB1_5_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnB1_5_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnB1_5_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnB1_5_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnB1_5_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnB1_5_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnB1_5_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_1_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC1_1_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC1_1_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_1_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_1_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC1_1_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC1_1_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_1_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_2_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC1_2_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC1_2_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_2_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_2_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC1_2_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC1_2_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_2_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_3_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC1_3_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC1_3_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_3_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_3_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC1_3_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC1_3_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_3_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_4_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC1_4_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC1_4_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_4_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_4_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC1_4_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC1_4_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_4_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_5_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC1_5_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC1_5_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_5_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_5_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC1_5_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC1_5_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_5_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_6_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC1_6_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC1_6_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_6_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_6_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC1_6_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC1_6_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_6_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_7_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC1_7_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC1_7_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_7_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_7_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC1_7_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC1_7_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_7_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_8_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC1_8_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC1_8_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_8_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_8_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC1_8_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC1_8_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_8_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_9_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC1_9_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC1_9_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_9_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_9_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC1_9_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC1_9_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_9_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_10_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC1_10_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC1_10_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_10_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC1_10_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC1_10_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC1_10_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC1_10_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC2_A_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC2_A_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC2_A_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC2_A_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC2_A_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC2_A_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC2_A_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC2_A_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC2_B_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC2_B_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC2_B_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC2_B_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC2_B_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC2_B_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC2_B_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC2_B_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC2_C_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC2_C_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC2_C_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC2_C_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC2_C_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC2_C_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC2_C_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC2_C_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC2_D_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC2_D_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC2_D_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC2_D_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC2_D_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC2_D_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC2_D_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC2_D_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC2_E_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC2_E_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC2_E_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC2_E_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC2_E_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC2_E_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC2_E_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC2_E_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC2_F_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC2_F_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC2_F_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC2_F_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC2_F_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC2_F_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC2_F_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC2_F_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC2_G_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC2_G_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC2_G_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC2_G_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC2_G_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC2_G_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC2_G_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC2_G_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC3_A_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC3_A_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC3_A_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC3_A_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC3_A_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC3_A_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC3_A_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC3_A_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC3_B_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC3_B_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC3_B_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC3_B_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC3_B_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC3_B_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC3_B_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC3_B_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC3_C_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC3_C_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC3_C_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC3_C_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC3_C_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC3_C_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC3_C_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC3_C_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC3_D_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC3_D_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC3_D_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC3_D_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC3_D_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC3_D_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC3_D_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC3_D_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC3_E_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC3_E_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC3_E_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC3_E_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC3_E_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC3_E_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC3_E_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC3_E_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC3_E_CHK1Changing(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnC3_E_CHK1Changed()
    End Sub
    Partial Private Sub OnC3_E_CHK2Changing(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnC3_E_CHK2Changed()
    End Sub
    Partial Private Sub OnC3_E_CHK3Changing(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnC3_E_CHK3Changed()
    End Sub
    Partial Private Sub OnC3_F_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC3_F_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC3_F_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC3_F_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC3_F_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC3_F_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC3_F_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC3_F_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC4_A_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC4_A_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC4_A_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC4_A_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC4_A_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC4_A_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC4_A_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC4_A_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC4_B_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC4_B_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC4_B_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC4_B_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC4_B_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC4_B_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC4_B_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC4_B_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnC4_C_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnC4_C_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnC4_C_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC4_C_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnC4_C_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnC4_C_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnC4_C_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnC4_C_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnD_A_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnD_A_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnD_A_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnD_A_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnD_A_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnD_A_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnD_A_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnD_A_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnD_B_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnD_B_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnD_B_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnD_B_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnD_B_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnD_B_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnD_B_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnD_B_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnD_C_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnD_C_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnD_C_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnD_C_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnD_C_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnD_C_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnD_C_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnD_C_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnD_D_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnD_D_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnD_D_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnD_D_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnD_D_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnD_D_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnD_D_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnD_D_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnD_E_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnD_E_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnD_E_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnD_E_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnD_E_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnD_E_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnD_E_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnD_E_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnD_F_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnD_F_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnD_F_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnD_F_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnD_F_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnD_F_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnD_F_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnD_F_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnD_G_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnD_G_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnD_G_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnD_G_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnD_G_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnD_G_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnD_G_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnD_G_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnE1_A_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnE1_A_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnE1_A_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE1_A_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnE1_A_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnE1_A_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnE1_A_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE1_A_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnE1_B_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnE1_B_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnE1_B_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE1_B_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnE1_B_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnE1_B_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnE1_B_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE1_B_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnE2_A_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnE2_A_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnE2_A_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE2_A_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnE2_A_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnE2_A_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnE2_A_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE2_A_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnE2_B_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnE2_B_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnE2_B_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE2_B_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnE2_B_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnE2_B_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnE2_B_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE2_B_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnE2_C_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnE2_C_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnE2_C_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE2_C_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnE2_C_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnE2_C_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnE2_C_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE2_C_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnE3_A_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnE3_A_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnE3_A_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE3_A_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnE3_A_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnE3_A_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnE3_A_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE3_A_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnE3_B_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnE3_B_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnE3_B_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE3_B_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnE3_B_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnE3_B_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnE3_B_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE3_B_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnE3_C_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnE3_C_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnE3_C_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE3_C_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnE3_C_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnE3_C_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnE3_C_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE3_C_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnE3_D_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnE3_D_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnE3_D_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE3_D_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnE3_D_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnE3_D_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnE3_D_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE3_D_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnE4_A_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnE4_A_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnE4_A_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE4_A_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnE4_A_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnE4_A_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnE4_A_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE4_A_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnE4_B_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnE4_B_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnE4_B_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE4_B_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnE4_B_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnE4_B_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnE4_B_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE4_B_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnE4_C_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnE4_C_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnE4_C_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE4_C_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnE4_C_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnE4_C_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnE4_C_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE4_C_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnE4_D_BEFORE_IMPORTChanging(value As String)
    End Sub
    Partial Private Sub OnE4_D_BEFORE_IMPORTChanged()
    End Sub
    Partial Private Sub OnE4_D_BEFORE_IMPORT_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE4_D_BEFORE_IMPORT_NOTEChanged()
    End Sub
    Partial Private Sub OnE4_D_BEFORE_START_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnE4_D_BEFORE_START_WORKChanged()
    End Sub
    Partial Private Sub OnE4_D_BEFORE_START_WORK_NOTEChanging(value As String)
    End Sub
    Partial Private Sub OnE4_D_BEFORE_START_WORK_NOTEChanged()
    End Sub
    Partial Private Sub OnOPNO_ADDChanging(value As String)
    End Sub
    Partial Private Sub OnOPNO_ADDChanged()
    End Sub
    Partial Private Sub OnDATE_ADDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_ADDChanged()
    End Sub
    Partial Private Sub OnOPNO_UPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnOPNO_UPDATEChanged()
    End Sub
    Partial Private Sub OnDATE_UPDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_UPDATEChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanged()
    End Sub
    Partial Private Sub OnIPChanging(value As String)
    End Sub
    Partial Private Sub OnIPChanged()
    End Sub
    Partial Private Sub OnDOCUMENT_ATTACH_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDOCUMENT_ATTACH_NAMEChanged()
    End Sub
    Partial Private Sub OnDOCUMENT_ATTACH_CONTENT_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnDOCUMENT_ATTACH_CONTENT_TYPEChanged()
    End Sub
    Partial Private Sub OnDOCUMENT_ATTACH_DATAChanging(value As Byte())
    End Sub
    Partial Private Sub OnDOCUMENT_ATTACH_DATAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MC_NO", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property MC_NO() As String
		Get
			Return Me._MC_NO
		End Get
		Set
			If (String.Equals(Me._MC_NO, value) = false) Then
				Me.OnMC_NOChanging(value)
				Me.SendPropertyChanging
				Me._MC_NO = value
				Me.SendPropertyChanged("MC_NO")
				Me.OnMC_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_1_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A1_1_BEFORE_IMPORT() As String
		Get
			Return Me._A1_1_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A1_1_BEFORE_IMPORT, value) = false) Then
				Me.OnA1_1_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A1_1_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A1_1_BEFORE_IMPORT")
				Me.OnA1_1_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_1_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_1_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A1_1_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_1_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA1_1_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_1_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A1_1_BEFORE_IMPORT_NOTE")
				Me.OnA1_1_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_1_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A1_1_BEFORE_START_WORK() As String
		Get
			Return Me._A1_1_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A1_1_BEFORE_START_WORK, value) = false) Then
				Me.OnA1_1_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A1_1_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A1_1_BEFORE_START_WORK")
				Me.OnA1_1_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_1_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_1_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A1_1_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_1_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA1_1_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_1_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A1_1_BEFORE_START_WORK_NOTE")
				Me.OnA1_1_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_2_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A1_2_BEFORE_IMPORT() As String
		Get
			Return Me._A1_2_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A1_2_BEFORE_IMPORT, value) = false) Then
				Me.OnA1_2_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A1_2_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A1_2_BEFORE_IMPORT")
				Me.OnA1_2_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_2_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_2_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A1_2_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_2_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA1_2_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_2_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A1_2_BEFORE_IMPORT_NOTE")
				Me.OnA1_2_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_2_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A1_2_BEFORE_START_WORK() As String
		Get
			Return Me._A1_2_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A1_2_BEFORE_START_WORK, value) = false) Then
				Me.OnA1_2_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A1_2_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A1_2_BEFORE_START_WORK")
				Me.OnA1_2_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_2_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_2_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A1_2_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_2_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA1_2_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_2_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A1_2_BEFORE_START_WORK_NOTE")
				Me.OnA1_2_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_A_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A1_A_BEFORE_IMPORT() As String
		Get
			Return Me._A1_A_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A1_A_BEFORE_IMPORT, value) = false) Then
				Me.OnA1_A_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A1_A_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A1_A_BEFORE_IMPORT")
				Me.OnA1_A_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_A_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_A_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A1_A_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_A_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA1_A_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_A_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A1_A_BEFORE_IMPORT_NOTE")
				Me.OnA1_A_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_A_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A1_A_BEFORE_START_WORK() As String
		Get
			Return Me._A1_A_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A1_A_BEFORE_START_WORK, value) = false) Then
				Me.OnA1_A_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A1_A_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A1_A_BEFORE_START_WORK")
				Me.OnA1_A_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_A_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_A_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A1_A_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_A_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA1_A_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_A_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A1_A_BEFORE_START_WORK_NOTE")
				Me.OnA1_A_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_3_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A1_3_BEFORE_IMPORT() As String
		Get
			Return Me._A1_3_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A1_3_BEFORE_IMPORT, value) = false) Then
				Me.OnA1_3_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A1_3_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A1_3_BEFORE_IMPORT")
				Me.OnA1_3_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_3_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_3_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A1_3_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_3_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA1_3_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_3_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A1_3_BEFORE_IMPORT_NOTE")
				Me.OnA1_3_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_3_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A1_3_BEFORE_START_WORK() As String
		Get
			Return Me._A1_3_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A1_3_BEFORE_START_WORK, value) = false) Then
				Me.OnA1_3_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A1_3_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A1_3_BEFORE_START_WORK")
				Me.OnA1_3_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_3_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_3_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A1_3_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_3_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA1_3_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_3_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A1_3_BEFORE_START_WORK_NOTE")
				Me.OnA1_3_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_4_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A1_4_BEFORE_IMPORT() As String
		Get
			Return Me._A1_4_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A1_4_BEFORE_IMPORT, value) = false) Then
				Me.OnA1_4_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A1_4_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A1_4_BEFORE_IMPORT")
				Me.OnA1_4_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_4_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_4_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A1_4_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_4_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA1_4_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_4_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A1_4_BEFORE_IMPORT_NOTE")
				Me.OnA1_4_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_4_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A1_4_BEFORE_START_WORK() As String
		Get
			Return Me._A1_4_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A1_4_BEFORE_START_WORK, value) = false) Then
				Me.OnA1_4_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A1_4_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A1_4_BEFORE_START_WORK")
				Me.OnA1_4_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_4_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_4_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A1_4_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_4_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA1_4_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_4_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A1_4_BEFORE_START_WORK_NOTE")
				Me.OnA1_4_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_5_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A1_5_BEFORE_IMPORT() As String
		Get
			Return Me._A1_5_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A1_5_BEFORE_IMPORT, value) = false) Then
				Me.OnA1_5_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A1_5_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A1_5_BEFORE_IMPORT")
				Me.OnA1_5_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_5_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_5_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A1_5_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_5_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA1_5_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_5_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A1_5_BEFORE_IMPORT_NOTE")
				Me.OnA1_5_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_5_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A1_5_BEFORE_START_WORK() As String
		Get
			Return Me._A1_5_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A1_5_BEFORE_START_WORK, value) = false) Then
				Me.OnA1_5_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A1_5_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A1_5_BEFORE_START_WORK")
				Me.OnA1_5_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_5_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_5_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A1_5_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_5_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA1_5_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_5_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A1_5_BEFORE_START_WORK_NOTE")
				Me.OnA1_5_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_6_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A1_6_BEFORE_IMPORT() As String
		Get
			Return Me._A1_6_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A1_6_BEFORE_IMPORT, value) = false) Then
				Me.OnA1_6_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A1_6_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A1_6_BEFORE_IMPORT")
				Me.OnA1_6_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_6_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_6_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A1_6_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_6_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA1_6_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_6_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A1_6_BEFORE_IMPORT_NOTE")
				Me.OnA1_6_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_6_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A1_6_BEFORE_START_WORK() As String
		Get
			Return Me._A1_6_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A1_6_BEFORE_START_WORK, value) = false) Then
				Me.OnA1_6_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A1_6_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A1_6_BEFORE_START_WORK")
				Me.OnA1_6_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_6_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_6_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A1_6_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_6_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA1_6_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_6_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A1_6_BEFORE_START_WORK_NOTE")
				Me.OnA1_6_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_7_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A1_7_BEFORE_IMPORT() As String
		Get
			Return Me._A1_7_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A1_7_BEFORE_IMPORT, value) = false) Then
				Me.OnA1_7_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A1_7_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A1_7_BEFORE_IMPORT")
				Me.OnA1_7_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_7_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_7_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A1_7_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_7_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA1_7_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_7_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A1_7_BEFORE_IMPORT_NOTE")
				Me.OnA1_7_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_7_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A1_7_BEFORE_START_WORK() As String
		Get
			Return Me._A1_7_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A1_7_BEFORE_START_WORK, value) = false) Then
				Me.OnA1_7_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A1_7_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A1_7_BEFORE_START_WORK")
				Me.OnA1_7_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_7_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_7_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A1_7_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_7_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA1_7_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_7_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A1_7_BEFORE_START_WORK_NOTE")
				Me.OnA1_7_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_8_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A1_8_BEFORE_IMPORT() As String
		Get
			Return Me._A1_8_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A1_8_BEFORE_IMPORT, value) = false) Then
				Me.OnA1_8_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A1_8_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A1_8_BEFORE_IMPORT")
				Me.OnA1_8_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_8_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_8_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A1_8_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_8_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA1_8_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_8_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A1_8_BEFORE_IMPORT_NOTE")
				Me.OnA1_8_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_8_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A1_8_BEFORE_START_WORK() As String
		Get
			Return Me._A1_8_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A1_8_BEFORE_START_WORK, value) = false) Then
				Me.OnA1_8_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A1_8_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A1_8_BEFORE_START_WORK")
				Me.OnA1_8_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_8_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_8_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A1_8_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_8_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA1_8_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_8_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A1_8_BEFORE_START_WORK_NOTE")
				Me.OnA1_8_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_9_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A1_9_BEFORE_IMPORT() As String
		Get
			Return Me._A1_9_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A1_9_BEFORE_IMPORT, value) = false) Then
				Me.OnA1_9_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A1_9_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A1_9_BEFORE_IMPORT")
				Me.OnA1_9_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_9_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_9_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A1_9_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_9_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA1_9_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_9_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A1_9_BEFORE_IMPORT_NOTE")
				Me.OnA1_9_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_9_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A1_9_BEFORE_START_WORK() As String
		Get
			Return Me._A1_9_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A1_9_BEFORE_START_WORK, value) = false) Then
				Me.OnA1_9_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A1_9_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A1_9_BEFORE_START_WORK")
				Me.OnA1_9_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_9_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_9_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A1_9_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_9_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA1_9_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_9_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A1_9_BEFORE_START_WORK_NOTE")
				Me.OnA1_9_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_10_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A1_10_BEFORE_IMPORT() As String
		Get
			Return Me._A1_10_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A1_10_BEFORE_IMPORT, value) = false) Then
				Me.OnA1_10_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A1_10_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A1_10_BEFORE_IMPORT")
				Me.OnA1_10_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_10_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_10_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A1_10_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_10_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA1_10_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_10_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A1_10_BEFORE_IMPORT_NOTE")
				Me.OnA1_10_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_10_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A1_10_BEFORE_START_WORK() As String
		Get
			Return Me._A1_10_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A1_10_BEFORE_START_WORK, value) = false) Then
				Me.OnA1_10_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A1_10_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A1_10_BEFORE_START_WORK")
				Me.OnA1_10_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_10_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_10_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A1_10_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_10_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA1_10_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_10_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A1_10_BEFORE_START_WORK_NOTE")
				Me.OnA1_10_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_11_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A1_11_BEFORE_IMPORT() As String
		Get
			Return Me._A1_11_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A1_11_BEFORE_IMPORT, value) = false) Then
				Me.OnA1_11_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A1_11_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A1_11_BEFORE_IMPORT")
				Me.OnA1_11_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_11_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_11_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A1_11_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_11_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA1_11_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_11_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A1_11_BEFORE_IMPORT_NOTE")
				Me.OnA1_11_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_11_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A1_11_BEFORE_START_WORK() As String
		Get
			Return Me._A1_11_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A1_11_BEFORE_START_WORK, value) = false) Then
				Me.OnA1_11_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A1_11_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A1_11_BEFORE_START_WORK")
				Me.OnA1_11_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A1_11_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A1_11_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A1_11_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A1_11_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA1_11_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A1_11_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A1_11_BEFORE_START_WORK_NOTE")
				Me.OnA1_11_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_1_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A2_1_BEFORE_IMPORT() As String
		Get
			Return Me._A2_1_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A2_1_BEFORE_IMPORT, value) = false) Then
				Me.OnA2_1_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A2_1_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A2_1_BEFORE_IMPORT")
				Me.OnA2_1_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_1_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A2_1_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A2_1_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A2_1_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA2_1_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A2_1_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A2_1_BEFORE_IMPORT_NOTE")
				Me.OnA2_1_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_1_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A2_1_BEFORE_START_WORK() As String
		Get
			Return Me._A2_1_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A2_1_BEFORE_START_WORK, value) = false) Then
				Me.OnA2_1_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A2_1_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A2_1_BEFORE_START_WORK")
				Me.OnA2_1_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_1_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A2_1_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A2_1_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A2_1_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA2_1_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A2_1_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A2_1_BEFORE_START_WORK_NOTE")
				Me.OnA2_1_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_2_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A2_2_BEFORE_IMPORT() As String
		Get
			Return Me._A2_2_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A2_2_BEFORE_IMPORT, value) = false) Then
				Me.OnA2_2_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A2_2_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A2_2_BEFORE_IMPORT")
				Me.OnA2_2_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_2_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A2_2_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A2_2_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A2_2_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA2_2_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A2_2_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A2_2_BEFORE_IMPORT_NOTE")
				Me.OnA2_2_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_2_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A2_2_BEFORE_START_WORK() As String
		Get
			Return Me._A2_2_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A2_2_BEFORE_START_WORK, value) = false) Then
				Me.OnA2_2_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A2_2_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A2_2_BEFORE_START_WORK")
				Me.OnA2_2_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_2_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A2_2_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A2_2_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A2_2_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA2_2_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A2_2_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A2_2_BEFORE_START_WORK_NOTE")
				Me.OnA2_2_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_3_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A2_3_BEFORE_IMPORT() As String
		Get
			Return Me._A2_3_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A2_3_BEFORE_IMPORT, value) = false) Then
				Me.OnA2_3_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A2_3_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A2_3_BEFORE_IMPORT")
				Me.OnA2_3_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_3_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A2_3_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A2_3_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A2_3_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA2_3_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A2_3_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A2_3_BEFORE_IMPORT_NOTE")
				Me.OnA2_3_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_3_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A2_3_BEFORE_START_WORK() As String
		Get
			Return Me._A2_3_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A2_3_BEFORE_START_WORK, value) = false) Then
				Me.OnA2_3_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A2_3_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A2_3_BEFORE_START_WORK")
				Me.OnA2_3_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_3_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A2_3_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A2_3_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A2_3_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA2_3_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A2_3_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A2_3_BEFORE_START_WORK_NOTE")
				Me.OnA2_3_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_4_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A2_4_BEFORE_IMPORT() As String
		Get
			Return Me._A2_4_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A2_4_BEFORE_IMPORT, value) = false) Then
				Me.OnA2_4_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A2_4_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A2_4_BEFORE_IMPORT")
				Me.OnA2_4_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_4_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A2_4_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A2_4_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A2_4_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA2_4_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A2_4_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A2_4_BEFORE_IMPORT_NOTE")
				Me.OnA2_4_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_4_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A2_4_BEFORE_START_WORK() As String
		Get
			Return Me._A2_4_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A2_4_BEFORE_START_WORK, value) = false) Then
				Me.OnA2_4_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A2_4_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A2_4_BEFORE_START_WORK")
				Me.OnA2_4_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_4_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A2_4_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A2_4_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A2_4_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA2_4_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A2_4_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A2_4_BEFORE_START_WORK_NOTE")
				Me.OnA2_4_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_5_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A2_5_BEFORE_IMPORT() As String
		Get
			Return Me._A2_5_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A2_5_BEFORE_IMPORT, value) = false) Then
				Me.OnA2_5_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A2_5_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A2_5_BEFORE_IMPORT")
				Me.OnA2_5_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_5_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A2_5_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A2_5_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A2_5_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA2_5_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A2_5_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A2_5_BEFORE_IMPORT_NOTE")
				Me.OnA2_5_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_5_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A2_5_BEFORE_START_WORK() As String
		Get
			Return Me._A2_5_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A2_5_BEFORE_START_WORK, value) = false) Then
				Me.OnA2_5_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A2_5_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A2_5_BEFORE_START_WORK")
				Me.OnA2_5_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_5_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A2_5_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A2_5_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A2_5_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA2_5_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A2_5_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A2_5_BEFORE_START_WORK_NOTE")
				Me.OnA2_5_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_6_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A2_6_BEFORE_IMPORT() As String
		Get
			Return Me._A2_6_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A2_6_BEFORE_IMPORT, value) = false) Then
				Me.OnA2_6_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A2_6_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A2_6_BEFORE_IMPORT")
				Me.OnA2_6_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_6_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A2_6_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A2_6_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A2_6_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA2_6_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A2_6_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A2_6_BEFORE_IMPORT_NOTE")
				Me.OnA2_6_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_6_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A2_6_BEFORE_START_WORK() As String
		Get
			Return Me._A2_6_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A2_6_BEFORE_START_WORK, value) = false) Then
				Me.OnA2_6_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A2_6_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A2_6_BEFORE_START_WORK")
				Me.OnA2_6_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_6_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A2_6_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A2_6_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A2_6_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA2_6_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A2_6_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A2_6_BEFORE_START_WORK_NOTE")
				Me.OnA2_6_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_7_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property A2_7_BEFORE_IMPORT() As String
		Get
			Return Me._A2_7_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._A2_7_BEFORE_IMPORT, value) = false) Then
				Me.OnA2_7_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._A2_7_BEFORE_IMPORT = value
				Me.SendPropertyChanged("A2_7_BEFORE_IMPORT")
				Me.OnA2_7_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_7_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property A2_7_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._A2_7_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._A2_7_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnA2_7_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A2_7_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("A2_7_BEFORE_IMPORT_NOTE")
				Me.OnA2_7_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_7_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property A2_7_BEFORE_START_WORK() As String
		Get
			Return Me._A2_7_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._A2_7_BEFORE_START_WORK, value) = false) Then
				Me.OnA2_7_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._A2_7_BEFORE_START_WORK = value
				Me.SendPropertyChanged("A2_7_BEFORE_START_WORK")
				Me.OnA2_7_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A2_7_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property A2_7_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._A2_7_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._A2_7_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnA2_7_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._A2_7_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("A2_7_BEFORE_START_WORK_NOTE")
				Me.OnA2_7_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_1_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property B1_1_BEFORE_IMPORT() As String
		Get
			Return Me._B1_1_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._B1_1_BEFORE_IMPORT, value) = false) Then
				Me.OnB1_1_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._B1_1_BEFORE_IMPORT = value
				Me.SendPropertyChanged("B1_1_BEFORE_IMPORT")
				Me.OnB1_1_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_1_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property B1_1_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._B1_1_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._B1_1_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnB1_1_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._B1_1_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("B1_1_BEFORE_IMPORT_NOTE")
				Me.OnB1_1_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_1_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property B1_1_BEFORE_START_WORK() As String
		Get
			Return Me._B1_1_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._B1_1_BEFORE_START_WORK, value) = false) Then
				Me.OnB1_1_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._B1_1_BEFORE_START_WORK = value
				Me.SendPropertyChanged("B1_1_BEFORE_START_WORK")
				Me.OnB1_1_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_1_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property B1_1_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._B1_1_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._B1_1_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnB1_1_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._B1_1_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("B1_1_BEFORE_START_WORK_NOTE")
				Me.OnB1_1_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_2_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property B1_2_BEFORE_IMPORT() As String
		Get
			Return Me._B1_2_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._B1_2_BEFORE_IMPORT, value) = false) Then
				Me.OnB1_2_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._B1_2_BEFORE_IMPORT = value
				Me.SendPropertyChanged("B1_2_BEFORE_IMPORT")
				Me.OnB1_2_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_2_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property B1_2_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._B1_2_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._B1_2_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnB1_2_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._B1_2_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("B1_2_BEFORE_IMPORT_NOTE")
				Me.OnB1_2_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_2_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property B1_2_BEFORE_START_WORK() As String
		Get
			Return Me._B1_2_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._B1_2_BEFORE_START_WORK, value) = false) Then
				Me.OnB1_2_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._B1_2_BEFORE_START_WORK = value
				Me.SendPropertyChanged("B1_2_BEFORE_START_WORK")
				Me.OnB1_2_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_2_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property B1_2_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._B1_2_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._B1_2_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnB1_2_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._B1_2_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("B1_2_BEFORE_START_WORK_NOTE")
				Me.OnB1_2_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_3_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property B1_3_BEFORE_IMPORT() As String
		Get
			Return Me._B1_3_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._B1_3_BEFORE_IMPORT, value) = false) Then
				Me.OnB1_3_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._B1_3_BEFORE_IMPORT = value
				Me.SendPropertyChanged("B1_3_BEFORE_IMPORT")
				Me.OnB1_3_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_3_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property B1_3_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._B1_3_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._B1_3_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnB1_3_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._B1_3_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("B1_3_BEFORE_IMPORT_NOTE")
				Me.OnB1_3_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_3_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property B1_3_BEFORE_START_WORK() As String
		Get
			Return Me._B1_3_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._B1_3_BEFORE_START_WORK, value) = false) Then
				Me.OnB1_3_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._B1_3_BEFORE_START_WORK = value
				Me.SendPropertyChanged("B1_3_BEFORE_START_WORK")
				Me.OnB1_3_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_3_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property B1_3_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._B1_3_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._B1_3_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnB1_3_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._B1_3_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("B1_3_BEFORE_START_WORK_NOTE")
				Me.OnB1_3_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_4_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property B1_4_BEFORE_IMPORT() As String
		Get
			Return Me._B1_4_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._B1_4_BEFORE_IMPORT, value) = false) Then
				Me.OnB1_4_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._B1_4_BEFORE_IMPORT = value
				Me.SendPropertyChanged("B1_4_BEFORE_IMPORT")
				Me.OnB1_4_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_4_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property B1_4_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._B1_4_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._B1_4_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnB1_4_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._B1_4_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("B1_4_BEFORE_IMPORT_NOTE")
				Me.OnB1_4_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_4_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property B1_4_BEFORE_START_WORK() As String
		Get
			Return Me._B1_4_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._B1_4_BEFORE_START_WORK, value) = false) Then
				Me.OnB1_4_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._B1_4_BEFORE_START_WORK = value
				Me.SendPropertyChanged("B1_4_BEFORE_START_WORK")
				Me.OnB1_4_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_4_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property B1_4_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._B1_4_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._B1_4_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnB1_4_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._B1_4_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("B1_4_BEFORE_START_WORK_NOTE")
				Me.OnB1_4_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_5_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property B1_5_BEFORE_IMPORT() As String
		Get
			Return Me._B1_5_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._B1_5_BEFORE_IMPORT, value) = false) Then
				Me.OnB1_5_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._B1_5_BEFORE_IMPORT = value
				Me.SendPropertyChanged("B1_5_BEFORE_IMPORT")
				Me.OnB1_5_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_5_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property B1_5_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._B1_5_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._B1_5_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnB1_5_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._B1_5_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("B1_5_BEFORE_IMPORT_NOTE")
				Me.OnB1_5_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_5_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property B1_5_BEFORE_START_WORK() As String
		Get
			Return Me._B1_5_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._B1_5_BEFORE_START_WORK, value) = false) Then
				Me.OnB1_5_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._B1_5_BEFORE_START_WORK = value
				Me.SendPropertyChanged("B1_5_BEFORE_START_WORK")
				Me.OnB1_5_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B1_5_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property B1_5_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._B1_5_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._B1_5_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnB1_5_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._B1_5_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("B1_5_BEFORE_START_WORK_NOTE")
				Me.OnB1_5_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_1_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C1_1_BEFORE_IMPORT() As String
		Get
			Return Me._C1_1_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C1_1_BEFORE_IMPORT, value) = false) Then
				Me.OnC1_1_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C1_1_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C1_1_BEFORE_IMPORT")
				Me.OnC1_1_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_1_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_1_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C1_1_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_1_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC1_1_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_1_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C1_1_BEFORE_IMPORT_NOTE")
				Me.OnC1_1_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_1_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C1_1_BEFORE_START_WORK() As String
		Get
			Return Me._C1_1_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C1_1_BEFORE_START_WORK, value) = false) Then
				Me.OnC1_1_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C1_1_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C1_1_BEFORE_START_WORK")
				Me.OnC1_1_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_1_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_1_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C1_1_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_1_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC1_1_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_1_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C1_1_BEFORE_START_WORK_NOTE")
				Me.OnC1_1_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_2_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C1_2_BEFORE_IMPORT() As String
		Get
			Return Me._C1_2_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C1_2_BEFORE_IMPORT, value) = false) Then
				Me.OnC1_2_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C1_2_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C1_2_BEFORE_IMPORT")
				Me.OnC1_2_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_2_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_2_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C1_2_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_2_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC1_2_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_2_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C1_2_BEFORE_IMPORT_NOTE")
				Me.OnC1_2_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_2_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C1_2_BEFORE_START_WORK() As String
		Get
			Return Me._C1_2_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C1_2_BEFORE_START_WORK, value) = false) Then
				Me.OnC1_2_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C1_2_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C1_2_BEFORE_START_WORK")
				Me.OnC1_2_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_2_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_2_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C1_2_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_2_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC1_2_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_2_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C1_2_BEFORE_START_WORK_NOTE")
				Me.OnC1_2_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_3_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C1_3_BEFORE_IMPORT() As String
		Get
			Return Me._C1_3_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C1_3_BEFORE_IMPORT, value) = false) Then
				Me.OnC1_3_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C1_3_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C1_3_BEFORE_IMPORT")
				Me.OnC1_3_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_3_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_3_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C1_3_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_3_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC1_3_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_3_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C1_3_BEFORE_IMPORT_NOTE")
				Me.OnC1_3_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_3_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C1_3_BEFORE_START_WORK() As String
		Get
			Return Me._C1_3_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C1_3_BEFORE_START_WORK, value) = false) Then
				Me.OnC1_3_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C1_3_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C1_3_BEFORE_START_WORK")
				Me.OnC1_3_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_3_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_3_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C1_3_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_3_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC1_3_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_3_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C1_3_BEFORE_START_WORK_NOTE")
				Me.OnC1_3_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_4_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C1_4_BEFORE_IMPORT() As String
		Get
			Return Me._C1_4_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C1_4_BEFORE_IMPORT, value) = false) Then
				Me.OnC1_4_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C1_4_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C1_4_BEFORE_IMPORT")
				Me.OnC1_4_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_4_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_4_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C1_4_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_4_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC1_4_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_4_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C1_4_BEFORE_IMPORT_NOTE")
				Me.OnC1_4_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_4_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C1_4_BEFORE_START_WORK() As String
		Get
			Return Me._C1_4_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C1_4_BEFORE_START_WORK, value) = false) Then
				Me.OnC1_4_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C1_4_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C1_4_BEFORE_START_WORK")
				Me.OnC1_4_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_4_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_4_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C1_4_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_4_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC1_4_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_4_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C1_4_BEFORE_START_WORK_NOTE")
				Me.OnC1_4_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_5_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C1_5_BEFORE_IMPORT() As String
		Get
			Return Me._C1_5_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C1_5_BEFORE_IMPORT, value) = false) Then
				Me.OnC1_5_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C1_5_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C1_5_BEFORE_IMPORT")
				Me.OnC1_5_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_5_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_5_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C1_5_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_5_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC1_5_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_5_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C1_5_BEFORE_IMPORT_NOTE")
				Me.OnC1_5_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_5_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C1_5_BEFORE_START_WORK() As String
		Get
			Return Me._C1_5_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C1_5_BEFORE_START_WORK, value) = false) Then
				Me.OnC1_5_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C1_5_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C1_5_BEFORE_START_WORK")
				Me.OnC1_5_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_5_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_5_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C1_5_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_5_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC1_5_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_5_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C1_5_BEFORE_START_WORK_NOTE")
				Me.OnC1_5_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_6_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C1_6_BEFORE_IMPORT() As String
		Get
			Return Me._C1_6_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C1_6_BEFORE_IMPORT, value) = false) Then
				Me.OnC1_6_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C1_6_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C1_6_BEFORE_IMPORT")
				Me.OnC1_6_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_6_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_6_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C1_6_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_6_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC1_6_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_6_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C1_6_BEFORE_IMPORT_NOTE")
				Me.OnC1_6_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_6_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C1_6_BEFORE_START_WORK() As String
		Get
			Return Me._C1_6_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C1_6_BEFORE_START_WORK, value) = false) Then
				Me.OnC1_6_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C1_6_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C1_6_BEFORE_START_WORK")
				Me.OnC1_6_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_6_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_6_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C1_6_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_6_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC1_6_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_6_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C1_6_BEFORE_START_WORK_NOTE")
				Me.OnC1_6_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_7_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C1_7_BEFORE_IMPORT() As String
		Get
			Return Me._C1_7_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C1_7_BEFORE_IMPORT, value) = false) Then
				Me.OnC1_7_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C1_7_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C1_7_BEFORE_IMPORT")
				Me.OnC1_7_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_7_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_7_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C1_7_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_7_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC1_7_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_7_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C1_7_BEFORE_IMPORT_NOTE")
				Me.OnC1_7_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_7_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C1_7_BEFORE_START_WORK() As String
		Get
			Return Me._C1_7_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C1_7_BEFORE_START_WORK, value) = false) Then
				Me.OnC1_7_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C1_7_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C1_7_BEFORE_START_WORK")
				Me.OnC1_7_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_7_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_7_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C1_7_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_7_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC1_7_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_7_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C1_7_BEFORE_START_WORK_NOTE")
				Me.OnC1_7_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_8_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C1_8_BEFORE_IMPORT() As String
		Get
			Return Me._C1_8_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C1_8_BEFORE_IMPORT, value) = false) Then
				Me.OnC1_8_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C1_8_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C1_8_BEFORE_IMPORT")
				Me.OnC1_8_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_8_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_8_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C1_8_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_8_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC1_8_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_8_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C1_8_BEFORE_IMPORT_NOTE")
				Me.OnC1_8_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_8_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C1_8_BEFORE_START_WORK() As String
		Get
			Return Me._C1_8_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C1_8_BEFORE_START_WORK, value) = false) Then
				Me.OnC1_8_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C1_8_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C1_8_BEFORE_START_WORK")
				Me.OnC1_8_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_8_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_8_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C1_8_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_8_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC1_8_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_8_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C1_8_BEFORE_START_WORK_NOTE")
				Me.OnC1_8_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_9_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C1_9_BEFORE_IMPORT() As String
		Get
			Return Me._C1_9_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C1_9_BEFORE_IMPORT, value) = false) Then
				Me.OnC1_9_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C1_9_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C1_9_BEFORE_IMPORT")
				Me.OnC1_9_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_9_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_9_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C1_9_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_9_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC1_9_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_9_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C1_9_BEFORE_IMPORT_NOTE")
				Me.OnC1_9_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_9_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C1_9_BEFORE_START_WORK() As String
		Get
			Return Me._C1_9_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C1_9_BEFORE_START_WORK, value) = false) Then
				Me.OnC1_9_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C1_9_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C1_9_BEFORE_START_WORK")
				Me.OnC1_9_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_9_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_9_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C1_9_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_9_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC1_9_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_9_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C1_9_BEFORE_START_WORK_NOTE")
				Me.OnC1_9_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_10_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C1_10_BEFORE_IMPORT() As String
		Get
			Return Me._C1_10_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C1_10_BEFORE_IMPORT, value) = false) Then
				Me.OnC1_10_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C1_10_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C1_10_BEFORE_IMPORT")
				Me.OnC1_10_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_10_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_10_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C1_10_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_10_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC1_10_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_10_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C1_10_BEFORE_IMPORT_NOTE")
				Me.OnC1_10_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_10_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C1_10_BEFORE_START_WORK() As String
		Get
			Return Me._C1_10_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C1_10_BEFORE_START_WORK, value) = false) Then
				Me.OnC1_10_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C1_10_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C1_10_BEFORE_START_WORK")
				Me.OnC1_10_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C1_10_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C1_10_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C1_10_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C1_10_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC1_10_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C1_10_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C1_10_BEFORE_START_WORK_NOTE")
				Me.OnC1_10_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_A_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C2_A_BEFORE_IMPORT() As String
		Get
			Return Me._C2_A_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C2_A_BEFORE_IMPORT, value) = false) Then
				Me.OnC2_A_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C2_A_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C2_A_BEFORE_IMPORT")
				Me.OnC2_A_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_A_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C2_A_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C2_A_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C2_A_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC2_A_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C2_A_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C2_A_BEFORE_IMPORT_NOTE")
				Me.OnC2_A_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_A_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C2_A_BEFORE_START_WORK() As String
		Get
			Return Me._C2_A_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C2_A_BEFORE_START_WORK, value) = false) Then
				Me.OnC2_A_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C2_A_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C2_A_BEFORE_START_WORK")
				Me.OnC2_A_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_A_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C2_A_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C2_A_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C2_A_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC2_A_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C2_A_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C2_A_BEFORE_START_WORK_NOTE")
				Me.OnC2_A_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_B_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C2_B_BEFORE_IMPORT() As String
		Get
			Return Me._C2_B_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C2_B_BEFORE_IMPORT, value) = false) Then
				Me.OnC2_B_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C2_B_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C2_B_BEFORE_IMPORT")
				Me.OnC2_B_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_B_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C2_B_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C2_B_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C2_B_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC2_B_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C2_B_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C2_B_BEFORE_IMPORT_NOTE")
				Me.OnC2_B_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_B_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C2_B_BEFORE_START_WORK() As String
		Get
			Return Me._C2_B_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C2_B_BEFORE_START_WORK, value) = false) Then
				Me.OnC2_B_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C2_B_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C2_B_BEFORE_START_WORK")
				Me.OnC2_B_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_B_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C2_B_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C2_B_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C2_B_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC2_B_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C2_B_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C2_B_BEFORE_START_WORK_NOTE")
				Me.OnC2_B_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_C_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C2_C_BEFORE_IMPORT() As String
		Get
			Return Me._C2_C_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C2_C_BEFORE_IMPORT, value) = false) Then
				Me.OnC2_C_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C2_C_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C2_C_BEFORE_IMPORT")
				Me.OnC2_C_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_C_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C2_C_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C2_C_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C2_C_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC2_C_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C2_C_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C2_C_BEFORE_IMPORT_NOTE")
				Me.OnC2_C_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_C_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C2_C_BEFORE_START_WORK() As String
		Get
			Return Me._C2_C_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C2_C_BEFORE_START_WORK, value) = false) Then
				Me.OnC2_C_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C2_C_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C2_C_BEFORE_START_WORK")
				Me.OnC2_C_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_C_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C2_C_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C2_C_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C2_C_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC2_C_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C2_C_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C2_C_BEFORE_START_WORK_NOTE")
				Me.OnC2_C_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_D_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C2_D_BEFORE_IMPORT() As String
		Get
			Return Me._C2_D_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C2_D_BEFORE_IMPORT, value) = false) Then
				Me.OnC2_D_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C2_D_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C2_D_BEFORE_IMPORT")
				Me.OnC2_D_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_D_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C2_D_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C2_D_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C2_D_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC2_D_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C2_D_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C2_D_BEFORE_IMPORT_NOTE")
				Me.OnC2_D_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_D_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C2_D_BEFORE_START_WORK() As String
		Get
			Return Me._C2_D_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C2_D_BEFORE_START_WORK, value) = false) Then
				Me.OnC2_D_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C2_D_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C2_D_BEFORE_START_WORK")
				Me.OnC2_D_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_D_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C2_D_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C2_D_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C2_D_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC2_D_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C2_D_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C2_D_BEFORE_START_WORK_NOTE")
				Me.OnC2_D_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_E_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C2_E_BEFORE_IMPORT() As String
		Get
			Return Me._C2_E_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C2_E_BEFORE_IMPORT, value) = false) Then
				Me.OnC2_E_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C2_E_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C2_E_BEFORE_IMPORT")
				Me.OnC2_E_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_E_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C2_E_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C2_E_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C2_E_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC2_E_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C2_E_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C2_E_BEFORE_IMPORT_NOTE")
				Me.OnC2_E_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_E_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C2_E_BEFORE_START_WORK() As String
		Get
			Return Me._C2_E_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C2_E_BEFORE_START_WORK, value) = false) Then
				Me.OnC2_E_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C2_E_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C2_E_BEFORE_START_WORK")
				Me.OnC2_E_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_E_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C2_E_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C2_E_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C2_E_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC2_E_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C2_E_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C2_E_BEFORE_START_WORK_NOTE")
				Me.OnC2_E_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_F_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C2_F_BEFORE_IMPORT() As String
		Get
			Return Me._C2_F_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C2_F_BEFORE_IMPORT, value) = false) Then
				Me.OnC2_F_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C2_F_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C2_F_BEFORE_IMPORT")
				Me.OnC2_F_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_F_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C2_F_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C2_F_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C2_F_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC2_F_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C2_F_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C2_F_BEFORE_IMPORT_NOTE")
				Me.OnC2_F_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_F_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C2_F_BEFORE_START_WORK() As String
		Get
			Return Me._C2_F_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C2_F_BEFORE_START_WORK, value) = false) Then
				Me.OnC2_F_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C2_F_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C2_F_BEFORE_START_WORK")
				Me.OnC2_F_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_F_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C2_F_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C2_F_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C2_F_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC2_F_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C2_F_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C2_F_BEFORE_START_WORK_NOTE")
				Me.OnC2_F_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_G_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C2_G_BEFORE_IMPORT() As String
		Get
			Return Me._C2_G_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C2_G_BEFORE_IMPORT, value) = false) Then
				Me.OnC2_G_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C2_G_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C2_G_BEFORE_IMPORT")
				Me.OnC2_G_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_G_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C2_G_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C2_G_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C2_G_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC2_G_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C2_G_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C2_G_BEFORE_IMPORT_NOTE")
				Me.OnC2_G_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_G_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C2_G_BEFORE_START_WORK() As String
		Get
			Return Me._C2_G_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C2_G_BEFORE_START_WORK, value) = false) Then
				Me.OnC2_G_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C2_G_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C2_G_BEFORE_START_WORK")
				Me.OnC2_G_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C2_G_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C2_G_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C2_G_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C2_G_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC2_G_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C2_G_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C2_G_BEFORE_START_WORK_NOTE")
				Me.OnC2_G_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_A_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C3_A_BEFORE_IMPORT() As String
		Get
			Return Me._C3_A_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C3_A_BEFORE_IMPORT, value) = false) Then
				Me.OnC3_A_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C3_A_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C3_A_BEFORE_IMPORT")
				Me.OnC3_A_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_A_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C3_A_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C3_A_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C3_A_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC3_A_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C3_A_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C3_A_BEFORE_IMPORT_NOTE")
				Me.OnC3_A_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_A_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C3_A_BEFORE_START_WORK() As String
		Get
			Return Me._C3_A_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C3_A_BEFORE_START_WORK, value) = false) Then
				Me.OnC3_A_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C3_A_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C3_A_BEFORE_START_WORK")
				Me.OnC3_A_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_A_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C3_A_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C3_A_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C3_A_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC3_A_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C3_A_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C3_A_BEFORE_START_WORK_NOTE")
				Me.OnC3_A_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_B_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C3_B_BEFORE_IMPORT() As String
		Get
			Return Me._C3_B_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C3_B_BEFORE_IMPORT, value) = false) Then
				Me.OnC3_B_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C3_B_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C3_B_BEFORE_IMPORT")
				Me.OnC3_B_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_B_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C3_B_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C3_B_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C3_B_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC3_B_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C3_B_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C3_B_BEFORE_IMPORT_NOTE")
				Me.OnC3_B_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_B_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C3_B_BEFORE_START_WORK() As String
		Get
			Return Me._C3_B_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C3_B_BEFORE_START_WORK, value) = false) Then
				Me.OnC3_B_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C3_B_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C3_B_BEFORE_START_WORK")
				Me.OnC3_B_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_B_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C3_B_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C3_B_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C3_B_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC3_B_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C3_B_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C3_B_BEFORE_START_WORK_NOTE")
				Me.OnC3_B_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_C_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C3_C_BEFORE_IMPORT() As String
		Get
			Return Me._C3_C_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C3_C_BEFORE_IMPORT, value) = false) Then
				Me.OnC3_C_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C3_C_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C3_C_BEFORE_IMPORT")
				Me.OnC3_C_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_C_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C3_C_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C3_C_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C3_C_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC3_C_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C3_C_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C3_C_BEFORE_IMPORT_NOTE")
				Me.OnC3_C_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_C_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C3_C_BEFORE_START_WORK() As String
		Get
			Return Me._C3_C_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C3_C_BEFORE_START_WORK, value) = false) Then
				Me.OnC3_C_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C3_C_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C3_C_BEFORE_START_WORK")
				Me.OnC3_C_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_C_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C3_C_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C3_C_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C3_C_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC3_C_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C3_C_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C3_C_BEFORE_START_WORK_NOTE")
				Me.OnC3_C_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_D_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C3_D_BEFORE_IMPORT() As String
		Get
			Return Me._C3_D_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C3_D_BEFORE_IMPORT, value) = false) Then
				Me.OnC3_D_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C3_D_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C3_D_BEFORE_IMPORT")
				Me.OnC3_D_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_D_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C3_D_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C3_D_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C3_D_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC3_D_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C3_D_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C3_D_BEFORE_IMPORT_NOTE")
				Me.OnC3_D_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_D_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C3_D_BEFORE_START_WORK() As String
		Get
			Return Me._C3_D_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C3_D_BEFORE_START_WORK, value) = false) Then
				Me.OnC3_D_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C3_D_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C3_D_BEFORE_START_WORK")
				Me.OnC3_D_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_D_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C3_D_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C3_D_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C3_D_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC3_D_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C3_D_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C3_D_BEFORE_START_WORK_NOTE")
				Me.OnC3_D_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_E_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C3_E_BEFORE_IMPORT() As String
		Get
			Return Me._C3_E_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C3_E_BEFORE_IMPORT, value) = false) Then
				Me.OnC3_E_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C3_E_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C3_E_BEFORE_IMPORT")
				Me.OnC3_E_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_E_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C3_E_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C3_E_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C3_E_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC3_E_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C3_E_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C3_E_BEFORE_IMPORT_NOTE")
				Me.OnC3_E_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_E_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C3_E_BEFORE_START_WORK() As String
		Get
			Return Me._C3_E_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C3_E_BEFORE_START_WORK, value) = false) Then
				Me.OnC3_E_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C3_E_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C3_E_BEFORE_START_WORK")
				Me.OnC3_E_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_E_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C3_E_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C3_E_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C3_E_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC3_E_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C3_E_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C3_E_BEFORE_START_WORK_NOTE")
				Me.OnC3_E_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_E_CHK1", DbType:="Bit")>  _
	Public Property C3_E_CHK1() As System.Nullable(Of Boolean)
		Get
			Return Me._C3_E_CHK1
		End Get
		Set
			If (Me._C3_E_CHK1.Equals(value) = false) Then
				Me.OnC3_E_CHK1Changing(value)
				Me.SendPropertyChanging
				Me._C3_E_CHK1 = value
				Me.SendPropertyChanged("C3_E_CHK1")
				Me.OnC3_E_CHK1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_E_CHK2", DbType:="Bit")>  _
	Public Property C3_E_CHK2() As System.Nullable(Of Boolean)
		Get
			Return Me._C3_E_CHK2
		End Get
		Set
			If (Me._C3_E_CHK2.Equals(value) = false) Then
				Me.OnC3_E_CHK2Changing(value)
				Me.SendPropertyChanging
				Me._C3_E_CHK2 = value
				Me.SendPropertyChanged("C3_E_CHK2")
				Me.OnC3_E_CHK2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_E_CHK3", DbType:="Bit")>  _
	Public Property C3_E_CHK3() As System.Nullable(Of Boolean)
		Get
			Return Me._C3_E_CHK3
		End Get
		Set
			If (Me._C3_E_CHK3.Equals(value) = false) Then
				Me.OnC3_E_CHK3Changing(value)
				Me.SendPropertyChanging
				Me._C3_E_CHK3 = value
				Me.SendPropertyChanged("C3_E_CHK3")
				Me.OnC3_E_CHK3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_F_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C3_F_BEFORE_IMPORT() As String
		Get
			Return Me._C3_F_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C3_F_BEFORE_IMPORT, value) = false) Then
				Me.OnC3_F_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C3_F_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C3_F_BEFORE_IMPORT")
				Me.OnC3_F_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_F_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C3_F_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C3_F_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C3_F_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC3_F_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C3_F_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C3_F_BEFORE_IMPORT_NOTE")
				Me.OnC3_F_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_F_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C3_F_BEFORE_START_WORK() As String
		Get
			Return Me._C3_F_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C3_F_BEFORE_START_WORK, value) = false) Then
				Me.OnC3_F_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C3_F_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C3_F_BEFORE_START_WORK")
				Me.OnC3_F_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C3_F_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C3_F_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C3_F_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C3_F_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC3_F_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C3_F_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C3_F_BEFORE_START_WORK_NOTE")
				Me.OnC3_F_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C4_A_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C4_A_BEFORE_IMPORT() As String
		Get
			Return Me._C4_A_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C4_A_BEFORE_IMPORT, value) = false) Then
				Me.OnC4_A_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C4_A_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C4_A_BEFORE_IMPORT")
				Me.OnC4_A_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C4_A_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C4_A_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C4_A_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C4_A_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC4_A_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C4_A_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C4_A_BEFORE_IMPORT_NOTE")
				Me.OnC4_A_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C4_A_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C4_A_BEFORE_START_WORK() As String
		Get
			Return Me._C4_A_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C4_A_BEFORE_START_WORK, value) = false) Then
				Me.OnC4_A_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C4_A_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C4_A_BEFORE_START_WORK")
				Me.OnC4_A_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C4_A_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C4_A_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C4_A_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C4_A_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC4_A_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C4_A_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C4_A_BEFORE_START_WORK_NOTE")
				Me.OnC4_A_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C4_B_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C4_B_BEFORE_IMPORT() As String
		Get
			Return Me._C4_B_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C4_B_BEFORE_IMPORT, value) = false) Then
				Me.OnC4_B_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C4_B_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C4_B_BEFORE_IMPORT")
				Me.OnC4_B_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C4_B_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C4_B_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C4_B_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C4_B_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC4_B_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C4_B_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C4_B_BEFORE_IMPORT_NOTE")
				Me.OnC4_B_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C4_B_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C4_B_BEFORE_START_WORK() As String
		Get
			Return Me._C4_B_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C4_B_BEFORE_START_WORK, value) = false) Then
				Me.OnC4_B_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C4_B_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C4_B_BEFORE_START_WORK")
				Me.OnC4_B_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C4_B_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C4_B_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C4_B_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C4_B_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC4_B_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C4_B_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C4_B_BEFORE_START_WORK_NOTE")
				Me.OnC4_B_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C4_C_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property C4_C_BEFORE_IMPORT() As String
		Get
			Return Me._C4_C_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._C4_C_BEFORE_IMPORT, value) = false) Then
				Me.OnC4_C_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._C4_C_BEFORE_IMPORT = value
				Me.SendPropertyChanged("C4_C_BEFORE_IMPORT")
				Me.OnC4_C_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C4_C_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property C4_C_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._C4_C_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._C4_C_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnC4_C_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C4_C_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("C4_C_BEFORE_IMPORT_NOTE")
				Me.OnC4_C_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C4_C_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property C4_C_BEFORE_START_WORK() As String
		Get
			Return Me._C4_C_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._C4_C_BEFORE_START_WORK, value) = false) Then
				Me.OnC4_C_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._C4_C_BEFORE_START_WORK = value
				Me.SendPropertyChanged("C4_C_BEFORE_START_WORK")
				Me.OnC4_C_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C4_C_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property C4_C_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._C4_C_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._C4_C_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnC4_C_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._C4_C_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("C4_C_BEFORE_START_WORK_NOTE")
				Me.OnC4_C_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_A_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property D_A_BEFORE_IMPORT() As String
		Get
			Return Me._D_A_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._D_A_BEFORE_IMPORT, value) = false) Then
				Me.OnD_A_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._D_A_BEFORE_IMPORT = value
				Me.SendPropertyChanged("D_A_BEFORE_IMPORT")
				Me.OnD_A_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_A_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property D_A_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._D_A_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._D_A_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnD_A_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._D_A_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("D_A_BEFORE_IMPORT_NOTE")
				Me.OnD_A_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_A_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property D_A_BEFORE_START_WORK() As String
		Get
			Return Me._D_A_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._D_A_BEFORE_START_WORK, value) = false) Then
				Me.OnD_A_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._D_A_BEFORE_START_WORK = value
				Me.SendPropertyChanged("D_A_BEFORE_START_WORK")
				Me.OnD_A_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_A_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property D_A_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._D_A_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._D_A_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnD_A_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._D_A_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("D_A_BEFORE_START_WORK_NOTE")
				Me.OnD_A_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_B_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property D_B_BEFORE_IMPORT() As String
		Get
			Return Me._D_B_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._D_B_BEFORE_IMPORT, value) = false) Then
				Me.OnD_B_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._D_B_BEFORE_IMPORT = value
				Me.SendPropertyChanged("D_B_BEFORE_IMPORT")
				Me.OnD_B_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_B_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property D_B_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._D_B_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._D_B_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnD_B_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._D_B_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("D_B_BEFORE_IMPORT_NOTE")
				Me.OnD_B_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_B_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property D_B_BEFORE_START_WORK() As String
		Get
			Return Me._D_B_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._D_B_BEFORE_START_WORK, value) = false) Then
				Me.OnD_B_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._D_B_BEFORE_START_WORK = value
				Me.SendPropertyChanged("D_B_BEFORE_START_WORK")
				Me.OnD_B_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_B_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property D_B_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._D_B_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._D_B_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnD_B_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._D_B_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("D_B_BEFORE_START_WORK_NOTE")
				Me.OnD_B_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_C_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property D_C_BEFORE_IMPORT() As String
		Get
			Return Me._D_C_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._D_C_BEFORE_IMPORT, value) = false) Then
				Me.OnD_C_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._D_C_BEFORE_IMPORT = value
				Me.SendPropertyChanged("D_C_BEFORE_IMPORT")
				Me.OnD_C_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_C_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property D_C_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._D_C_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._D_C_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnD_C_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._D_C_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("D_C_BEFORE_IMPORT_NOTE")
				Me.OnD_C_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_C_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property D_C_BEFORE_START_WORK() As String
		Get
			Return Me._D_C_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._D_C_BEFORE_START_WORK, value) = false) Then
				Me.OnD_C_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._D_C_BEFORE_START_WORK = value
				Me.SendPropertyChanged("D_C_BEFORE_START_WORK")
				Me.OnD_C_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_C_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property D_C_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._D_C_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._D_C_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnD_C_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._D_C_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("D_C_BEFORE_START_WORK_NOTE")
				Me.OnD_C_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_D_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property D_D_BEFORE_IMPORT() As String
		Get
			Return Me._D_D_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._D_D_BEFORE_IMPORT, value) = false) Then
				Me.OnD_D_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._D_D_BEFORE_IMPORT = value
				Me.SendPropertyChanged("D_D_BEFORE_IMPORT")
				Me.OnD_D_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_D_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property D_D_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._D_D_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._D_D_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnD_D_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._D_D_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("D_D_BEFORE_IMPORT_NOTE")
				Me.OnD_D_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_D_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property D_D_BEFORE_START_WORK() As String
		Get
			Return Me._D_D_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._D_D_BEFORE_START_WORK, value) = false) Then
				Me.OnD_D_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._D_D_BEFORE_START_WORK = value
				Me.SendPropertyChanged("D_D_BEFORE_START_WORK")
				Me.OnD_D_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_D_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property D_D_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._D_D_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._D_D_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnD_D_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._D_D_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("D_D_BEFORE_START_WORK_NOTE")
				Me.OnD_D_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_E_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property D_E_BEFORE_IMPORT() As String
		Get
			Return Me._D_E_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._D_E_BEFORE_IMPORT, value) = false) Then
				Me.OnD_E_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._D_E_BEFORE_IMPORT = value
				Me.SendPropertyChanged("D_E_BEFORE_IMPORT")
				Me.OnD_E_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_E_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property D_E_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._D_E_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._D_E_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnD_E_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._D_E_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("D_E_BEFORE_IMPORT_NOTE")
				Me.OnD_E_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_E_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property D_E_BEFORE_START_WORK() As String
		Get
			Return Me._D_E_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._D_E_BEFORE_START_WORK, value) = false) Then
				Me.OnD_E_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._D_E_BEFORE_START_WORK = value
				Me.SendPropertyChanged("D_E_BEFORE_START_WORK")
				Me.OnD_E_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_E_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property D_E_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._D_E_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._D_E_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnD_E_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._D_E_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("D_E_BEFORE_START_WORK_NOTE")
				Me.OnD_E_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_F_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property D_F_BEFORE_IMPORT() As String
		Get
			Return Me._D_F_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._D_F_BEFORE_IMPORT, value) = false) Then
				Me.OnD_F_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._D_F_BEFORE_IMPORT = value
				Me.SendPropertyChanged("D_F_BEFORE_IMPORT")
				Me.OnD_F_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_F_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property D_F_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._D_F_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._D_F_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnD_F_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._D_F_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("D_F_BEFORE_IMPORT_NOTE")
				Me.OnD_F_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_F_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property D_F_BEFORE_START_WORK() As String
		Get
			Return Me._D_F_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._D_F_BEFORE_START_WORK, value) = false) Then
				Me.OnD_F_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._D_F_BEFORE_START_WORK = value
				Me.SendPropertyChanged("D_F_BEFORE_START_WORK")
				Me.OnD_F_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_F_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property D_F_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._D_F_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._D_F_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnD_F_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._D_F_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("D_F_BEFORE_START_WORK_NOTE")
				Me.OnD_F_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_G_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property D_G_BEFORE_IMPORT() As String
		Get
			Return Me._D_G_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._D_G_BEFORE_IMPORT, value) = false) Then
				Me.OnD_G_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._D_G_BEFORE_IMPORT = value
				Me.SendPropertyChanged("D_G_BEFORE_IMPORT")
				Me.OnD_G_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_G_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property D_G_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._D_G_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._D_G_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnD_G_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._D_G_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("D_G_BEFORE_IMPORT_NOTE")
				Me.OnD_G_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_G_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property D_G_BEFORE_START_WORK() As String
		Get
			Return Me._D_G_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._D_G_BEFORE_START_WORK, value) = false) Then
				Me.OnD_G_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._D_G_BEFORE_START_WORK = value
				Me.SendPropertyChanged("D_G_BEFORE_START_WORK")
				Me.OnD_G_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_D_G_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property D_G_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._D_G_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._D_G_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnD_G_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._D_G_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("D_G_BEFORE_START_WORK_NOTE")
				Me.OnD_G_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E1_A_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property E1_A_BEFORE_IMPORT() As String
		Get
			Return Me._E1_A_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._E1_A_BEFORE_IMPORT, value) = false) Then
				Me.OnE1_A_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._E1_A_BEFORE_IMPORT = value
				Me.SendPropertyChanged("E1_A_BEFORE_IMPORT")
				Me.OnE1_A_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E1_A_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property E1_A_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._E1_A_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._E1_A_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnE1_A_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E1_A_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("E1_A_BEFORE_IMPORT_NOTE")
				Me.OnE1_A_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E1_A_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property E1_A_BEFORE_START_WORK() As String
		Get
			Return Me._E1_A_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._E1_A_BEFORE_START_WORK, value) = false) Then
				Me.OnE1_A_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._E1_A_BEFORE_START_WORK = value
				Me.SendPropertyChanged("E1_A_BEFORE_START_WORK")
				Me.OnE1_A_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E1_A_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property E1_A_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._E1_A_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._E1_A_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnE1_A_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E1_A_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("E1_A_BEFORE_START_WORK_NOTE")
				Me.OnE1_A_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E1_B_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property E1_B_BEFORE_IMPORT() As String
		Get
			Return Me._E1_B_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._E1_B_BEFORE_IMPORT, value) = false) Then
				Me.OnE1_B_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._E1_B_BEFORE_IMPORT = value
				Me.SendPropertyChanged("E1_B_BEFORE_IMPORT")
				Me.OnE1_B_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E1_B_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property E1_B_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._E1_B_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._E1_B_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnE1_B_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E1_B_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("E1_B_BEFORE_IMPORT_NOTE")
				Me.OnE1_B_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E1_B_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property E1_B_BEFORE_START_WORK() As String
		Get
			Return Me._E1_B_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._E1_B_BEFORE_START_WORK, value) = false) Then
				Me.OnE1_B_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._E1_B_BEFORE_START_WORK = value
				Me.SendPropertyChanged("E1_B_BEFORE_START_WORK")
				Me.OnE1_B_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E1_B_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property E1_B_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._E1_B_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._E1_B_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnE1_B_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E1_B_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("E1_B_BEFORE_START_WORK_NOTE")
				Me.OnE1_B_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E2_A_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property E2_A_BEFORE_IMPORT() As String
		Get
			Return Me._E2_A_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._E2_A_BEFORE_IMPORT, value) = false) Then
				Me.OnE2_A_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._E2_A_BEFORE_IMPORT = value
				Me.SendPropertyChanged("E2_A_BEFORE_IMPORT")
				Me.OnE2_A_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E2_A_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property E2_A_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._E2_A_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._E2_A_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnE2_A_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E2_A_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("E2_A_BEFORE_IMPORT_NOTE")
				Me.OnE2_A_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E2_A_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property E2_A_BEFORE_START_WORK() As String
		Get
			Return Me._E2_A_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._E2_A_BEFORE_START_WORK, value) = false) Then
				Me.OnE2_A_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._E2_A_BEFORE_START_WORK = value
				Me.SendPropertyChanged("E2_A_BEFORE_START_WORK")
				Me.OnE2_A_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E2_A_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property E2_A_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._E2_A_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._E2_A_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnE2_A_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E2_A_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("E2_A_BEFORE_START_WORK_NOTE")
				Me.OnE2_A_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E2_B_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property E2_B_BEFORE_IMPORT() As String
		Get
			Return Me._E2_B_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._E2_B_BEFORE_IMPORT, value) = false) Then
				Me.OnE2_B_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._E2_B_BEFORE_IMPORT = value
				Me.SendPropertyChanged("E2_B_BEFORE_IMPORT")
				Me.OnE2_B_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E2_B_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property E2_B_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._E2_B_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._E2_B_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnE2_B_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E2_B_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("E2_B_BEFORE_IMPORT_NOTE")
				Me.OnE2_B_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E2_B_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property E2_B_BEFORE_START_WORK() As String
		Get
			Return Me._E2_B_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._E2_B_BEFORE_START_WORK, value) = false) Then
				Me.OnE2_B_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._E2_B_BEFORE_START_WORK = value
				Me.SendPropertyChanged("E2_B_BEFORE_START_WORK")
				Me.OnE2_B_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E2_B_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property E2_B_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._E2_B_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._E2_B_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnE2_B_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E2_B_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("E2_B_BEFORE_START_WORK_NOTE")
				Me.OnE2_B_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E2_C_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property E2_C_BEFORE_IMPORT() As String
		Get
			Return Me._E2_C_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._E2_C_BEFORE_IMPORT, value) = false) Then
				Me.OnE2_C_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._E2_C_BEFORE_IMPORT = value
				Me.SendPropertyChanged("E2_C_BEFORE_IMPORT")
				Me.OnE2_C_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E2_C_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property E2_C_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._E2_C_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._E2_C_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnE2_C_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E2_C_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("E2_C_BEFORE_IMPORT_NOTE")
				Me.OnE2_C_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E2_C_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property E2_C_BEFORE_START_WORK() As String
		Get
			Return Me._E2_C_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._E2_C_BEFORE_START_WORK, value) = false) Then
				Me.OnE2_C_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._E2_C_BEFORE_START_WORK = value
				Me.SendPropertyChanged("E2_C_BEFORE_START_WORK")
				Me.OnE2_C_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E2_C_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property E2_C_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._E2_C_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._E2_C_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnE2_C_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E2_C_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("E2_C_BEFORE_START_WORK_NOTE")
				Me.OnE2_C_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E3_A_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property E3_A_BEFORE_IMPORT() As String
		Get
			Return Me._E3_A_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._E3_A_BEFORE_IMPORT, value) = false) Then
				Me.OnE3_A_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._E3_A_BEFORE_IMPORT = value
				Me.SendPropertyChanged("E3_A_BEFORE_IMPORT")
				Me.OnE3_A_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E3_A_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property E3_A_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._E3_A_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._E3_A_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnE3_A_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E3_A_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("E3_A_BEFORE_IMPORT_NOTE")
				Me.OnE3_A_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E3_A_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property E3_A_BEFORE_START_WORK() As String
		Get
			Return Me._E3_A_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._E3_A_BEFORE_START_WORK, value) = false) Then
				Me.OnE3_A_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._E3_A_BEFORE_START_WORK = value
				Me.SendPropertyChanged("E3_A_BEFORE_START_WORK")
				Me.OnE3_A_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E3_A_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property E3_A_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._E3_A_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._E3_A_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnE3_A_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E3_A_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("E3_A_BEFORE_START_WORK_NOTE")
				Me.OnE3_A_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E3_B_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property E3_B_BEFORE_IMPORT() As String
		Get
			Return Me._E3_B_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._E3_B_BEFORE_IMPORT, value) = false) Then
				Me.OnE3_B_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._E3_B_BEFORE_IMPORT = value
				Me.SendPropertyChanged("E3_B_BEFORE_IMPORT")
				Me.OnE3_B_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E3_B_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property E3_B_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._E3_B_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._E3_B_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnE3_B_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E3_B_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("E3_B_BEFORE_IMPORT_NOTE")
				Me.OnE3_B_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E3_B_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property E3_B_BEFORE_START_WORK() As String
		Get
			Return Me._E3_B_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._E3_B_BEFORE_START_WORK, value) = false) Then
				Me.OnE3_B_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._E3_B_BEFORE_START_WORK = value
				Me.SendPropertyChanged("E3_B_BEFORE_START_WORK")
				Me.OnE3_B_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E3_B_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property E3_B_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._E3_B_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._E3_B_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnE3_B_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E3_B_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("E3_B_BEFORE_START_WORK_NOTE")
				Me.OnE3_B_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E3_C_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property E3_C_BEFORE_IMPORT() As String
		Get
			Return Me._E3_C_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._E3_C_BEFORE_IMPORT, value) = false) Then
				Me.OnE3_C_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._E3_C_BEFORE_IMPORT = value
				Me.SendPropertyChanged("E3_C_BEFORE_IMPORT")
				Me.OnE3_C_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E3_C_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property E3_C_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._E3_C_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._E3_C_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnE3_C_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E3_C_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("E3_C_BEFORE_IMPORT_NOTE")
				Me.OnE3_C_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E3_C_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property E3_C_BEFORE_START_WORK() As String
		Get
			Return Me._E3_C_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._E3_C_BEFORE_START_WORK, value) = false) Then
				Me.OnE3_C_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._E3_C_BEFORE_START_WORK = value
				Me.SendPropertyChanged("E3_C_BEFORE_START_WORK")
				Me.OnE3_C_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E3_C_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property E3_C_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._E3_C_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._E3_C_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnE3_C_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E3_C_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("E3_C_BEFORE_START_WORK_NOTE")
				Me.OnE3_C_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E3_D_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property E3_D_BEFORE_IMPORT() As String
		Get
			Return Me._E3_D_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._E3_D_BEFORE_IMPORT, value) = false) Then
				Me.OnE3_D_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._E3_D_BEFORE_IMPORT = value
				Me.SendPropertyChanged("E3_D_BEFORE_IMPORT")
				Me.OnE3_D_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E3_D_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property E3_D_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._E3_D_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._E3_D_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnE3_D_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E3_D_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("E3_D_BEFORE_IMPORT_NOTE")
				Me.OnE3_D_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E3_D_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property E3_D_BEFORE_START_WORK() As String
		Get
			Return Me._E3_D_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._E3_D_BEFORE_START_WORK, value) = false) Then
				Me.OnE3_D_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._E3_D_BEFORE_START_WORK = value
				Me.SendPropertyChanged("E3_D_BEFORE_START_WORK")
				Me.OnE3_D_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E3_D_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property E3_D_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._E3_D_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._E3_D_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnE3_D_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E3_D_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("E3_D_BEFORE_START_WORK_NOTE")
				Me.OnE3_D_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E4_A_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property E4_A_BEFORE_IMPORT() As String
		Get
			Return Me._E4_A_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._E4_A_BEFORE_IMPORT, value) = false) Then
				Me.OnE4_A_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._E4_A_BEFORE_IMPORT = value
				Me.SendPropertyChanged("E4_A_BEFORE_IMPORT")
				Me.OnE4_A_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E4_A_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property E4_A_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._E4_A_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._E4_A_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnE4_A_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E4_A_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("E4_A_BEFORE_IMPORT_NOTE")
				Me.OnE4_A_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E4_A_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property E4_A_BEFORE_START_WORK() As String
		Get
			Return Me._E4_A_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._E4_A_BEFORE_START_WORK, value) = false) Then
				Me.OnE4_A_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._E4_A_BEFORE_START_WORK = value
				Me.SendPropertyChanged("E4_A_BEFORE_START_WORK")
				Me.OnE4_A_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E4_A_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property E4_A_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._E4_A_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._E4_A_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnE4_A_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E4_A_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("E4_A_BEFORE_START_WORK_NOTE")
				Me.OnE4_A_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E4_B_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property E4_B_BEFORE_IMPORT() As String
		Get
			Return Me._E4_B_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._E4_B_BEFORE_IMPORT, value) = false) Then
				Me.OnE4_B_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._E4_B_BEFORE_IMPORT = value
				Me.SendPropertyChanged("E4_B_BEFORE_IMPORT")
				Me.OnE4_B_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E4_B_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property E4_B_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._E4_B_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._E4_B_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnE4_B_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E4_B_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("E4_B_BEFORE_IMPORT_NOTE")
				Me.OnE4_B_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E4_B_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property E4_B_BEFORE_START_WORK() As String
		Get
			Return Me._E4_B_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._E4_B_BEFORE_START_WORK, value) = false) Then
				Me.OnE4_B_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._E4_B_BEFORE_START_WORK = value
				Me.SendPropertyChanged("E4_B_BEFORE_START_WORK")
				Me.OnE4_B_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E4_B_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property E4_B_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._E4_B_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._E4_B_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnE4_B_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E4_B_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("E4_B_BEFORE_START_WORK_NOTE")
				Me.OnE4_B_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E4_C_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property E4_C_BEFORE_IMPORT() As String
		Get
			Return Me._E4_C_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._E4_C_BEFORE_IMPORT, value) = false) Then
				Me.OnE4_C_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._E4_C_BEFORE_IMPORT = value
				Me.SendPropertyChanged("E4_C_BEFORE_IMPORT")
				Me.OnE4_C_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E4_C_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property E4_C_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._E4_C_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._E4_C_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnE4_C_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E4_C_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("E4_C_BEFORE_IMPORT_NOTE")
				Me.OnE4_C_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E4_C_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property E4_C_BEFORE_START_WORK() As String
		Get
			Return Me._E4_C_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._E4_C_BEFORE_START_WORK, value) = false) Then
				Me.OnE4_C_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._E4_C_BEFORE_START_WORK = value
				Me.SendPropertyChanged("E4_C_BEFORE_START_WORK")
				Me.OnE4_C_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E4_C_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property E4_C_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._E4_C_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._E4_C_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnE4_C_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E4_C_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("E4_C_BEFORE_START_WORK_NOTE")
				Me.OnE4_C_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E4_D_BEFORE_IMPORT", DbType:="VarChar(2)")>  _
	Public Property E4_D_BEFORE_IMPORT() As String
		Get
			Return Me._E4_D_BEFORE_IMPORT
		End Get
		Set
			If (String.Equals(Me._E4_D_BEFORE_IMPORT, value) = false) Then
				Me.OnE4_D_BEFORE_IMPORTChanging(value)
				Me.SendPropertyChanging
				Me._E4_D_BEFORE_IMPORT = value
				Me.SendPropertyChanged("E4_D_BEFORE_IMPORT")
				Me.OnE4_D_BEFORE_IMPORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E4_D_BEFORE_IMPORT_NOTE", DbType:="VarChar(50)")>  _
	Public Property E4_D_BEFORE_IMPORT_NOTE() As String
		Get
			Return Me._E4_D_BEFORE_IMPORT_NOTE
		End Get
		Set
			If (String.Equals(Me._E4_D_BEFORE_IMPORT_NOTE, value) = false) Then
				Me.OnE4_D_BEFORE_IMPORT_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E4_D_BEFORE_IMPORT_NOTE = value
				Me.SendPropertyChanged("E4_D_BEFORE_IMPORT_NOTE")
				Me.OnE4_D_BEFORE_IMPORT_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E4_D_BEFORE_START_WORK", DbType:="VarChar(2)")>  _
	Public Property E4_D_BEFORE_START_WORK() As String
		Get
			Return Me._E4_D_BEFORE_START_WORK
		End Get
		Set
			If (String.Equals(Me._E4_D_BEFORE_START_WORK, value) = false) Then
				Me.OnE4_D_BEFORE_START_WORKChanging(value)
				Me.SendPropertyChanging
				Me._E4_D_BEFORE_START_WORK = value
				Me.SendPropertyChanged("E4_D_BEFORE_START_WORK")
				Me.OnE4_D_BEFORE_START_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E4_D_BEFORE_START_WORK_NOTE", DbType:="VarChar(50)")>  _
	Public Property E4_D_BEFORE_START_WORK_NOTE() As String
		Get
			Return Me._E4_D_BEFORE_START_WORK_NOTE
		End Get
		Set
			If (String.Equals(Me._E4_D_BEFORE_START_WORK_NOTE, value) = false) Then
				Me.OnE4_D_BEFORE_START_WORK_NOTEChanging(value)
				Me.SendPropertyChanging
				Me._E4_D_BEFORE_START_WORK_NOTE = value
				Me.SendPropertyChanged("E4_D_BEFORE_START_WORK_NOTE")
				Me.OnE4_D_BEFORE_START_WORK_NOTEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPNO_ADD", DbType:="VarChar(10)")>  _
	Public Property OPNO_ADD() As String
		Get
			Return Me._OPNO_ADD
		End Get
		Set
			If (String.Equals(Me._OPNO_ADD, value) = false) Then
				Me.OnOPNO_ADDChanging(value)
				Me.SendPropertyChanging
				Me._OPNO_ADD = value
				Me.SendPropertyChanged("OPNO_ADD")
				Me.OnOPNO_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ADD", DbType:="DateTime")>  _
	Public Property DATE_ADD() As System.Nullable(Of Date)
		Get
			Return Me._DATE_ADD
		End Get
		Set
			If (Me._DATE_ADD.Equals(value) = false) Then
				Me.OnDATE_ADDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ADD = value
				Me.SendPropertyChanged("DATE_ADD")
				Me.OnDATE_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPNO_UPDATE", DbType:="VarChar(10)")>  _
	Public Property OPNO_UPDATE() As String
		Get
			Return Me._OPNO_UPDATE
		End Get
		Set
			If (String.Equals(Me._OPNO_UPDATE, value) = false) Then
				Me.OnOPNO_UPDATEChanging(value)
				Me.SendPropertyChanging
				Me._OPNO_UPDATE = value
				Me.SendPropertyChanged("OPNO_UPDATE")
				Me.OnOPNO_UPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_UPDATE", DbType:="DateTime")>  _
	Public Property DATE_UPDATE() As System.Nullable(Of Date)
		Get
			Return Me._DATE_UPDATE
		End Get
		Set
			If (Me._DATE_UPDATE.Equals(value) = false) Then
				Me.OnDATE_UPDATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE_UPDATE = value
				Me.SendPropertyChanged("DATE_UPDATE")
				Me.OnDATE_UPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_NAME", DbType:="VarChar(50)")>  _
	Public Property STATUS_NAME() As String
		Get
			Return Me._STATUS_NAME
		End Get
		Set
			If (String.Equals(Me._STATUS_NAME, value) = false) Then
				Me.OnSTATUS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_NAME = value
				Me.SendPropertyChanged("STATUS_NAME")
				Me.OnSTATUS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IP", DbType:="VarChar(10)")>  _
	Public Property IP() As String
		Get
			Return Me._IP
		End Get
		Set
			If (String.Equals(Me._IP, value) = false) Then
				Me.OnIPChanging(value)
				Me.SendPropertyChanging
				Me._IP = value
				Me.SendPropertyChanged("IP")
				Me.OnIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOCUMENT_ATTACH_NAME", DbType:="VarChar(150)")>  _
	Public Property DOCUMENT_ATTACH_NAME() As String
		Get
			Return Me._DOCUMENT_ATTACH_NAME
		End Get
		Set
			If (String.Equals(Me._DOCUMENT_ATTACH_NAME, value) = false) Then
				Me.OnDOCUMENT_ATTACH_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DOCUMENT_ATTACH_NAME = value
				Me.SendPropertyChanged("DOCUMENT_ATTACH_NAME")
				Me.OnDOCUMENT_ATTACH_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOCUMENT_ATTACH_CONTENT_TYPE", DbType:="VarChar(50)")>  _
	Public Property DOCUMENT_ATTACH_CONTENT_TYPE() As String
		Get
			Return Me._DOCUMENT_ATTACH_CONTENT_TYPE
		End Get
		Set
			If (String.Equals(Me._DOCUMENT_ATTACH_CONTENT_TYPE, value) = false) Then
				Me.OnDOCUMENT_ATTACH_CONTENT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._DOCUMENT_ATTACH_CONTENT_TYPE = value
				Me.SendPropertyChanged("DOCUMENT_ATTACH_CONTENT_TYPE")
				Me.OnDOCUMENT_ATTACH_CONTENT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOCUMENT_ATTACH_DATA", DbType:="VarBinary(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DOCUMENT_ATTACH_DATA() As Byte()
		Get
			Return Me._DOCUMENT_ATTACH_DATA
		End Get
		Set
			If (Object.Equals(Me._DOCUMENT_ATTACH_DATA, value) = false) Then
				Me.OnDOCUMENT_ATTACH_DATAChanging(value)
				Me.SendPropertyChanging
				Me._DOCUMENT_ATTACH_DATA = value
				Me.SendPropertyChanged("DOCUMENT_ATTACH_DATA")
				Me.OnDOCUMENT_ATTACH_DATAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

Partial Public Class Insert_UserResult
	
	Private _Column1 As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="", Storage:="_Column1", DbType:="Int NOT NULL")>  _
	Public Property Column1() As Integer
		Get
			Return Me._Column1
		End Get
		Set
			If ((Me._Column1 = value)  _
						= false) Then
				Me._Column1 = value
			End If
		End Set
	End Property
End Class

Partial Public Class Validate_UserResult
	
	Private _UserId As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="Int")>  _
	Public Property UserId() As System.Nullable(Of Integer)
		Get
			Return Me._UserId
		End Get
		Set
			If (Me._UserId.Equals(value) = false) Then
				Me._UserId = value
			End If
		End Set
	End Property
End Class
